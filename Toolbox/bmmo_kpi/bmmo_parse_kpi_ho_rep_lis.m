function kpi_ho = bmmo_parse_kpi_ho_rep_lis(kpi_ho, kpi_rep_ho1,kpi_rep_ho2, compare)
%
% function kpi_ho = bmmo_parse_kpi_ho_rep_lis(kpi_ho, kpi_rep_ho1,kpi_rep_ho2, compare)
%
%Given the K-factors from the LIS job report, parse the
%contents into a BMMO-NXE kpi structure
% Input:
%   kpi_rep_ho1 : K-factors Chuck 1 from job report 
%   kpi_rep_ho2 : K-factors Chuck 2 from job report 
%   kpi_ho      : KPI structure to copy the output

% Optional Input:
%   compare     :  switch (true/false) used for Delta k factors (monitoring)

% Output:
%   kpi_ho  :  K-factors KPI structure as generated by
%   BMMO model
%
% Changelog
% 20200812  ANBZ Creation
% 20201120  OGIE Update for 35par

if nargin < 4
    compare = false;
end

% mapping table from kpi rep
kpi_rep_pars = {'SecondOrderMagnification', ...
    'Trapezoid', ...
    'Bow', ...
    'ThirdOrderMagnification', ...
    'Accordion', ...
    'CShapeDistortion', ...
    'ThirdOrderFlow'};

kpi_rep_dim =  {'X', ...
    'Y'};

% mapping table from kpi pars to k-factor names
%           col1: x, col2: y
kpi_kf_map = {'k7', 'k8'; ...
    'k9', 'k10'; ...
    'k11', 'k12'; ...
    'k13', 'k14'; ...
    'k15', 'k16'; ...
    'k17', 'k18'; ...
    'k19', 'k20'};

kpi_chk = {'chk1', ...
           'chk2'};

if compare
    for ii = 1:2
        kpi_chk{ii} = [kpi_chk{ii} '_compare_delta'];
    end
end

parscale = [1e-5 1e-5 1e-5 1e-3 1e-3 1e-3 1e-3];

for ipar = 1:length(kpi_rep_pars)
    for idim = 1:2
        for ichk = 1
            fname = ['ovl_' kpi_kf_map{ipar, idim} '_' kpi_chk{ichk}];
            val = kpi_rep_ho1.(kpi_rep_pars{ipar}).(kpi_rep_dim{idim});
            kpi_ho.(fname) = str2double(val) * parscale(ipar);
        end
        
        
        for ichk = 2
            fname = ['ovl_' kpi_kf_map{ipar, idim} '_' kpi_chk{ichk}];
            val = kpi_rep_ho2.(kpi_rep_pars{ipar}).(kpi_rep_dim{idim});
            kpi_ho.(fname) = str2double(val) * parscale(ipar);
        end
    end
end

if isfield(kpi_rep_ho1,'K51')
    % 35par situation - add the extra parameters
    % this is a flatlist, no XY separation like the other pars
    kpi_rep_pars35 = {'K22','K24','K25','K26','K27','K29','K32',...
        'K34','K36','K37','K39','K41','K46','K48','K51'};
    kpi_kf_map35 = {'k22','k24','k25','k26','k27','k29','k32',...
        'k34','k36','k37','k39','k41','k46','k48','k51'};
    % convert to all nm & cm to m: nm/cm4 -> 1e-9/1e-8=1e-1
    parscale35 = [1e-1 1e-1 1e-1 1e-1 1e-1 1e-1 1e+1 1e+1 1e+1 1e+1 1e+1 1e+1 1e+3 1e+3 1e+3];

    for ipar = 1:length(kpi_rep_pars35)
        for ichk = 1
            fname = ['ovl_' kpi_kf_map35{ipar} '_' kpi_chk{ichk}];
            val = kpi_rep_ho1.(kpi_rep_pars35{ipar});
            kpi_ho.(fname) = str2double(val) * parscale35(ipar);
        end
        
        for ichk = 2
            fname = ['ovl_' kpi_kf_map35{ipar} '_' kpi_chk{ichk}];
            val = kpi_rep_ho2.(kpi_rep_pars35{ipar});
            kpi_ho.(fname) = str2double(val) * parscale35(ipar);
        end
    end    
end