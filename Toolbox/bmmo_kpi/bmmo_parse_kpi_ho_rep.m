function kpi_ho = bmmo_parse_kpi_ho_rep(kpi_ho, kpi_rep_ho, compare)
%
% function kpi_ho = bmmo_parse_kpi_ho_rep(kpi_ho, kpi_rep_ho, compare)
%
%Given the K-factors from the OTAS job report, parse the
%contents into a BMMO-NXE kpi structure
% Input:
%   kpi_rep_ho : K-factors from job report 
%   kpi_ho      : KPI structure to copy the output

% Optional Input:
%   compare     :  switch (true/false) used for Delta k factors (monitoring)

% Output:
%   kpi_ho  :  K-factors KPI structure structure as generated by
%   BMMO model
%
% Changelog
% 20171030 SBPR Creation

if nargin < 3
    compare = false;
end

% mapping table from kpi rep 
kpi_rep_pars = {'SecondOrderMagnification', ...
                'Trapezoid', ...
                'Bow', ...
                'ThirdOrderMagnification', ...
                'Accordion', ...
                'CShapeDistortion', ...
                'ThirdOrderFlow'};
                
kpi_rep_dim =  {'X', ...
                'Y'};
            
kpi_rep_chk =   {'Chuck1', ...
                'Chuck2'};
                
% mapping table from kpi pars to k-factor names
%           col1: x, col2: y
kpi_kf_map = {'k7', 'k8'; ...
              'k9', 'k10'; ...
              'k11', 'k12'; ...
              'k13', 'k14'; ...
              'k15', 'k16'; ...
              'k17', 'k18'; ...
              'k19', 'k20'};               
                
kpi_chk =       {'chk1', ...
                'chk2'};

if compare
   for ii = 1:2
      kpi_chk{ii} = [kpi_chk{ii} '_compare_delta']; 
   end
end
            
parscale = [1e-5 1e-5 1e-5 1e-3 1e-3 1e-3 1e-3];
            
for ipar = 1:length(kpi_rep_pars)
    for idim = 1:2
        for ichk = 1:2
            fname = ['ovl_' kpi_kf_map{ipar, idim} '_' kpi_chk{ichk}];
            val = kpi_rep_ho.(kpi_rep_pars{ipar}).(kpi_rep_dim{idim}).(kpi_rep_chk{ichk});
            kpi_ho.(fname) = str2double(val) * parscale(ipar);
        end
    end
end