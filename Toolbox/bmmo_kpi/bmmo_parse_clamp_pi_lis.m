function kpi_ovl = bmmo_parse_clamp_pi_lis(kpi_rep1, kpi_rep2, mode)
%
% function kpi_ovl = bmmo_parse_clamp_pi_lis(kpi_rep1, kpi_rep2)
%
%Given the clamp statistics from the LIS job report, parse the
%contents into a BMMO-NXE kpi structure
% Input:
%   kpi_rep1:  Clamp Stats  Chuck 1 from the job report
%   kpi_rep2:  Clamp Stats  Chuck 2 from the job report
%   mode       : 'controlled' for parsing controlled clamp KPIs
%              : 'correction' for parsing correction clamp KPIs
%              : 'uncontrolled' for parsing uncontrolled clamp KPIs
%
% Output:
%   kpi_ovl :  KPI structure as generated by BMMO model

% mapping table from kpi rep
kpi_rep_map = {'Max', ...
    'Max99.7', ...
    'M3s', ...
    'StDev3', ...
    'Mean', ...
    'Median', ...
    'X', ...
    'Y'};

rep_type = {'KaCapturedOuterMetrics', 'KaCapturedEdgeRadialMetrics',...
    'OuterMetrics','EdgeRadialMetrics' 'InnerMetrics' ...
    'EdgeRadialInwardMetrics'};

% mapping table from kpi out
kpi_ovl_map = {'max', ...
    '997', ...
    'm3s', ...
    '3std', ...
    'mean', ...
    'median', ...
    'x', ...
    'y'};

kpi_chuck = { 'chk1', 'chk2'};
ovl_type = {'outer', 'radial','outer', 'radial', 'inner', 'radial_inward'};

dim_index =  7:8;
% select metrics based on mode
if strcmp(mode, 'controlled')
    metric = [3, 5];
    radial_metric = 4;
elseif strcmp(mode, 'uncontrolled')
    radial_metric = [4 6];
elseif strcmp(mode, 'modelled')
    metric = 1;
    radial_metric = 2;
end

if strcmp(mode, 'controlled') || strcmp(mode, 'modelled')
    for imetric = metric
        for istat = 1:4
            for idim = dim_index
                
                datastr{1} =  kpi_rep1.(rep_type{imetric}).(kpi_rep_map{istat}).(kpi_rep_map{idim});
                datastr{2} =  kpi_rep2.(rep_type{imetric}).(kpi_rep_map{istat}).(kpi_rep_map{idim});
                
                for ichuck = 1:2
                    fieldname = ['ovl_' ovl_type{imetric} '_' kpi_chuck{ichuck} '_' kpi_ovl_map{istat} '_' kpi_ovl_map{idim}];
                    kpi_ovl.(fieldname) = str2double(datastr{ichuck}) * 1e-9;
                end
            end
        end
    end
end

for imetric = radial_metric
    for istat = 5:6
        datastr{1} =  kpi_rep1.(rep_type{imetric}).(kpi_rep_map{istat});
        datastr{2} =  kpi_rep2.(rep_type{imetric}).(kpi_rep_map{istat});
        
        for ichuck = 1:2
            fieldname = ['ovl_'  ovl_type{imetric} '_' kpi_chuck{ichuck} '_' kpi_ovl_map{istat}];
            kpi_ovl.(fieldname) = str2double(datastr{ichuck}) * 1e-9;
        end
    end
end


