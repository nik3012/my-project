 function kpi_struct = bmmo_parse_kpi_ADELsbcrep_inlineSDM(ADELsbcrep)
% function kpi_struct = bmmo_parse_ADELsbc_inlineSDM_kpis(ADELsbcrep)
%
% Given an ADELsbcrep file (optionally already loaded with xml_load), parse
% the contents into a BMMO-NXE kpi structure
%
% Input:
%   ADELsbcrep: full path of ADEL file, or parsed ADELsbcrep structure
%       generated by xml_load
%
% Output:
%   kpi_struct: KPI structure as generated by bmmo_nxe_drift_control_model
%
% 20200917 LUDU Creation

if ischar(ADELsbcrep)
    ADELsbcrep = xml_load(ADELsbcrep);
end

% parse POB kpis (not per chuck)
kpi_struct.applied.InlineSDM.maxLensCorr.dx = str2double(ADELsbcrep.AppliedCorrectionResults.KpiPob.KpiMaxCorrPob.X) * 1e-9;
kpi_struct.applied.InlineSDM.maxLensCorr.dy = str2double(ADELsbcrep.AppliedCorrectionResults.KpiPob.KpiMaxCorrPob.Y) * 1e-9;
kpi_struct.applied.InlineSDM.maxLensRes.dx = str2double(ADELsbcrep.AppliedCorrectionResults.KpiPob.KpiMaxResPob.X) * 1e-9;
kpi_struct.applied.InlineSDM.maxLensRes.dy = str2double(ADELsbcrep.AppliedCorrectionResults.KpiPob.KpiMaxResPob.Y) * 1e-9;
kpi_struct.applied.InlineSDM.Z2_2 = str2double(ADELsbcrep.AppliedCorrectionResults.KpiPob.KpiZ2_2) * 1e-9;
kpi_struct.applied.InlineSDM.Z3_2 = str2double(ADELsbcrep.AppliedCorrectionResults.KpiPob.KpiZ3_2) * 1e-9;

% parse HOC kpis (per chuck)
kpi_sbcrep = fieldnames(ADELsbcrep.AppliedCorrectionResults.KpiHocList(1).elt);

if contains(kpi_sbcrep(1), 'ChuckId')
    kpi_sbcrep(1) = [];
end

kpi_new = erase(kpi_sbcrep, 'Kpi');

for ic = 1:2
    if isfield(ADELsbcrep.AppliedCorrectionResults.KpiHocList(ic).elt, 'ChuckId')
        Chk = str2double(ADELsbcrep.AppliedCorrectionResults.KpiHocList(ic).elt.ChuckId(end));
    else
        Chk = ic;
    end
    for ifd = 1:length(kpi_sbcrep)-1
        kpi_struct.applied.InlineSDM.(kpi_new{ifd})(Chk).dx = str2double(ADELsbcrep.AppliedCorrectionResults.KpiHocList(Chk).elt.(kpi_sbcrep{ifd}).X) * 1e-9;
        kpi_struct.applied.InlineSDM.(kpi_new{ifd})(Chk).dy = str2double(ADELsbcrep.AppliedCorrectionResults.KpiHocList(Chk).elt.(kpi_sbcrep{ifd}).Y) * 1e-9;   
    end
    kpi_struct.applied.InlineSDM.(kpi_new{end})(Chk).dx = str2double(ADELsbcrep.AppliedCorrectionResults.KpiHocList(Chk).elt.(kpi_sbcrep{end}).MsdX) * 1e-9;
    kpi_struct.applied.InlineSDM.(kpi_new{end})(Chk).dy = str2double(ADELsbcrep.AppliedCorrectionResults.KpiHocList(Chk).elt.(kpi_sbcrep{end}).MsdY) * 1e-9;
end