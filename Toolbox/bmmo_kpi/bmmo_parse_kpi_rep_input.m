function kpi_input = bmmo_parse_kpi_rep_input(kpi_rep_input)
%
% function kpi_input = bmmo_parse_kpi_rep_input(kpi_rep_input)
%
%Given the Controlled input KPIs from the OTAS job report, parse the
%contents into a BMMO-NXE kpi structure
% Input:
%   kpi_rep_input  : Controlled input KPIs from the job report
% 
% Output:
%   kpi_input :  KPI Controlled overlay structure as generated by
%   BMMO model
%
% Changelog
% 20171030 SBPR Creation

chuckstr = {'Chuck1','Chuck2'};

kpi_input.outlier_coverage = str2double(kpi_rep_input.OutlierCoverage.ExposureGrid.Min.Value) * 1e-2;

kpi_input.overlay = bmmo_parse_kpi_overlay(kpi_rep_input.ExposureGrid);

for ichuck = 1:2
    kpi_input.w2w.(['ovl_exp_grid_chk' num2str(ichuck) '_max_w2w_var']) =   str2double(kpi_rep_input.W2wVariation.ExposureGrid.Max.(chuckstr{ichuck})) * 1e-9;


    kpi_input.valid.(['ovl_exp_grid_chk' num2str(ichuck) '_nr_valids']) =    str2double(kpi_rep_input.DataPoints.ExposureGrid.Valids.(chuckstr{ichuck}));
    kpi_input.valid.(['ovl_exp_grid_chk' num2str(ichuck) '_nr_readout_nans']) =  str2double(kpi_rep_input.DataPoints.ExposureGrid.ReadoutNans.(chuckstr{ichuck}));
    kpi_input.valid.(['ovl_exp_grid_chk' num2str(ichuck) '_nr_invalids']) =  str2double(kpi_rep_input.DataPoints.ExposureGrid.Invalids.(chuckstr{ichuck}));
    kpi_input.valid.(['ovl_exp_grid_chk' num2str(ichuck) '_nr_outliers']) =  str2double(kpi_rep_input.DataPoints.ExposureGrid.Outliers.(chuckstr{ichuck}));
end


