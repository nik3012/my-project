function bmmo_assert_equal_wdm_MATLAB_LIS(wdm, select_WDM, print_type, plot_type)
% function bmmo_assert_equal_wdm_MATLAB_LIS(wdm, select_WDM, print_type, plot_type)
%
% Wrapper for LIS SP validation of waferdatamaps: delta, no. of valids, plots of delta
% model and vcp.
%
% INPUTS
%
% wdm : struct containing:
%
% wdm.MATLAB : MATLAB waferdatamaps struct generated by bmmo nxe drift control
% model
%
% wdm.LIS : LIS waferdatamps struct parsed from ADELwdm files
%
% wdm.output :filename to output the assertion results,
% eg: 'output.txt' or provide outfile = stdout for printing to command line
%
% OPTIONAL INPUTS
%
% select_WDM: select which waferdatamaps to compare ('all' or subset e.g. 'SUSD')
% print_type = 0, shows if delta is OK/NOK and # of valids are matching
% print_type = 1, shows the delta for each chuck/wafer
% print_type = 2, shows the delta and number of valid points for each chuck/wafer
% plot_type  = 1, Plots the delta ovl plots for each chuck/wafer
% plot_type  = 2, Plots the Model,VCP and delta ovl plots for each chuck/wafer

if nargin < 4
    plot_type = 0;   
else
    openppt('new')
end

if nargin < 3
    print_type = 0;    
end

if nargin < 3
    select_WDM = 'all';
end

if isempty(wdm.output)
    outfile = stdout;
else
    if ischar(wdm.output)
        outfile = fopen(wdm.output, 'w');
        if contains(wdm.output, 'MATLABvsLIS')
            title = 'MATLAB vs LIS';
        end
    else
        outfile = wdm.output;
    end
end

f2  = fieldnames(wdm.LIS);
corr = {'delta_unfiltered', 'total_unfiltered', 'total_filtered'};

if sum(contains(f2,'33')) > 0
    Intra_pars = '33';
else
    Intra_pars = '18';
end

if contains(select_WDM, 'all')
    str2 = {'Wafer_Heating','susd', 'Mirror_exposure','KA_exposure_grid','bao','Intrafield_raw','correction_overlay', ['Intrafield_nce_', Intra_pars, 'par']};
    str1 = {'WH','SUSD', 'MI','KA','BAO','INTRAF_raw','TotalSBCcorrection', ['INTRAF_',Intra_pars,'par_NCE']};
    str3 = {'model_residual','controlled_meas', 'controlled_meas_per_wafer', 'uncontrolled_meas', 'uncontrolled_meas_per_wafer', 'previous_actuated_inlineSDM'};
    str4 = {'residual_overlay','controlled_overlay', 'controlled_overlay_per_wafer', 'uncontrolled_overlay', 'uncontrolled_overlay_per_wafer', 'previous_actuated_inlineSDM' };
    
else
    str2 = {'Wafer_Heating','susd', 'Mirror_exposure','KA_exposure_grid','bao','Intrafield_raw','correction_overlay', ['Intrafield_nce_', Intra_pars, 'par']};
    str1 = {'WH','SUSD', 'MI','KA','BAO','INTRAF_raw','TotalSBCcorrection',['INTRAF_',Intra_pars,'par_NCE']};
    str3 = {'model_residual','controlled_meas', 'controlled_meas_per_wafer', 'uncontrolled_meas', 'uncontrolled_meas_per_wafer', 'previous_actuated_inlineSDM'};
    str4 = {'residual_overlay','controlled_overlay', 'controlled_overlay_per_wafer', 'uncontrolled_overlay', 'uncontrolled_overlay_per_wafer', 'previous_actuated_inlineSDM' };
    index = contains(str1, WDM);
    str2 = str2(index);
    str1 = str1(index);
    
    index = contains(str3, WDM);
    str3 = str3(index);
    str4 = str4(index);
end

fprintf(outfile,['WDMs: ', title,'\n\n']);

if any(contains(str2,'Intrafield'))
    tmp = wdm.MATLAB;
    for ichk = 1:2
        wdm.MATLAB.delta_unfiltered.INTRAF_raw(ichk) = ovl_get_wafers(tmp.delta_unfiltered.INTRAF_raw,ichk);
        wdm.MATLAB.total_unfiltered.INTRAF_raw(ichk) = ovl_get_wafers(tmp.total_unfiltered.INTRAF_raw,ichk);
        wdm.MATLAB.total_filtered.INTRAF_raw(ichk) = ovl_get_wafers(tmp.total_filtered.INTRAF_raw,ichk);
        
        wdm.MATLAB.total_filtered.(str1{end})(ichk) = ovl_get_wafers(tmp.total_filtered.(str1{end}),ichk);
        wdm.MATLAB.total_unfiltered.(str1{end})(ichk) = ovl_get_wafers(tmp.total_unfiltered.(str1{end}),ichk);
        
        wdm.LIS.total_unfiltered_Intrafield_raw(ichk) = ovl_average_fields(wdm.LIS.total_unfiltered_Intrafield_raw(ichk));
        wdm.LIS.total_filtered_Intrafield_raw(ichk) = ovl_average_fields(wdm.LIS.total_filtered_Intrafield_raw(ichk));
        wdm.LIS.delta_unfiltered_Intrafield_raw(ichk) = ovl_average_fields(wdm.LIS.delta_unfiltered_Intrafield_raw(ichk));
        
        if sum(contains(f2,'33')) > 0
            wdm.LIS.total_filtered_Intrafield_nce_33par(ichk) = ovl_average_fields(wdm.LIS.total_filtered_Intrafield_nce_33par(ichk));
            wdm.LIS.total_unfiltered_Intrafield_nce_33par(ichk) = ovl_average_fields(wdm.LIS.total_unfiltered_Intrafield_nce_33par(ichk));
        else
            wdm.LIS.total_filtered_Intrafield_nce_18par(ichk) = ovl_average_fields(wdm.LIS.total_filtered_Intrafield_nce_18par(ichk));
            wdm.LIS.total_unfiltered_Intrafield_nce_18par(ichk) = ovl_average_fields(wdm.LIS.total_unfiltered_Intrafield_nce_18par(ichk));
        end
    end
end

if any(contains(str4,'inline'))
    for ichk = 1:2
        wdm.LIS.previous_actuated_inlineSDM(ichk) = ovl_average_fields(wdm.LIS.previous_actuated_inlineSDM(ichk));
    end
end

if any(contains(str3, 'uncontrolled_meas_per_wafer'))
    for iwafer = 1: wdm.MATLAB.controlled_meas_per_wafer.nwafer
        tmp1(iwafer) = ovl_get_wafers(wdm.MATLAB.uncontrolled_meas_per_wafer, iwafer);
    end
    wdm.MATLAB.uncontrolled_meas_per_wafer = tmp1;
end

if any(contains(str3, 'controlled_meas_per_wafer'))
    for iwafer = 1: wdm.MATLAB.controlled_meas_per_wafer.nwafer
        tmp2(iwafer) = ovl_get_wafers(wdm.MATLAB.controlled_meas_per_wafer, iwafer);
    end
    wdm.MATLAB.controlled_meas_per_wafer = tmp2;
end

for iii = 1:length(str1)
    if contains(str1{iii}, 'NCE')
        corr = {'total_unfiltered', 'total_filtered'};
    end
    
    if isfield(wdm.MATLAB.total_filtered, str1{iii}) && any(contains(f2, str2{iii}))
        for ii = 1:length(corr)
            mli1 = wdm.MATLAB.(corr{ii}).(str1{iii});
            mli2 = wdm.LIS.([corr{ii} '_' str2{iii}]);
            plot_name = [(corr{ii}) ' ' (str1{iii})];
            bmmo_delta_wdm_MATLAB_LIS(mli1, mli2, plot_name, print_type, plot_type, outfile)
        end
    end
end

for iii = 1:length(str3)
    if  isfield(wdm.MATLAB, str3{iii}) && any(contains(f2, str4{iii}))
        mli1 = wdm.MATLAB.(str3{iii});
        mli2 = wdm.LIS.(str4{iii});
        plot_name = str4{iii};
        bmmo_delta_wdm_MATLAB_LIS(mli1, mli2, plot_name, print_type, plot_type, outfile)
    end
end

end