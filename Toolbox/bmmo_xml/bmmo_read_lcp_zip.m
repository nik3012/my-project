function [input_struct, bar_struct, sbc_out, job_report, invalids, wdm_xml] = bmmo_read_lcp_zip(zip_path, filter, bar_struct)
% function [input_struct, bar_struct, sbc_out, job_report, invalids, wdm_xml] = bmmo_read_lcp_zip(zip_path, filter, bar_struct)
%
% Read a zip file created by an LCP/VCP BMMO-NXE job (recover to baseline or
% control to baseline), recreating the BMMO-NXE Matlab input structure.
% The function uses bmmo_read_lcp_output to create the actual output
%
% Input: zip_path: full path of zip file
%
% Optional Input:
%   filter: flag to determine filtering type
%       0: recover to baseline
%       1: control to baseline
%       2: from LCP/VCP job report (default)
%
% Output:
%   input_struct: recreating Matlab input structure as generated by LCP/VCP
%   bar_struct: updated bar struct or []
%   sbc_out   : SBC corrections from recipe
%   job_report: LCP/VCP job report
%   invalids  : Invalidated data (may not be produced for VCP)
%
% Optional output:
%   wdm_xml   : xml loaded ADELwaferdatamap
%
% Note on the job_report:
% use the bmmo_parse_kpi* functions to get the kpi values. This will:
% * convert the text to numerical values
% * for OTAS data: field names like 'Max99.7' converted to something that 
%   Matlab can handle properly. That is, the 99.7 part is translated to a 
%   name with _997 in it.
% See e.g. bmmo_parse_kpi_res.m how this is done.


if nargin < 2
%Using time filter from LCP job report
    filter = 2;
end

if nargin < 3
    bar_struct = [];
end

tmpdir = [tempname '_LCP_ZIP'];
mkdir(tmpdir);
cleanupTempDir = onCleanup(@()rmdir(tmpdir, 's'));

input_struct = 0;

try     
    bar_struct = bmmo_log_progress(['Unzipping ' zip_path], bar_struct);
    unzip7(zip_path, tmpdir);
    
    if nargout > 5
        [input_struct, sbc_out, job_report, invalids, bar_struct, wdm_xml] = bmmo_read_lcp_output(tmpdir, tmpdir, filter, bar_struct);
    else
        [input_struct, sbc_out, job_report, invalids, bar_struct]          = bmmo_read_lcp_output(tmpdir, tmpdir, filter, bar_struct);
    end
        
     bar_struct = bmmo_log_progress(['Parsing completed.',newline], bar_struct);

catch read_err
   disp(read_err);
   rethrow(read_err);
end


