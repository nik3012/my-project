function mlo = bmmo_encode_wid(widstr, type)
% function mlo = bmmo_encode_wid(widstr)
%
% Given a waferid, encode it (top layer and bottom) as offsets in an ml
% structure
%
% Input: widstr: string encoding wafer id
%
% Output: mlo: 1x2 array, with wid_up and wid_down positions
%
% 20160606 SBPR Creation

if nargin < 2
    type = 'ys';
end

% conversion char,bit-array to decimal array and back, with symbols of 2^m
bit2num = @(x,m) arrayfun(@(i) bin2dec(x(i+(0:(m-1)))),1:m:length(x));
num2bit = @(x,m) strjoin(arrayfun(@(i) dec2bin(x(i),m),1:length(x),'un',0),'');

% locations of sub-codes within overall code
bit_locations.ecc1 =    [41:44 57:60 73:76 89:92 105:108 121:124];
bit_locations.ecc2 =    [137:140 153:156];
bit_locations.ecc3 =     177:184;
bit_locations.wid =     [29:40 45:56 61:72 77:88 93:104 109:120 125:136 141:152];
bit_locations.aux =     [1:28 157:176];

% mark locations, ys only
xw = [-41.84000 -41.32000 -40.76000 -40.24000 -39.72000 -39.20000 -36.52000 -36.00000 -35.48000 -34.96000 -34.40000 -33.88000 -33.36000 -32.84000 -25.92000 -25.40000 -24.88000 -24.36000 -23.80000 -23.28000 -22.76000 -22.24000 -19.56000 -19.04000 -18.52000 -18.00000 -17.44000 -16.92000 -16.40000 -15.88000 -13.20000 -12.68000 -12.16000 -11.64000 -11.08000 -10.56000 -10.04000  -9.52000  -6.84000  -6.32000  -5.80000  -5.28000  -4.72000  -4.20000  -3.68000  -3.16000   3.76000   4.28000   4.80000   5.32000   5.88000   6.40000   6.92000   7.44000  10.12000  10.64000  11.16000  11.68000  12.24000  12.76000  13.28000  13.80000  16.48000  17.00000  17.52000  18.04000  18.60000  19.12000  19.64000  20.16000  22.84000  23.36000  23.88000  24.40000  24.96000  25.48000  26.00000  26.52000  33.44000  33.96000  34.48000  35.00000  35.56000  36.08000  36.60000  37.12000  39.80000  40.32000  40.84000  41.36000  41.92000  42.44000]';
yw{1}
yw{2}


if strcmp(type, 'twinscan')
    yw{1} = yw{1} + 40e-3;
    yw{2} = yw{2} + 40e-3;
    xw = xw + 180e-3;
end

% declare a 184-bit all-zero string
allbits = char(zeros(1,184) + '0');
wid_zeropad = char(zeros(1,96) + '0');
widbits = num2bit(widstr, 8);

lw = length(widbits);

% zero-pad widbits to 96 bits
wid_zeropad(1+(96-lw):end) = widbits; 

% insert the wid bits in the right location
allbits(bit_locations.wid) = wid_zeropad;

% convert the bits into offsets
base4bits = (reshape(allbits, 2, []))';
offsets = [-3 -1 1 3];
offsetmap = bin2dec(base4bits) + 1;
dx = offsets(offsetmap) * 1e-8;

% encode the bits as offsets
mlo = repmat(struct('nwafer', 1, 'nfield', 92, 'nmark', 1, 'nlayer', 1, 'wd', [], 'layer', [], 'tlgname', ''), 1, 2);

for il = 1:2
    mlo(il).wd.xc = xw * 1e-3;
    mlo(il).wd.yc = yw{il} * 1e-3;
    mlo(il).wd.xf = zeros(size(xw));
    mlo(il).wd.yf = mlo(il).wd.xf;
    mlo(il).wd.xw = xw * 1e-3;
    mlo(il).wd.yw = yw{il} * 1e-3;
    mlo(il).layer.wr.dx = dx';
    mlo(il).layer.wr.dy = mlo(il).wd.yf;
end



