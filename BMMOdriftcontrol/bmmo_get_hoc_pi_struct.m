function pi_struct = bmmo_get_hoc_pi_struct(input_kfactors, pi_text, options)
% function pi_struct = bmmo_get_hoc_pi_struct(input_kfactors, pi_text, options)
%
% Generate a (K)PI struct containing k-factor data
%
% Input:
%   input_kfactors: 1*2 struct of k-factor coefficients, per chuck
%   pi_text: text to use in pi struct field name. e.g. for chuck 2 k7: ovl_k7_chk2(pi_text)
%   options: BMMO/BL3 options structure
%
% Output:
%   pi_struct: (K)PI structure containing KPI values

k_translation = sub_k_factor_translation;
kfactors = options.intraf_hoc_pi.kfactors;

for ic = options.chuck_usage.chuck_id_used
    chuckstr = num2str(ic);
    for ik = 1:length(kfactors)
        kf = kfactors{ik};
        pi_struct.(['ovl_' k_translation.(kf) '_chk' chuckstr pi_text]) = input_kfactors(ic).(kf);
    end
end

 
%% map k-factor names and their PI scaling
function translation = sub_k_factor_translation

translation = struct('d2', 'k7',...
                   'k8', 'k8',...
                   'k9', 'k9',...
                  'k10', 'k10',...
                'bowxf', 'k11',...
                'bowyf', 'k12',...
                   'd3', 'k13',...
                'mag3y', 'k14',...
                 'accx', 'k15',...
                 'accy', 'k16',...
                'cshpx', 'k17',...
                'cshpy', 'k18',...
                'flw3x', 'k19',...
                'flw3y', 'k20',...
                  'k22', 'k22',...
                  'k24', 'k24',...
                  'k25', 'k25',...
                  'k26', 'k26',...
                  'k27', 'k27',...
                  'k29', 'k29',...
                  'k32', 'k32',...
                  'k34', 'k34',...
                  'k36', 'k36',...
                  'k37', 'k37',...
                  'k39', 'k39',...
                  'k41', 'k41',...
                  'k46', 'k46',...
                  'k48', 'k48',...
                  'k51', 'k51');
