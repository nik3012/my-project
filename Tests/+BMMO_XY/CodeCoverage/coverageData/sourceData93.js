var sourceData93 = {"FileContents":["function [mlo, coeff] = bmmo_fit_model(mli, options, varargin)\r","% function [mlo, coeff] = bmmo_fit_model(mli, options, varargin)\r","%\r","% Fit the given parameters to the input ml overlay struct, yielding \r","% residuals mlo and fit coefficients coeff\r","%\r","% Input:\r","%  mli: ml overlay structure\r","%  options: options structure containing parameter table\r","%  \r","% Optional Inputs:\r","%   varargin: a variable number (possibly 0) of parameter names and\r","%            options, including the following:\r","%           '10par': fit 10par\r","%           '6par': fit 6par\r","%           'tx', 'ty', etc: parameters to fit\r","%\r","% Output: \r","%   mlo: ml struct of output residuals\r","%   coeff: values of fit coefficents\r","\r","wd_in = struct;\r","[wd_in.xc, wd_in.yc, wd_in.xf, wd_in.yf, dxc, dyc] = ovl_concat_wafer_results(mli);\r","wd_in.xw = wd_in.xc + wd_in.xf;\r","wd_in.yw = wd_in.yc + wd_in.yf;\r","res_in = [dxc; dyc];\r","lenx = length(dxc);\r","\r","[res_out, coeff_out] = bmmo_fit_parms(res_in, wd_in, options, varargin);\r","\r","mlo = ovl_distribute_wafer_results(mli, res_out(1:lenx), res_out((lenx+1):end));\r","\r","coeff = bmmo_get_apply_par(coeff_out, varargin);\r","\r",""],"CoverageData":{"CoveredLineNumbers":[22,23,24,25,26,27,29,31,33],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1364,1364,1364,1364,1364,1364,0,1364,0,1364,0,1364,0,0]}}