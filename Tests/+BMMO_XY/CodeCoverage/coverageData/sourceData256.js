var sourceData256 = {"FileContents":["classdef testBmmoBaseSpline < BMMO_XY.tools.testSuite\r","    \r","    methods (Static)\r","        \r","        function sub_plot_splines(spline_mat, figtitle)            \r","            figure;\r","            title(figtitle);\r","            hold;\r","            num_splines = size(spline_mat, 2);           \r","            for is = 1:num_splines\r","                plot(spline_mat(:, is));\r","            end\r","        end\r","        \r","    end  \r","    \r","    methods(Test)    \r","        \r","        %% 1. base case: just the default splines\r","        function Case1(obj)\r","            % Given\r","            options = bmmo_default_options_structure;            \r","            pitch = options.map_param.pitch;\r","            ymin   = options.ytx_spline_params.x_start;\r","            ymax   = options.ytx_spline_params.x_end;\r","            nr_seg = options.ytx_spline_params.nr_segments;\r","            \r","            % When\r","            x_base = bmmo_base_spline(ymin:pitch:ymax,ymin,ymax,nr_seg, options);\r","            \r","            % Then\r","            % obj.sub_plot_splines(x_base ,'case 1');\r","            obj.verifyTrue(size(x_base, 2) == nr_seg + 1);     \r","        end\r","        \r","        %% 2. no extra splines\r","        function Case2(obj)\r","            % Given\r","            options = bmmo_default_options_structure;\r","            options.extra_splines = [0 0 0 0];            \r","            pitch = options.map_param.pitch;\r","            ymin   = options.ytx_spline_params.x_start;\r","            ymax   = options.ytx_spline_params.x_end;\r","            nr_seg = options.ytx_spline_params.nr_segments;\r","            \r","            % When\r","            x_base = bmmo_base_spline(ymin:pitch:ymax,ymin,ymax,nr_seg, options);\r","            \r","            % Then\r","            % obj.sub_plot_splines(x_base ,'case 2: no extra splines');\r","            obj.verifyTrue(size(x_base, 2) == nr_seg + 1);           \r","        end\r","        \r","        %% 3. no linear terms, constant extrapolation terms balanced\r","        function Case3(obj)\r","            % Given\r","            options = bmmo_default_options_structure;\r","            options.extra_splines = [2 2 0 0];            \r","            pitch = options.map_param.pitch;\r","            ymin   = options.ytx_spline_params.x_start;\r","            ymax   = options.ytx_spline_params.x_end;\r","            nr_seg = options.ytx_spline_params.nr_segments;\r","            \r","            % When\r","            x_base = bmmo_base_spline(ymin:pitch:ymax,ymin,ymax,nr_seg, options);\r","            \r","            % Then            \r","            % obj.sub_plot_splines(x_base ,'case 3: no linear, balanced extrapolation');\r","            obj.verifyTrue(size(x_base, 2) == nr_seg + 1);\r","        end\r","        \r","        %% 4. no translation, linear and constant extrapolation terms balanced\r","        function Case4(obj)\r","            % Given\r","            options = bmmo_default_options_structure;\r","            options.extra_splines = [2 2 0 2];            \r","            pitch = options.map_param.pitch;\r","            ymin   = options.ytx_spline_params.x_start;\r","            ymax   = options.ytx_spline_params.x_end;\r","            nr_seg = options.ytx_spline_params.nr_segments;\r","            \r","            % When\r","            x_base = bmmo_base_spline(ymin:pitch:ymax,ymin,ymax,nr_seg, options);\r","            \r","            % Then\r","            % obj.sub_plot_splines(x_base ,'case 4: no linear, balanced extrapolation');\r","            obj.verifyTrue(size(x_base, 2) == nr_seg + 1);\r","        end\r","        \r","        %% 5. no constant 1 extrapolation, other terms balanced\r","        function Case5(obj)\r","            % Given\r","            options = bmmo_default_options_structure;\r","            options.extra_splines = [0 2 1 2];            \r","            pitch = options.map_param.pitch;\r","            ymin   = options.ytx_spline_params.x_start;\r","            ymax   = options.ytx_spline_params.x_end;\r","            nr_seg = options.ytx_spline_params.nr_segments;\r","\r","            % When\r","            x_base = bmmo_base_spline(ymin:pitch:ymax,ymin,ymax,nr_seg, options);\r","            \r","            % Then\r","            % obj.sub_plot_splines(x_base ,'case 5: no constant 1 extrapolation, balanced');\r","            obj.verifyTrue(size(x_base, 2) == nr_seg + 1);\r","        end\r","        \r","    end\r","    \r","end\r",""],"CoverageData":{"CoveredLineNumbers":[22,23,24,25,26,29,33,39,40,41,42,43,44,47,51,57,58,59,60,61,62,65,69,75,76,77,78,79,80,83,87,93,94,95,96,97,98,101,105],"UnhitLineNumbers":[6,7,8,9,10,11],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,1,0,0,0,0,0,0]}}