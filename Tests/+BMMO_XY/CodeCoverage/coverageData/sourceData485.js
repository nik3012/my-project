var sourceData485 = {"FileContents":["function fp_struct = bmmo_kt_apply_SBC_no_WH(ml_template, corr, factor)\r","% function fp_struct = bmmo_kt_apply_SBC_no_WH(ml_template, corr)\r","%\r","% Generate a list of SBC correction ml structures from a given template ml\r","% and an SBC correction\r","%\r","% Input: \r","%   ml: a valid input structure for the BMMO-NXE drift control model, e.g.\r","%       the output of bmmo_kt_preprocess_input\r","%   corr: a valid correction set from the BMMO-NXE drift control model,\r","%       e.g. the output of bmmo_nxe_drift_control_model (out.corr) or\r","%       bmmo_kt_process_SBC2\r","%\r","% Output:\r","%   fp_struct: structure containing the following (all ml structures, same layout as ml_template)\r","%       MI:  Mirror fingerprint \r","%       KA: KA fingerprint \r","%       BAO:  BAO fingerprint \r","%       INTRAF: INTRAF fingerprint\r","%       TotalSBCcorrection: sum of the other fingerprints\r","%\r","% 20160412 SBPR Creation\r","\r","\r","options = bmmo_default_options_structure;\r","\r","options.chuck_usage.nr_chuck_used = 2;\r","options.chuck_usage.chuck_id_used = [1 2];\r","options.chuck_usage.chuck_id = [1 2 1 2 1 2];\r","options.chuck_usage.chuck_id = options.chuck_usage.chuck_id(1:ml_template.nwafer);\r","\r","mlo = ovl_create_dummy(ml_template);\r","\r","fp_struct.KA = bmmo_KA_SBC_fingerprint(ml_template, corr.KA.grid_2de, options);\r","mlo = ovl_add(mlo, fp_struct.KA);\r","\r","fp_struct.MI = bmmo_MI_SBC_fingerprint(ml_template, corr.MI.wse, options);\r","mlo = ovl_add(mlo, fp_struct.MI);\r","\r","fp_struct.BAO = bmmo_BAO_SBC_fingerprint(ml_template, corr.BAO, options);\r","mlo = ovl_add(mlo, fp_struct.BAO);\r","\r","fp_struct.INTRAF = bmmo_INTRAF_SBC_fingerprint(ml_template, corr.ffp, options);\r","mlo = ovl_add(mlo, fp_struct.INTRAF);\r","\r","fp_struct.TotalSBCcorrection = mlo;\r","\r","% apply a constant factor (e.g. -1) to the fingerprints if specified\r","fn = fieldnames(fp_struct);\r","for ifield = 1:length(fn)\r","    fp_struct.(fn{ifield}) = ovl_combine_linear(fp_struct.(fn{ifield}), factor);\r","    fp_struct.(fn{ifield}) = bmmo_average_chuck(fp_struct.(fn{ifield}), options);\r","end"],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[25,27,28,29,30,32,34,35,37,38,40,41,43,44,46,49,50,51,52],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}