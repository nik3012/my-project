var sourceData451 = {"FileContents":["function input_struct = bmmo_input_struct_from_devbench(KT_wo, adelsbcrep, adeller, timefilter)\r","% function [sbc_new, ml_in] = bmmo_simulate_LCP(KT_wo, adelsbcrep, adeller)\r","%\r","% Given KT wafers out, SBC report and ADELler, generate a bmmo input_struct\r","%\r","% Input:\r","%   KT_wo: KT_wafers_out from KT Devbench Monitor Lot\r","%   adelsbcrep: full path of ADELsbcOverlayDriftControlNxerep from same lot\r","%   adeller: full path of ADELler from same lot\r","%\r","% Optional Input:\r","%   timefilter: (0/1) flag to specify if time filter is enabled (default 0)\r","%       0 means Recover to Baseline\r","%       1 means Control to Baseline\r","%\r","% Output:  \r","%   input_struct: BMMO-NXE model input read from input data\r","%\r","% 20201019 SBPR Refactored from bmmo_simulate_LCP\r","\r","EDGE_REMOVAL = 0.148; % YS readout has some marks outside 0.147\r","\r","% read adeller to get expinfo (containing only xc, yc field centres)\r","disp('reading ADELler');\r","[expinfo, mark_type, ~, scan_direction] = bmmo_expinfo_from_adeller(adeller);\r","expinfo.map_fieldtoexp = 1:length(expinfo.xc);\r","\r","% generate the measurement ml structure(s) from wafers_out, generating a\r","% template structure from expinfo\r","disp('reading KT_wafers_out');\r","phase = 2;\r","mlo = bmmo_get_meas_data(KT_wo, expinfo, phase, mark_type);\r","\r","% Remove edge and downsample\r","disp('downsampling and removing edge');\r","mlo = ovl_remove_edge(mlo, EDGE_REMOVAL);\r","mlo = bmmo_generate_2l_dyna25_input(mlo);\r","mlo.tlgname = '';\r","\r","input_struct = bmmo_convert_to_smf(mlo);\r","input_struct.expinfo = expinfo;\r","input_struct.info = bmmo_get_default_info(input_struct, '13x19');\r","input_struct.info.report_data.time_filtering_enabled = timefilter;\r","\r","[prev_sbc, inline_sdm] = bmmo_kt_process_SBC2rep(adelsbcrep);\r","input_struct.info.report_data.inline_sdm_residual =  inline_sdm.sdm_res;\r","input_struct.info.report_data.Scan_direction = scan_direction;\r","\r","if isfield(prev_sbc, 'Configurations')\r","    prev_sbc = rmfield(prev_sbc, 'Configurations');\r","end\r","input_struct.info.previous_correction = prev_sbc;\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[21,24,25,26,30,31,32,35,36,37,38,40,41,42,43,45,46,47,49,50,52],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}