var sourceData481 = {"FileContents":["function bmmo_delta_wdm_MATLAB_LIS(mli1, mli2, plot_name, print_type, plot_type, out_file)\r","%function bmmo_delta_wdm_MATLAB_LIS(mli1, mli2, plot_name, print_type, plot_type, out_file)\r","%\r","% Function for LIS SP validation of waferdatamaps: delta, no. of valids, plots of delta\r","% MATLAB and LIS.\r","%\r","% INPUTS\r","%\r","% mli1 : MATLAB measurement layout input\r","% Can accept ml in following format:\r","% 1) ml with 1 x 1 struct and nwafers (like n = 6)\r","% 2) ml with 1 x 2 struct for each chuck and nwafer =1\r","%\r","% mli2 : LIS measurement layout input\r","% Can accept ml in following format:\r","% 1) ml with 1 x n struct, where n = no. of wafers\r","% 2) ml with 1 x 2 struct for each chuck and nwafer =1\r","%\r","% plot_name: string input containing waferdatamap name \r","%\r","% OPTIONAL INPUTS\r","%\r","% print_type = 0, shows if delta is OK/NOK and # of valids are matching\r","% print_type = 1, shows the delta for each chuck/wafer\r","% print_type = 2, shows the delta and number of valid points for each chuck/wafer\r","% plot_type  = 1, Plots the delta ovl plots for each chuck/wafer\r","% plot_type  = 2, Plots the Model,VCP and delta ovl plots for each chuck/wafer\r","% out_file :filename to output the assertion results,\r","% eg: 'output.txt' or provide outfile = stdout for printing to command line\r","\r","threshold = 5e-13;\r","\r","%default title\r","title = 'mli1 vs mli2';\r","\r","if mli2(1).nfield == 1\r","    for ic = 1:2\r","        mli2(ic).wd = mli1(ic).wd;\r","    end\r","end\r","\r","for i = 1:length(mli1)\r","    ml_delta(i) = ovl_sub(mli1(i), mli2(i));\r","end\r","\r","if ~isequal(ml_delta(1).nmark,0)\r","    if plot_type == 1\r","        for  i = 1:length(mli1)\r","            sub_wafer_plot(ml_delta(i), 'Delta Chuck ', i)\r","        end\r","        toppt('Delta ovl plot for each Chuck', plot_name)\r","        close all\r","        \r","    elseif plot_type == 2\r","        for  i = 1:length(mli1)          \r","            sub_wafer_plot(mli1(i), 'MATLAB Chuck ', i)\r","            sub_wafer_plot(mli2(i), 'LIS Chuck ', i)\r","            sub_wafer_plot(ml_delta(i), 'Delta Chuck ', i)\r","        end\r","        toppt('MATLAB vs LIS: ovl plot for each chuck', plot_name)\r","        close all \r","    end\r","    \r","    for i = 1:length(mli1)\r","        max_delta_x(i) = max(abs(ml_delta(i).layer.wr.dx));\r","        mli1_x_n_valids(i) = sum(~isnan(mli1(i).layer.wr.dx));\r","        mli2_x_n_valids(i) = sum(~isnan(mli2(i).layer.wr.dx));\r","        delta_x_n_valids(i) = sum(~isnan(ml_delta(i).layer.wr.dx));\r","        max_delta_y(i) =  max(abs(ml_delta(i).layer.wr.dy));\r","        mli1_y_n_valids(i) = sum(~isnan(mli1(i).layer.wr.dy));\r","        mli2_y_n_valids(i) = sum(~isnan(mli2(i).layer.wr.dy));\r","        delta_y_n_valids(i) = sum(~isnan(ml_delta(i).layer.wr.dy));\r","    end\r","    \r","    if print_type == 0\r","        for  i = 1:length(mli1)\r","            deltaok = (max_delta_x(i) < threshold) & (max_delta_y(i) < threshold);\r","            if deltaok && isequal(mli1_x_n_valids(i), mli2_x_n_valids(i), delta_x_n_valids(i), mli1_y_n_valids(i), mli2_y_n_valids(i), delta_y_n_valids(i))\r","                sub_print_type_0(out_file, i, plot_name, threshold, ' Delta is OK!, smaller than ', ' and No. of marks are same');\r","                \r","            elseif deltaok && ~isequal(mli1_x_n_valids(i), mli2_x_n_valids(i), delta_x_n_valids(i), mli1_y_n_valids(i), mli2_y_n_valids(i), delta_y_n_valids(i))\r","                sub_print_type_0(out_file, i, plot_name, threshold, ' Delta is OK!, smaller than ', ' No. of marks are not same!');\r","                \r","            elseif ~deltaok && isequal(mli1_x_n_valids(i), mli2_x_n_valids(i), delta_x_n_valids(i), mli1_y_n_valids(i), mli2_y_n_valids(i), delta_y_n_valids(i))\r","                sub_print_type_0(out_file, i, plot_name, threshold, ' Delta is NOK!, p2p delta larger than ', ' No. of marks are same!');\r","                \r","            elseif ~deltaok && ~isequal(mli1_x_n_valids(i), mli2_x_n_valids(i), delta_x_n_valids(i), mli1_y_n_valids(i), mli2_y_n_valids(i), delta_y_n_valids(i))\r","                sub_print_type_0(out_file, i, plot_name, threshold, ' Delta is NOK!, p2p delta larger than ', ' No. of marks are not same!');\r","            end\r","        end\r","        \r","    elseif print_type == 1\r","        \r","        fprintf(out_file, '\\n');\r","        fprintf(out_file, ['Delta max values for dx and dy (per chuck) ', plot_name]);\r","        sub_print_type_nozero(out_file, mli1, max_delta_x, max_delta_y);\r","        \r","    elseif print_type == 2\r","        \r","        fprintf(out_file, '\\n');\r","        fprintf(out_file, [ 'Delta max values for dx and dy (per chuck) ', plot_name]);\r","        sub_print_type_nozero(out_file, mli1, max_delta_x, max_delta_y);\r","        \r","        fprintf(out_file, ['Number of marks (per chuck) - MATLAB ( dx and dy) and LIS (dx and dy) ', plot_name]);\r","        sub_print_type_nozero(out_file, mli1, mli1_x_n_valids, mli1_y_n_valids, mli2_x_n_valids, mli2_y_n_valids);\r","        \r","    elseif print_type == 3\r","        \r","        fprintf(out_file, ['Delta max values for dx and dy (per chuck) ', plot_name]);\r","        sub_print_type_nozero(out_file, mli1, max_delta_x, max_delta_y);\r","        \r","        fprintf(out_file, ['Number of marks (per chuck) - MATLAB ( dx and dy) and LIS (dx and dy) ', plot_name]);\r","        sub_print_type_nozero(out_file, mli1, mli1_x_n_valids, mli1_y_n_valids, mli2_x_n_valids, mli2_y_n_valids);\r","        \r","        fprintf(out_file, [ 'Number of marks (per chuck) - Delta (dx and dy) ', plot_name]);\r","        for  i=1: length(mli1)\r","            fprintf(out_file, '\\n');\r","            fprintf(out_file, [num2str(delta_x_n_valids(i)),'    ', num2str(delta_y_n_valids(i))]);\r","        end\r","    end\r","    clear ml_delta\r","    \r","elseif isequal(ml_delta.nmark, 0)\r","    fprintf(out_file, 'Zero Number of marks !!!!!');\r","end\r","end\r","\r","function sub_wafer_plot(ml, title, chuck_id)\r","\r","if ml.nfield == 1\r","    figure;\r","    ovl_plot(ml, 'field', 'title', [title, int2str(chuck_id)],...\r","        'vcolor', 'scale', 0, 'prc', 4, 'legend', 'cust');\r","else\r","    figure;\r","    ovl_plot(ml, 'title', [title, int2str(chuck_id)],...\r","        'vcolor', 'scale', 0, 'prc', 4, 'legend', 'cust');\r","end\r","\r","end\r","\r","\r","function sub_print_type_nozero(file, ml, in_1, in_2, in_3, in_4)\r","\r","for  i = 1:length(ml)\r","    format long\r","    fprintf(file, '\\n');\r","    if nargin < 5\r","        fprintf(file, [num2str(in_1(i)),'    ', num2str(in_2(i))]);\r","    elseif nargin == 6\r","        fprintf(file, [num2str(in_1(i)),'    ', num2str(in_2(i)), '    ', num2str(in_3(i)), '    ', num2str(in_4(i))]);\r","    end\r","    fprintf(file, '\\n');\r","end\r","end\r","\r","function sub_warning(message, file)\r","\r","if file == 1 %stdout case\r","    warning(message)\r","else % filename char case\r","    warning(message)\r","    fprintf(file, ['WARNING:', message,'\\n']);\r","end\r","end\r","\r","function sub_print_type_0(file, chuck_id, plot_name, threshold, str_OK_NOK, str_valids)\r","\r","fprintf(file, '\\n');\r","sub_warning([plot_name, ' Chuck ', num2str(chuck_id), str_OK_NOK,...\r","    num2str(threshold), str_valids], file);\r","fprintf(file, '\\n');\r","end"],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[31,34,36,37,38,42,43,46,47,48,49,51,52,54,55,56,57,58,60,61,64,65,66,67,68,69,70,71,72,75,76,77,78,79,81,82,84,85,87,88,92,94,95,96,98,100,101,102,104,105,107,109,110,112,113,115,116,117,118,121,123,124,130,131,132,134,135,136,145,146,147,148,149,150,151,153,159,160,161,162,163,169,170,171,172],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}