var sourceData311 = {"FileContents":["classdef testBmmoMissingWafers < BMMO_XY.tools.testSuite\r","    \r","    methods(Test)\r","        \r","        %% Ensure that the model does not fail if any one wafer is missing\r","        function test_bmmo_one_missing_wafer(obj)\r","            % Given\r","            ml = bmmo_default_input;            \r","            allwafers = 1:6;            \r","            for iw = 1:6\r","                wafers = setdiff(allwafers, iw);\r","                \r","                % When\r","                mlt = bmmo_get_wafers(ml, wafers);\r","                \r","                % Then\r","                out = bmmo_nxe_drift_control_model(mlt);\r","            end\r","        end\r","        \r","        %% Ensure that the model does not fail if any one wafer is missing (1L input)        \r","        function test_bmmo_one_missing_wafer_1L(obj)\r","            % Given\r","            ml = bmmo_default_input;\r","            ml = bmmo_turn_off_l2(ml);            \r","            allwafers = 1:6;            \r","            for iw = 1:6\r","                wafers = setdiff(allwafers, iw);\r","                \r","                % When\r","                mlt = bmmo_get_wafers(ml, wafers);\r","                \r","                % Then\r","                out = bmmo_nxe_drift_control_model(mlt);\r","                \r","                %%\r","                % When\r","                mlt.info.configuration_data.susd_correction_enabled = 1;\r","                % Then\r","                out = bmmo_nxe_drift_control_model(mlt);\r","            end\r","        end\r","        \r","        %% Ensure that the model does not fail if one wafer per chuck is missing\r","        function test_bmmo_one_missing_wafer_per_chuck(obj)\r","            % Given\r","            ml = bmmo_default_input;            \r","            allwafers = 1:6;\r","            c1 = [1 3 5];           % generate permutations of chuck wafers\r","            c2 = [2 4 6];\r","            [c1g, c2g] = meshgrid(c1, c2);\r","            w_perm = [c1g(:) c2g(:)];            \r","            for iw = 1:length(w_perm)\r","                wafers = setdiff(allwafers, w_perm(iw, :));\r","                \r","                % When\r","                mlt = bmmo_get_wafers(ml, wafers);\r","                \r","                % Then\r","                out = bmmo_nxe_drift_control_model(mlt);\r","            end\r","        end\r","        \r","        %% Ensure that the model does not fail if one wafer per chuck is missing\r","        function test_bmmo_one_missing_wafer_per_chuck_1L(obj)\r","            % Given\r","            ml = bmmo_default_input;\r","            ml = bmmo_turn_off_l2(ml);            \r","            allwafers = 1:6;\r","            c1 = [1 3 5];           % generate permutations of chuck wafers\r","            c2 = [2 4 6];\r","            [c1g, c2g] = meshgrid(c1, c2);\r","            w_perm = [c1g(:) c2g(:)];            \r","            for iw = 1:length(w_perm)\r","                wafers = setdiff(allwafers, w_perm(iw, :));\r","                \r","                % When\r","                mlt = bmmo_get_wafers(ml, wafers);\r","                \r","                % Then\r","                out = bmmo_nxe_drift_control_model(mlt);\r","                \r","                %%\r","                % When\r","                mlt.info.configuration_data.susd_correction_enabled = 1;\r","                \r","                % Then\r","                out = bmmo_nxe_drift_control_model(mlt);\r","            end\r","        end\r","        \r","    end\r","    \r","end\r","\r","\r",""],"CoverageData":{"CoveredLineNumbers":[8,9,10,11,14,17,24,25,26,27,28,31,34,38,40,47,48,49,50,51,52,53,54,57,60,67,68,69,70,71,72,73,74,75,78,81,85,88],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,1,1,1,6,0,0,6,0,0,6,0,0,0,0,0,0,1,1,1,1,6,0,0,6,0,0,6,0,0,0,6,0,6,0,0,0,0,0,0,1,1,1,1,1,1,1,9,0,0,9,0,0,9,0,0,0,0,0,0,1,1,1,1,1,1,1,1,9,0,0,9,0,0,9,0,0,0,9,0,0,9,0,0,0,0,0,0,0,0,0]}}