var sourceData272 = {"FileContents":["classdef testBmmoFieldReconstruction < BMMO_XY.tools.testSuite\r","    \r","    methods(TestClassSetup)\r","        \r","        function setup(obj)\r","\r","            ml = bmmo_default_input;\r","            ml = bmmo_turn_off_l2(ml);\r","            load([bmmo_testdata_root filesep 'TC08_01_out.mat']);\r","            load([bmmo_testdata_root filesep 'input_struct_lcp_89fields.mat']);            \r","            obj.setup_data.options = bmmo_default_options_structure;\r","            obj.setup_data.out = out;\r","            obj.setup_data.ml = ml;\r","            obj.setup_data.input_struct = input_struct;\r","        end\r","        \r","    end\r","    \r","    properties\r","        \r","        setup_data\r","    end\r","    \r","    methods(Test)\r","        \r","        %% 1. Test that the output remains unchanged when run though reconstruction\r","        function Case1(obj)\r","            % Given\r","            out = bmmo_phase_2_input(obj.setup_data.out);\r","            options = bmmo_ml_options(out, obj.setup_data.options);            \r","            options.x_shift = [0; 0];\r","            options.y_shift = [0; 0];            \r","            \r","            % When\r","            test_out = bmmo_field_reconstruction(out, options);  \r","            \r","            % Then\r","            obj.verifyWithinTol(out.wd, test_out.wd);\r","            obj.verifyWithinTol(out.layer, test_out.layer);\r","        end\r","        \r","        %% 2. Test that the output is unchanged for one layer inputs\r","        function Case2(obj)\r","            % Given\r","            out = bmmo_phase_2_input(obj.setup_data.out);\r","            options = bmmo_ml_options(out, obj.setup_data.options);            \r","            options.x_shift = [0; 0];\r","            options.y_shift = [0; 0];\r","            options.layer_fields{1} = 1:89;\r","            options.layer_fields{2} = 100;            \r","            \r","            % When\r","            test_out = bmmo_field_reconstruction(out, options);   \r","            \r","            % Then\r","            obj.verifyWithinTol(out.wd, test_out.wd);\r","            obj.verifyWithinTol(out.layer, test_out.layer);\r","        end\r","        \r","        %% Test 3\r","        function Case3(obj)\r","            % Given\r","            input_struct = obj.setup_data.input_struct;\r","            \r","            % When\r","            options = bmmo_ml_options(input_struct, obj.setup_data.options);        % include data from ml info structure             \r","            [mlo, options] = bmmo_field_reconstruction(input_struct, options);      % reconstruct to fields of 13x19 in exposure order\r","            \r","            % Then\r","            obj.verifyWithinTol(length(options.layer_fields), 1);\r","            obj.verifyWithinTol(options.layer_fields{1}, 1:89);\r","        end\r","        \r","    end\r","    \r","end"],"CoverageData":{"CoveredLineNumbers":[7,8,9,10,11,12,13,14,29,30,31,32,35,38,39,45,46,47,48,49,50,53,56,57,63,66,67,70,71],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,0,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,1,1,0,0,0,0,0,1,0,0,1,1,0,0,1,1,0,0,0,0,0]}}