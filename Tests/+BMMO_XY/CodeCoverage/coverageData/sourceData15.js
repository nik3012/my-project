var sourceData15 = {"FileContents":["function [ml_apply, ml_res] = bmmo_KA_HOC_fingerprint(ka_grid, ml_input, options)\r","% function [ml_apply, ml_res] = bmmo_KA_HOC_fingerprint(ka_grid, ml_input, options)\r","%\r","% Given the modelled KA grid in testlog format, get the KA fingerprint\r","%\r","% Input:\r","%   ka_grid:    ka_grid correction with interpolants\r","%   ml_input:   input ml structure\r","%   options:    structure containing at least the following field:\r","%               fieldsize: 1 * 2 array with x and y fieldsize\r","%\r","% Output:\r","%   ml_apply:   KA fingerprint\r","%   ml_res :    KA actuaiton residual\r","%\r","%  NOTE:\r","%  According to the BMMO-NXE EDS, ml_input.info.F does not contain 'field_shift_Cn'\r","%  which ovl_metro_add_chuck_info used to determine field shifts for chuck\r","%  n. In addition, callers of this function are not necessarily aware of the\r","%  chuck context. Therefore, per-chuck field shifts should be applied\r","%  outside this function if necessary.\r","\r","% The tool ovl_create_dummy by default uses 3mm edge clearance, which is not what we want. But this script must\r","% also be able to model on TIS location, so we provide an 'infinite' value for 'edge'.\r","% (Comment copied from ovl_metro_par_mc_apply)\r","\r","ml_out = ovl_create_dummy(ml_input, 'marklayout', options.CET_marklayout, 'edge', options.wafer_radius_in_mm); % <- cet grid stretches to 33mm\r","ml_out_F = ovl_create_dummy(ml_input, 'edge', options.wafer_radius_in_mm);\r","\r","ml_out.layer.wr.dx = ka_grid.interpolant_x(ml_out.wd.xw, ml_out.wd.yw);\r","ml_out.layer.wr.dy = ka_grid.interpolant_y(ml_out.wd.xw, ml_out.wd.yw);\r","ml_out_F.layer.wr.dx = ka_grid.interpolant_x(ml_out_F.wd.xw, ml_out_F.wd.yw);\r","ml_out_F.layer.wr.dy = ka_grid.interpolant_y(ml_out_F.wd.xw, ml_out_F.wd.yw);\r","\r","[~, cs] = bmmo_cet_model(ml_out, options.KA_actuation.type);\r","cs = arrayfun(@(x) x.poly2spline(), cs);\r","ml_apply = bmmo_cet_model(ml_out_F, cs, options.KA_actuation.type, 'return_corrections', true); % replay trajectories, 'PLAYBACK' matches TS, may have delta with DB\r","\r","ml_res = ovl_sub(ml_out_F, ml_apply);\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[27,28,30,31,32,33,35,36,37,39],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}