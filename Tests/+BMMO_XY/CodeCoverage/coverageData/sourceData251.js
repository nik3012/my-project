var sourceData251 = {"FileContents":["classdef testBmmoApplyTimeFilter < BMMO_XY.tools.testSuite\r","    \r","    methods(Static)\r","        \r","        function out = sub_get_nonzero_output(out_zero, wh, mi, ka, bao, intraf, susd)\r","            out = out_zero; % fill in structure with nonzero values\r","            fn = fieldnames(out.corr.BAO);\r","            out.corr.IR2EUV = 1 * wh;\r","            for ic = 1:2\r","                out.corr.MI.wse(ic).x_mirr.dx =  out.corr.MI.wse(ic).x_mirr.dx + (1e-9 * mi);\r","                out.corr.MI.wse(ic).y_mirr.dy =  out.corr.MI.wse(ic).y_mirr.dy + (1e-9 * mi);\r","                out.corr.KA.grid_2de(ic).dx = out.corr.KA.grid_2de(ic).dx + (1e-9 * ka);\r","                out.corr.KA.grid_2de(ic).dy = out.corr.KA.grid_2de(ic).dy + (1e-9 * ka);\r","                out.corr.ffp(ic).dx = out.corr.ffp(ic).dx + (1e-9 * intraf);\r","                out.corr.ffp(ic).dy = out.corr.ffp(ic).dy + (1e-9 * intraf);\r","                out.corr.SUSD(ic).TranslationY = 1e-9 * susd;\r","                for ifield = 1:length(fn)\r","                    out.corr.BAO(ic).(fn{ifield}) = out.corr.BAO(ic).(fn{ifield}) + (1e-9 * bao);\r","                end\r","            end\r","            out.corr.MI.wsm = out.corr.MI.wse;\r","        end\r","        \r","        function filter = sub_get_filter(wh, mi, ka, bao, intraf, susd)\r","            \r","            filter.WH = 1 * wh;\r","            filter.MI = 1 * mi;\r","            filter.KA = 1 * ka;\r","            filter.BAO = 1 * bao;\r","            filter.INTRAF = 1 * intraf;\r","            filter.SUSD = 1 * susd;\r","        end\r","        \r","    end\r"," \r","    methods(Test)\r","        \r","        %% apply random time filter on zero structure; result is still a zero structure\r","        function Case1(obj)\r","            % Given\r","            options = bmmo_default_options_structure;\r","            options.susd_control = 1;\r","            out_zero = bmmo_default_output_structure(options);\r","            \r","            % When\r","            options.filter.coefficients = obj.sub_get_filter(1,2,3,4,5,6);\r","            corr_new = bmmo_apply_time_filter(out_zero.corr, options.filter.coefficients, 1);\r","            \r","            % Then\r","            obj.verifyWithinTol(corr_new, out_zero.corr);\r","        end\r","        \r","        %% apply unitary time filter, unitary scaling on nonzero structure; results is the same nonzero structure\r","        function Case2(obj)\r","            % Given\r","            options = bmmo_default_options_structure;\r","            options.susd_control = 1;\r","            out_zero = bmmo_default_output_structure(options);\r","            options.filter.coefficients = obj.sub_get_filter(1,1,1,1,1,1);\r","            out_nz = obj.sub_get_nonzero_output(out_zero, 3, 5, 12, 5, 7, 2);\r","            \r","            % When\r","            corr_new = bmmo_apply_time_filter(out_nz.corr, options.filter.coefficients, 1);\r","            \r","            % Then\r","            obj.verifyWithinTol(corr_new, out_nz.corr);\r","        end\r","        \r","        %% apply zero scaling / filter on nonzero structure; results is a zero structure\r","        function Case3(obj)\r","            % Given\r","            options = bmmo_default_options_structure;\r","            options.susd_control = 1;\r","            out_zero = bmmo_default_output_structure(options);\r","            options.filter.coefficients = obj.sub_get_filter(0,0,0,0,0,0);\r","            out_nz = obj.sub_get_nonzero_output(out_zero, 3, 5, 12, 5, 7, 2);    \r","            \r","            % When\r","            corr_new = bmmo_apply_time_filter(out_nz.corr, options.filter.coefficients, 1); \r","            \r","            % Then\r","            obj.verifyWithinTol(corr_new, out_zero.corr);\r","            \r","            % When\r","            options.filter.coefficients = obj.sub_get_filter(1,2,3,4,5,6);\r","            corr_new = bmmo_apply_time_filter(out_nz.corr, options.filter.coefficients, 0);\r","            \r","            % Then\r","            obj.verifyWithinTol(out_zero.corr, corr_new);\r","        end\r","        \r","        %% apply time filter on unitary structure; results are as expected\r","        function Case4(obj)\r","            % Given\r","            options = bmmo_default_options_structure;\r","            options.susd_control = 1;\r","            out_zero = bmmo_default_output_structure(options);\r","            options.filter.coefficients = obj.sub_get_filter(1,2,3,4,5,6);\r","            out_1 = obj.sub_get_nonzero_output(out_zero, 1, 1, 1, 1, 1, 1);\r","            corr_new = bmmo_apply_time_filter(out_1.corr, options.filter.coefficients, 1);\r","\r","            % When\r","            out_expected = obj.sub_get_nonzero_output(out_zero, 1, 2, 3, 4, 5, 6);\r","            \r","            % Then\r","            obj.verifyWithinTol(corr_new, out_expected.corr);\r","        end\r","        \r","        %% apply scaling on unitary structure; results are as expected\r","        function Case5(obj)\r","            \r","            % Given\r","            options = bmmo_default_options_structure;\r","            options.susd_control = 1;\r","            out_zero = bmmo_default_output_structure(options); \r","            options.filter.coefficients = obj.sub_get_filter(1,1,1,1,1,1);\r","            out_1 = obj.sub_get_nonzero_output(out_zero, 1, 1, 1, 1, 1, 1);\r","            \r","            % When\r","            corr_new = bmmo_apply_time_filter(out_1.corr, options.filter.coefficients, 5);  \r","            out_expected = obj.sub_get_nonzero_output(out_zero, 5, 5, 5, 5, 5, 5);\r","            \r","            % Then\r","            obj.verifyWithinTol(corr_new, out_expected.corr);\r","        end\r","        \r","    end\r","    \r","end"],"CoverageData":{"CoveredLineNumbers":[6,7,8,9,10,11,12,13,14,15,16,17,18,21,26,27,28,29,30,31,41,42,43,46,47,50,56,57,58,59,60,63,66,72,73,74,75,76,79,82,85,86,89,95,96,97,98,99,100,103,106,113,114,115,116,117,120,121,124],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,6,6,6,6,12,12,12,12,12,12,12,12,120,0,0,6,0,0,0,0,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,0,0,1,0,0,0,0,0,1,1,1,1,1,0,0,1,0,0,1,0,0,0,0,0,1,1,1,1,1,0,0,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,0,0,1,0,0,0,0,0]}}