var sourceData60 = {"FileContents":["function FP_MI = bmmo_construct_FPS_MI(ml, params, options)\r","% function FP_MI = bmmo_construct_FPS_MI(ml, params, options)\r","%\r","% The function generates the raw MI fingerprint for the combined model\r","%\r","% Input:\r","%  ml: input ml structure\r","%  params: structure containing the following fields:\r","%           pitch =  interpolation pitch (m)\r","%           min =    beginning of interpolation range (m);\r","%           max =    end of interpolation range (m);\r","%           nr_seg = number of splines generated;\r","%           vq =     name of field in which to copy interpolated values\r","%                       ('dx' or 'dy');\r","%           xq =     name of field that provides query values ('yw' or\r","%                       'xc')\r","%           name =   'MIX' or 'MIY'\r","%  options: BMMO/BL3 option structure\r","%\r","% Output:\r","%  FP_MI: MI fingerprint (1xN cell array of ml structs}\r","\r","if isempty(options.Q_grid.x) || isempty(options.Q_grid.y) || (numel(options.Q_grid.x) ~= numel(options.Q_grid.y))\r","    error('options.Q_grid incomplete or size of x and y mismatch');\r","end\r","\r","FP_MI = cell(options.chuck_usage.nr_chuck_used, 12);\r","for chuck = 1:options.chuck_usage.nr_chuck_used\r","    dummy = ml;\r","    this_wafer = find(options.chuck_usage.chuck_id == options.chuck_usage.chuck_id_used(chuck));   \r","    if params.name == 'MIX'\r","        dummy = bmmo_apply_curved_slit_correction(dummy, options);\r","        dummy.wd.yw = dummy.wd.yw + mean(options.FIWA_translation.y(this_wafer));     \r","    elseif params.name == 'MIY'\r","        dummy.wd.xc= dummy.wd.xc+ mean(options.FIWA_translation.x(this_wafer));\r","    end\r","    \r","    % x/y mirror, generate splines\r","    base = bmmo_base_spline([params.min:params.pitch:params.max],params.min,params.max,params.nr_seg, options);\r","    base = full(base);\r","    \r","    for ii = 1:size(base,2)\r","        ml_tmp = dummy;\r","        ml_tmp.layer.wr.(params.vq) =  interp1([params.min:params.pitch:params.max],base(:,ii),ml_tmp.wd.(params.xq), 'linear', 'extrap');\r","        ml_tmp.what = [params.name,num2str(ii)];\r","        FP_MI{chuck,ii} = ovl_combine_linear(ml_tmp, 1/options.scaling_factor);\r","    end\r","end"],"CoverageData":{"CoveredLineNumbers":[23,27,28,29,30,31,32,33,34,35,39,40,42,43,44,45,46],"UnhitLineNumbers":24,"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,554,0,0,0,554,554,1084,1084,1084,542,542,542,542,0,0,0,1084,1084,0,1084,13032,13032,13032,13032,0,0]}}