var sourceData172 = {"FileContents":["function bmmo_save_wfrdatamaps(mli, model_results, kpi_out, options)\r","% function bmmo_save_wfrdatamaps(mli, model_results, kpi_out, options)\r","%\r","% Saves OTAS waferdatamaps for: \r","% P379374 : SBC2 correction filtered and unfiltered\r","% P385771 : Intrafield 18par NCEs\r","%\r","% Input:\r","%   mli:            original input structure\r","%   model_results:  structure containing results of modelling\r","%   kpi_out:        structure containing the following SBC2 correction structures\r","%                   delta_filtered\r","%                   delta_unfiltered\r","%                   total_filtered\r","%                   total_unfiltered\r","%   options:        BMMO options structure\r","%\r","% Output:\r","%   Out: waferdatamaps .mat files are written directly to\r","%   mli.diagnostics_path\r","\r","smf_format = ovl_average(mli);\r","pc = options.previous_correction;\r","intraf = bmmo_ffp_to_ml_simple(pc.ffp, model_results.ml_outlier_removed, options);\r","\r","prev_sbc = bmmo_get_sbc_fingerprints(intraf, options, pc);\r","prev_sbc_smf = bmmo_map_to_smf(prev_sbc.TotalSBCcorrection, mli);\r","smf_undo = ovl_sub(mli, prev_sbc_smf);\r","mlp_undo_chk = bmmo_average_chuck(smf_undo, options);\r","sub_save_map_per_chuck(mlp_undo_chk, 'uncontrolled_meas', smf_format, mli);\r","\r","correctiondata = {'total_filtered', 'total_unfiltered'};\r","for corrdat_i=1:length(correctiondata)\r","    smf_format_noNan = sub_make_no_nan(smf_format);\r","    intraf = bmmo_ffp_to_ml_simple(kpi_out.(correctiondata{corrdat_i}).ffp, model_results.ml_outlier_removed, options);\r","    fps = bmmo_get_sbc_fingerprints(intraf,options, kpi_out.(correctiondata{corrdat_i}));\r","    ml_ffp = ovl_average_fields(fps.INTRAF);\r","    fps.(options.intraf_nce_modelresult.name) = ovl_model(ml_ffp, 'perwafer', options.intraf_CETpar.name);\r","        \r","    % Replace ffp with 18par (33par) intra\r","    fps.TotalSBCcorrection = ovl_sub(fps.TotalSBCcorrection, fps.INTRAF);\r","    ml_intraf = ovl_sub(ml_ffp, fps.(options.intraf_nce_modelresult.name));\r","    fps.INTRAF = ovl_distribute_field(ml_intraf, intraf);\r","\r","    fps.TotalSBCcorrection = ovl_add(fps.TotalSBCcorrection, fps.INTRAF);\r","    \r","    fps.WH = ovl_average(fps.WH);\r","    corrset = {'KA', 'MI', 'BAO', 'INTRAF', 'WH', 'TotalSBCcorrection', options.intraf_nce_modelresult.name};\r","\r","    for corrset_i = 1:length(corrset)\r","        data = fps.(corrset{corrset_i});\r","%         data = bmmo_shift_fields(data, options.x_shift, options.y_shift);\r","        if strcmp(char(corrset{corrset_i}), 'INTRAF')\r","            data = ovl_average_fields(data);\r","        end\r","        if ~strcmp(char(corrset{corrset_i}), 'WH')\r","            data_chk = bmmo_average_chuck(data, options);\r","            sub_save_map_per_chuck(data_chk, char([correctiondata{corrdat_i},'_',corrset{corrset_i}]), smf_format_noNan, mli);\r","        else\r","            data_chk = ovl_average(data);\r","            sub_save_map(data_chk, char([correctiondata{corrdat_i},'_',corrset{corrset_i}]), smf_format_noNan, mli);\r","        end\r","        \r","    end\r","    \r","end\r","\r","function smf_format_noNan = sub_make_no_nan(smf_format)\r","smf_format_noNan = smf_format;\r","ind = union(find(isnan(smf_format.layer.wr.dx)), find(isnan(smf_format.layer.wr.dy)));\r","smf_format_noNan.layer.wr.dx(ind)=0;\r","smf_format_noNan.layer.wr.dy(ind)=0;\r","\r","\r","function sub_save_map(data, name, smf_format, mli)\r","dat_tmp = bmmo_map_to_smf(data, smf_format);\r","ml_layer = dat_tmp.layer;\r","save([mli.diagnostics_path filesep char(name) ], '-struct', 'ml_layer', '-v6');\r","\r","\r","function sub_save_map_per_chuck(data, name, smf_format, mli)\r","for chk = 1:length(data)\r","    dat_tmp = data(chk);\r","    if dat_tmp.nfield > 1\r","        dat_tmp = bmmo_map_to_smf(dat_tmp, smf_format);\r","    end\r","    ml_layer = dat_tmp.layer;\r","    save([mli.diagnostics_path filesep char([name,'_chk',num2str(chk)])], '-struct', 'ml_layer', '-v6');\r","end\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[22,23,24,26,27,28,29,30,32,33,34,35,36,37,38,41,42,43,45,47,48,50,51,53,54,56,57,58,59,60,61,69,70,71,72,76,77,78,82,83,84,85,87,88],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}