var sourceData365 = {"FileContents":["function [le, lw, uw, ue] = bmmo_get_kpi_limits\r","% function [le, lw, uw, ue] = bmmo_get_kpi_limits\r","%\r","% Returns the default KPI limits for BMMO-NXE. Each output is a subset of\r","% the BMMO-NXE output KPI structure for which the appropriate limits are\r","% defined\r","%\r","% Output:\r","%   le: structure containing lower error KPI limits\r","%   lw: structure containing lower warning KPI limits\r","%   uw: structure containing upper warning KPI limits\r","%   ue: structure containing upper error KPI limits\r","%\r","% 20171006 SBPR Creation\r","\r","limits = [...\r","    NaN, NaN, NaN, 10e-9; ...  %1 uncontrolled: IGNORE\r","    NaN, NaN, 3.0e-9,NaN; ...   %2 input\r","    NaN, NaN, 0.8, NaN; ...  %3 outlier coverage\r","    NaN, NaN, 200, NaN; ... % 4 invalids\r","    NaN, NaN, 5e-9, NaN; ... % 5 w2w\r","    NaN, NaN, 2.5e-9, NaN; ... % 6 residual\r","    NaN, NaN, 1e-10, NaN; ... % 7 susd\r","    NaN, -0.2, 0.2, NaN; ... % 8 delta ir2euv\r","    NaN, NaN, 1e-9, NaN; ... % 9 delta mi\r","    NaN, NaN, 1.4e-9, NaN; ... % 10 delta bao\r","    NaN, NaN, 0.8e-9, NaN; ... % 11 delta intraf\r","    NaN, NaN, 1.9e-9, NaN; ... % 12 delta total\r","    NaN, -0.8, 0.8, NaN; ... % 13 total ir2euv\r","    NaN, NaN, 5e-9, NaN; ... % 14 total mi \r","    NaN, NaN, 5e-9, NaN; ... % 15 total bao\r","    NaN, NaN, 2e-9, NaN; ... % 16 total intraf\r","    NaN, NaN, 7.2e-9, NaN]; % 17 total total\r","\r","le = sub_set_limits(limits(:, 1));\r","lw = sub_set_limits(limits(:, 2));\r","uw = sub_set_limits(limits(:, 3));\r","ue = sub_set_limits(limits(:, 4));\r","\r","function lm = sub_set_limits(limits)\r","\r","chucks = {'1', '2'};\r","ov = {'x', 'y'};\r","mi = {'ytx', 'xty'};\r","    \r","for ic = 1:2\r","    for ix = 1:2\r","        ov_string = ['ovl_chk' chucks{ic} '_997_' ov{ix}];\r","        %lm.uncontrolled.overlay.(ov_string) = limits(1);\r","        lm.input.overlay.(ov_string) = limits(2);\r","        lm.residue.overlay.(ov_string) = limits(6);\r","       \r","        ov_string = ['ovl_chk' chucks{ic} '_max_' ov{ix}];\r","        lm.correction.delta_unfiltered.bao.(ov_string) = limits(10);\r","        lm.correction.delta_unfiltered.k_factors.(ov_string) = limits(11);\r","        lm.correction.delta_unfiltered.total.(ov_string) = limits(12);\r","        \r","        lm.correction.total_unfiltered.bao.(ov_string) = limits(15);\r","        lm.correction.total_unfiltered.k_factors.(ov_string) = limits(16);\r","        lm.correction.total_unfiltered.total.(ov_string) = limits(17);\r","        \r","        ov_string = ['ovl_exp_' mi{ix} '_max_wafer_chk' chucks{ic}];\r","        lm.correction.delta_unfiltered.mirror.(ov_string) = limits(9);\r","        lm.correction.total_unfiltered.mirror.(ov_string) = limits(14);\r","    end\r","    \r","    lm.correction.monitor.susd.(['ovl_exp_grid_chk' chucks{ic} '_ty_susd']) = limits(7);\r","    lm.input.valid.(['ovl_exp_grid_chk' chucks{ic} '_nr_invalids']) = limits(4);\r","    lm.input.w2w.(['ovl_exp_grid_chk' chucks{ic}  '_max_w2w_var']) = limits(5);\r","end\r","\r","lm.correction.delta_unfiltered.waferheating.ovl_exp_grid_whc = limits(8);\r","lm.correction.total_unfiltered.waferheating.ovl_exp_grid_whc = limits(13); \r","\r","lm.input.outlier_coverage = limits(3);\r","        \r","        "],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,42,43,44,46,47,48,50,51,53,54,55,56,58,59,60,62,63,64,67,68,69,72,73,75],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}