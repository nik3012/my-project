var sourceData587 = {"FileContents":["function bmmo_xml_save(filename, data, root, root_attrib)\r","% function bmmo_xml_save(filename, data, root, root_attrib)\r","%\r","% alternative to xml_save, which allows write of root node attributes\r","%\r","% Input:\r","%   filename: filename to write to\r","%   data: xml data in matlab struct format, as read by xml_load\r","%   root: string containing root name\r","%   root_attrib: string of root attributes\r","\r","\r","fh = fopen(filename, 'W');\r","\r","%handle root node\r","fprintf(fh, '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n');\r","fprintf(fh, '<%s %s>\\n', root, root_attrib);\r","sub_xml_to_txt(fh, data, 1);\r","\r","fprintf(fh, '</%s>\\n', root);\r","\r","fclose(fh);\r","\r","\r","function sub_xml_to_txt(fh, data, depth)\r","\r","precision = '%.12g';\r","\r","names = fieldnames(data);\r","for f = 1:numel(names)\r","    name = names{f};\r","\r","    % Hop through the items for this field\r","    content = data.(name);\r","\r","    if isstruct(content)\r","            cname = strrep(name, '_colon_', ':');\r","\r","            % Write field name (assume we start on unindented newline)\r","            fprintf(fh, '<%s>\\n', cname);\r","            for i = 1:numel(content)\r","                sub_xml_to_txt(fh, content(i), depth+1);\r","            end\r","            fprintf(fh, '</%s>\\n', cname);\r","            \r","     elseif isnumeric(content)\r","            fprintf(fh, '<%s>', name);\r","            % Write number with designated precision\r","            txt = sprintf(precision, content);\r","            fprintf(fh, '%s</%s>\\n', txt, name);\r","\r","     elseif ischar(content)\r","            fprintf(fh, '<%s>', name);\r","            % Just paste string content\r","            txt = content;\r","            fprintf(fh, '%s</%s>\\n', txt, name);\r","\r","     else\r","            % Illegal content. Raise the alarm! Slow whoop all over!\r","            error('Invalid class %s for field %s', class(content), name);\r","\r","     end % of content inspection\r","\r","end\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[13,16,17,18,20,22,27,29,30,31,34,36,37,40,41,42,44,46,47,49,50,52,53,55,56,58,60],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}