var sourceData304 = {"FileContents":["classdef testBmmoKpiPatch < BMMO_XY.tools.testSuite\r","\r","    methods(Test)\r","        \r","        %% test the model uses old ir2euv for decorrection, and new ir2euv for correction\r","        function test_bmmo_p334968(obj)            \r","            % Given\r","            input_struct = bmmo_default_input;\r","            [mlp, options] = bmmo_process_input(input_struct);            \r","            for iw = 1:mlp.nwafer                                          % set wh fp to 1\r","                options.WH.fp.layer.wr(iw).dx = 1e-9 * ones(size(options.WH.fp.layer.wr(iw).dx));\r","            end\r","            options.WH.input_fp_per_chuck = bmmo_average_chuck(options.WH.fp, options);            \r","            options.previous_correction.IR2EUV = -1;\r","            options.IR2EUVsensitivity = 1;            \r","            model_results = bmmo_run_submodels(mlp, options);\r","            model_results.WH.Calib_WH = 5;        \r","            \r","            % When\r","            out = bmmo_process_output(input_struct, model_results, options);\r","            \r","            % Then\r","            obj.verifyWithinTol(out.report.KPI.uncontrolled.waferheating.ovl_exp_grid_dx_whc_uncontrolled, 1e-9);\r","            obj.verifyWithinTol(out.report.KPI.correction.total_unfiltered.total.ovl_chk1_997_x, 6e-9);            \r","        end\r","        \r","        %% test that the model uses input layout for calculating KPI correction statistics\r","        function test_bmmo_p334971(obj)\r","            % Given\r","            input_struct = bmmo_default_input;\r","            [mlp, options] = bmmo_process_input(input_struct);            \r","            out = bmmo_default_output_structure(options);\r","            \r","            % When\r","            fp = bmmo_INTRAF_SBC_fingerprint(mlp, out.corr.ffp, options);            \r","            for iw = 1:mlp.nwafer\r","                \r","                % Then\r","                obj.verifyTrue(all(~isnan(mlp.layer.wr(iw).dx) | isnan(fp.layer.wr(iw).dx)));\r","                obj.verifyTrue(all(~isnan(fp.layer.wr(iw).dx) | isnan(mlp.layer.wr(iw).dx)));\r","                obj.verifyTrue(all(~isnan(mlp.layer.wr(iw).dy) | isnan(fp.layer.wr(iw).dy)));\r","                obj.verifyTrue(all(~isnan(fp.layer.wr(iw).dy) | isnan(mlp.layer.wr(iw).dy)));\r","            end\r","        end\r","        \r","        %% test that the mi kpi stats are calculated on absolute values\r","        function test_bmmo_p334973(obj)\r","            % Given\r","            input_struct = bmmo_default_input;\r","            [mlp, options] = bmmo_process_input(input_struct);\r","            model_results = bmmo_run_submodels(mlp, options);              % ensure negative mi map\r","            for ic = 1:2\r","                model_results.MI.Calib_MI(ic).x_mirr.dx = 1e-9 * ones(size(model_results.MI.Calib_MI(ic).x_mirr.dx));\r","                model_results.MI.Calib_MI(ic).y_mirr.dy = 1e-9 * ones(size(model_results.MI.Calib_MI(ic).y_mirr.dy));\r","            end  \r","            \r","            % When\r","            out = bmmo_process_output(input_struct, model_results, options);            \r","            \r","            % Then\r","            obj.verifyWithinTol(out.report.KPI.correction.total_unfiltered.mirror.exp.ovl_exp_xty_997_full_chk1, 1e-9);\r","            obj.verifyWithinTol(out.report.KPI.correction.total_unfiltered.mirror.exp.ovl_exp_ytx_997_full_chk1, 1e-9);\r","            obj.verifyWithinTol(out.report.KPI.correction.total_unfiltered.mirror.exp.ovl_exp_xty_997_full_chk2, 1e-9);\r","            obj.verifyWithinTol(out.report.KPI.correction.total_unfiltered.mirror.exp.ovl_exp_ytx_997_full_chk2, 1e-9);            \r","        end\r","        \r","    end\r","    \r","end"],"CoverageData":{"CoveredLineNumbers":[8,9,10,11,13,14,15,16,17,20,23,24,30,31,32,35,36,39,40,41,42,49,50,51,52,53,54,58,61,62,63,64],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,1,1,1,6,0,1,1,1,1,1,0,0,1,0,0,1,1,0,0,0,0,0,1,1,1,0,0,1,1,0,0,6,6,6,6,0,0,0,0,0,0,1,1,1,1,2,2,0,0,0,1,0,0,1,1,1,1,0,0,0,0,0]}}