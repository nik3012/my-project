var sourceData94 = {"FileContents":["function [mlo, coeff] = bmmo_fit_model_perwafer(mli, options, varargin)\r","% function [mlo, coeff] = bmmo_fit_model_perwafer(mli, options, varargin)\r","%\r","% Fit the given parameters to the input overlay for each wafer, yielding \r","% residuals mlo and fit coefficients coeff\r","%\r","% Inputs:\r","%   mli: ml overlay structure\r","%   options: options structure containing parameter table\r","%  \r","% Optional Inputs:\r","%   varargin: a variable number (possibly 0) of parameter names and\r","%            options, including the following:\r","%           '10par': fit 10par\r","%           '6par': fit 6par\r","%           'tx', 'ty', etc: parameters to fit\r","%\r","% Output: \r","%   mlo: residue after per wafer removal of Interfield/Intrafield content\r","%       from mli  \r","%   coeff: q * m double matrix of fit coefficients, where q is the number of\r","%       parameters\r","%\r","% NB Make sure to call this function with valid parameter lists!\r","% NO checking is done on parameter order, duplication or validity\r","\r","mlo = mli;\r","\r","wd_in = mli.wd;\r","\r","dxs = horzcat(mli.layer.wr.dx);\r","dys = horzcat(mli.layer.wr.dy);\r","\r","lenx = size(dxs, 1);\r","\r","res_in = [dxs ; dys];\r","\r","[res_out, coeff] = bmmo_fit_parms(res_in, wd_in, options, varargin);\r","\r","for ilayer = 1:mli.nlayer\r","    for iwafer = 1:mli.nwafer\r","        column = (mli.nwafer * (ilayer-1)) + iwafer;\r","        mlo.layer(ilayer).wr(iwafer).dx = res_out(1:lenx, column );\r","        mlo.layer(ilayer).wr(iwafer).dy = res_out((lenx+1):end, column);\r","    end\r","end\r","\r",""],"CoverageData":{"CoveredLineNumbers":[27,29,31,32,34,36,38,40,41,42,43,44],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,860,0,860,0,860,860,0,860,0,860,0,860,0,860,860,1495,1495,1495,0,0,0,0]}}