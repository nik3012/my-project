var sourceData652 = {"FileContents":["%% history \r","%   2015-09-22 SBPR  creation\r","\r","function test_suite = test_bmmo_fit_parms\r","suite = initTestSuite2016(localfunctions);","if nargout==0","    suite.run();","else","    test_suite = suite;","end","\r","\r","%% 1 test with simple translation of small structure\r","function test_bmmo_fit_parms_1 % ok<DEFNU>\r","\r","% 1.1 simple translation of single structure\r","\r","wd.xc = [-3 -3 -3 0 0 0 3 3 3]';\r","wd.xf = [-1 0 1 -1 0 1 -1 0 1]';\r","wd.xw = wd.xc + wd.xf;\r","wd.yc = wd.xc;\r","wd.yf = wd.xf;\r","wd.yw = wd.xw;\r","\r","ml.wd = wd;\r","ml.nlayer = 1;\r","ml.nwafer = 1;\r","ml.nfield = 3;\r","ml.nmark = 3;\r","\r","ml.layer.wr.dx = ones(size(ml.wd.xw));\r","ml.layer.wr.dy = ones(size(ml.wd.yw));\r","\r","% after fitting, tx, ty == +1, and the residuals should be zero\r","% (give or take some rounding errors)\r","\r","mlo = ml;\r","mlo.layer.wr.dx = zeros(size(ml.wd.xw));\r","mlo.layer.wr.dy = zeros(size(ml.wd.yw));\r","\r","options.parlist = bmmo_parlist;\r","\r","[resout, coeff] = bmmo_fit_parms([ml.layer.wr.dx; ml.layer.wr.dy], ml.wd,  options, 'tx', 'ty');\r","\r","bmmo_assert_equal(resout, [mlo.layer.wr.dx; mlo.layer.wr.dy]);\r","bmmo_assert_equal(coeff, [1 1]');\r","\r","% test usage with design matrix\r","C = bmmo_get_design_matrix(ml.wd, options, 'tx', 'ty');\r","[resout_2, coeff_2] = bmmo_fit_parms([ml.layer.wr.dx; ml.layer.wr.dy], C,  options);\r","bmmo_assert_equal(resout, resout_2);\r","bmmo_assert_equal(coeff, coeff_2);\r","\r","%% 2. test against ovl_model 10par with random large structure, single wafer\r","function test_bmmo_fit_parms_2 % ok<DEFNU>\r","\r","mld = ovl_create_dummy('marklayout','BA-XY-DYNA-13X19','nwafer', 1,'nlayer', 1);\r","options.parlist = bmmo_parlist;\r","\r","mld.layer.wr.dx = 1e-9 * randn(size(mld.layer.wr.dx));\r","mld.layer.wr.dy = 1e-9 * randn(size(mld.layer.wr.dx));\r","\r","options.parlist = bmmo_parlist;\r","\r","[mlo, coeff] = ovl_model(mld);\r","\r","res_in = [mld.layer.wr.dx; mld.layer.wr.dy];\r","[res_out, coeff_out] = bmmo_fit_parms(res_in, mld.wd, options, '10par');\r","\r","fn = fieldnames(coeff);\r","coeffs_simple = zeros(10,1);\r","for ic = 1:10\r","    coeffs_simple(ic) = coeff.(fn{ic});\r","end\r","\r","bmmo_assert_equal(res_out, [mlo.layer.wr.dx; mlo.layer.wr.dy]);\r","bmmo_assert_equal(coeff_out, coeffs_simple);\r","\r","%% 3. test against ovl_model 10par with random large structure, multiple wafers\r","function test_bmmo_fit_parms_3 % ok<DEFNU>\r","\r","mld = ovl_create_dummy('marklayout','BA-XY-DYNA-13X19','nwafer', 6,'nlayer', 1);\r","options.parlist = bmmo_parlist;\r","\r","for iw = 1:6\r","    mld.layer.wr(iw).dx = 1e-9 * randn(size(mld.layer.wr(iw).dx));\r","    mld.layer.wr(iw).dy = 1e-9 * randn(size(mld.layer.wr(iw).dx));\r","end\r","    \r","options.parlist = bmmo_parlist;\r","\r","[mlo, coeff] = ovl_model(mld, '10par');\r","\r","%[mlo_metro, coeff_metro] = ovl_metro_model(mld, '10par');\r","\r","fn = fieldnames(coeff);\r","coeffs_simple = zeros(10,1);\r","for ic = 1:10\r","    coeffs_simple(ic) = coeff.(fn{ic});\r","end\r","\r","% entire structure\r","wd_in = struct;\r","[wd_in.xc, wd_in.yc, wd_in.xf, wd_in.yf, dxc, dyc] = ovl_concat_wafer_results(mld);\r","wd_in.xw = wd_in.xc + wd_in.xf;\r","wd_in.yw = wd_in.yc + wd_in.yf;\r","res_in = [dxc; dyc];\r","\r","[res_out, coeff_out] = bmmo_fit_parms(res_in, wd_in, options, '10par');\r","\r","[~,~,~,~, outdx, outdy] = ovl_concat_wafer_results(mlo);\r","bmmo_assert_equal(res_out, [outdx;outdy]);\r","bmmo_assert_equal(coeff_out, coeffs_simple);\r","\r","% per wafer\r","[mlo, coeff] = ovl_model(mld, 'perwafer');\r","\r","fn = fieldnames(coeff.wafer(1));\r","coeffs_simple = zeros(10,6);\r","for iw = 1:6\r","for ic = 1:10\r","    coeffs_simple(ic, iw) = coeff.wafer(iw).(fn{ic});\r","end\r","end\r","\r","res_in = [mld.layer.wr.dx; mld.layer.wr.dy];\r","[res_out, coeff_out] = bmmo_fit_parms(res_in, mld.wd, options, '10par');\r","bmmo_assert_equal(coeff_out, coeffs_simple);\r","bmmo_assert_equal(res_out, [ [mlo.layer.wr.dx]; [mlo.layer.wr.dy]]);\r","\r","\r"],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[5,6,7,8,9,18,19,20,21,22,23,25,26,27,28,29,31,32,37,38,39,41,43,45,46,49,50,51,52,57,58,60,61,63,65,67,68,70,71,72,73,76,77,82,83,85,86,87,90,92,96,97,98,99,103,104,105,106,107,109,111,112,113,116,118,119,120,121,122,126,127,128,129],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}