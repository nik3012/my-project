var sourceData168 = {"FileContents":["function mlo = bmmo_repair_intrafield_nans(mli, options)\r","% function mlo = bmmo_repair_intrafield_nans(mli, options)\r","%\r","% This function removes NaNs in the input by applying the 20par/33par model.\r","% The modeling type is configured through options.INTRAF.\r","% \r","% Input:\r","%  mli: input ml structure\r","%  options: BMMO/BL3 option structure with field: INTRAF.name\r","%\r","% Output: \r","%  mlo: output ml structure with Nans repaired if there exists\r","\r","mlo = mli;\r","parNames = options.INTRAF.name;\r","parNames = {'tx', 'ty', parNames{:}};\r","\r","for iwaf = 1:mli.nwafer\r","    for ilayer = 1:mli.nlayer\r","        \r","        ind_nan = isnan(mli.layer(ilayer).wr(iwaf).dx) | isnan(mli.layer(ilayer).wr(iwaf).dy);\r","        \r","        if ~isempty(ind_nan)\r","            mli_tmp = ovl_get_wafers(ovl_get_layers(mli, ilayer), iwaf);\r","            [res, parlist] = ovl_model(mli_tmp, parNames, 'perfield');\r","            parlist = bmmo_add_field_positions_to_parlist(parlist, mli_tmp);\r","            ml_par = ovl_model(ovl_create_dummy(mli_tmp), 'apply', parlist);\r","\r","            mlo.layer(ilayer).wr(iwaf).dx(ind_nan) = ml_par.layer.wr.dx(ind_nan);\r","            mlo.layer(ilayer).wr(iwaf).dy(ind_nan) = ml_par.layer.wr.dy(ind_nan);\r","        end\r","    end\r","end\r",""],"CoverageData":{"CoveredLineNumbers":[14,15,16,18,19,21,23,24,25,26,27,29,30],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,478,478,478,0,478,488,0,500,0,500,500,500,500,500,0,500,500,0,0,0,0]}}