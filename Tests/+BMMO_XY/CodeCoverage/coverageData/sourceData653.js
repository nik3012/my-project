var sourceData653 = {"FileContents":["function test_suite = test_bmmo_fix_nd_grid\r","suite = initTestSuite2016(localfunctions);\r","if nargout==0\r","    suite.run();\r","else\r","    test_suite = suite;\r","end\r","\r","% test with intrafield grid (i.e. a grid with a pointless meander in it]\r","function test_bmmo_fix_nd_grid_intrafield\r","\r","input_struct = bmmo_default_input;\r","intrafield_grid = input_struct.info.previous_correction.ffp(1);\r","\r","[grid_out_x, grid_out_y, index_out] = bmmo_fix_nd_grid(intrafield_grid.x, intrafield_grid.y);\r","\r","bmmo_assert_equal(intrafield_grid.x(index_out), grid_out_x);\r","bmmo_assert_equal(intrafield_grid.y(index_out), grid_out_y);\r","\r","% test with a meshgrid\r","function test_bmmo_fix_nd_grid_meshgrid\r","\r","xvector = -5:5;\r","yvector = -11:11;\r","\r","[meshx, meshy] = meshgrid(xvector, yvector);\r","[ndx, ndy] = ndgrid(xvector, yvector);\r","\r","[grid_out_x, grid_out_y, index_out, numx] = bmmo_fix_nd_grid(meshx, meshy);\r","\r","bmmo_assert_equal(meshx(index_out), grid_out_x);\r","bmmo_assert_equal(meshy(index_out), grid_out_y);\r","bmmo_assert_equal(ndx, grid_out_x);\r","bmmo_assert_equal(ndy, grid_out_y);\r","bmmo_assert_equal(numx, length(xvector));\r","\r","% verify that it does not break an ndgrid\r","function test_bmmo_fix_nd_grid_ndgrid\r","\r","xvector = -8:7;\r","yvector = -5:6;\r","\r","[ndx, ndy] = ndgrid(xvector, yvector);\r","\r","[grid_out_x, grid_out_y, index_out, numx] = bmmo_fix_nd_grid(ndx, ndy);\r","\r","bmmo_assert_equal(ndx, grid_out_x);\r","bmmo_assert_equal(ndy, grid_out_y);\r","bmmo_assert_equal(ndx(index_out), ndx);\r","bmmo_assert_equal(ndy(index_out), ndy);\r","bmmo_assert_equal(numx, length(xvector));\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[2,3,4,5,6,12,13,15,17,18,23,24,26,27,29,31,32,33,34,35,40,41,43,45,47,48,49,50,51],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}