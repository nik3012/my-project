var sourceData307 = {"FileContents":["classdef testBmmoMapLayouts < BMMO_XY.tools.testSuite\r","\r","    methods(Test)\r","        \r","        %% Case 1: very  simple layouts: check data mapping directly\r","        function Case1(obj)\r","            % Given\r","            xw = [-4, 0, 4];\r","            yw = xw;\r","            [xwg, ywg] = meshgrid(xw, yw);\r","            mli.wd.xw = xwg(:);\r","            mli.wd.yw = ywg(:);\r","            mli.layer.wr.dx = [1 4 7 2 5 8 3 6 9];\r","            mli.layer.wr.dy = mli.layer.wr.dx;\r","            mli.nlayer = 1;\r","            mli.nwafer = 1;\r","            mli.nfield = 1;\r","            mli.nmark = 9;\r","            xw = [-4, -2, 0, 2, 4];\r","            yw = xw;\r","            [xwg, ywg] = meshgrid(xw, yw);\r","            mlt.wd.xw = xwg(:);\r","            mlt.wd.yw = ywg(:);\r","            mlt.nwafer = 1;\r","            mlt.nlayer = 1;\r","            mlt.nfield = 1;\r","            mlt.nmark = 25;\r","            \r","            % When\r","            out = mlt;\r","            out.layer.wr.dx = [1 NaN 4 NaN 7 NaN NaN NaN NaN NaN 2 NaN 5 NaN 8 NaN NaN NaN NaN NaN  3 NaN 6 NaN 9]';\r","            out.layer.wr.dy = out.layer.wr.dx;\r","            mlo = bmmo_map_layouts(mli, mlt, 12);\r","            \r","            % Then\r","            obj.verifyWithinTol(mlo, out);\r","        end\r","        \r","        %% Test Case 2: one-mark-many-fields to 13x19; TODO add test condition\r","        function Case2(obj)\r","            % Given\r","            mli = bmmo_default_input;\r","            options = bmmo_default_options_structure;\r","            options.x_shift = [0, -260e-6; 0, -260e-6];\r","            options.y_shift = [0, -40e-6; 0, -40e-6];\r","            options = bmmo_ml_options(mli, options);\r","            tolerance_exponent = 12;                                                                    % tolerance for layout mark equality is 10^-12 m\r","            mlo = bmmo_construct_layout_from_ml(mli, options);                                          % build target layouts per layer\r","            \r","            for ilayer = 1:length(mlo)\r","                mlo(ilayer) = bmmo_shift_fields(mlo(ilayer), options.x_shift, options.y_shift, ilayer); % shift fields to measurement position\r","                mlo(ilayer) = bmmo_map_layouts(mli, mlo(ilayer), tolerance_exponent);                   % map input layout to shifted exposure layout, with fields in exposure sort order\r","                mlo(ilayer) = bmmo_shift_fields(mlo(ilayer), -options.x_shift, -options.y_shift);       % shift mapped fields to exposure position\r","            end\r","            \r","            % When\r","            mlo = bmmo_combine_fields(mlo(1), mlo(2), 1:mlo(2).nfield);                                 % combine the layers\r","            \r","            % Then\r","            obj.verifyTrue(mlo.nfield == 167);\r","            \r","            %%\r","            % Given\r","            for iw = 1:mlo.nwafer                                                                       % Make sure that every field has non-NaN values\r","                mlw = ovl_get_wafers(mlo, iw);\r","                for ifield = 1:89\r","                    \r","                    % When\r","                    ml_f = ovl_get_fields(mlw, ifield);\r","                    \r","                    % Then\r","                    obj.verifyTrue(any(~isnan(ml_f.layer.wr.dx) & ~isnan(ml_f.layer.wr.dy)));\r","                end\r","            end\r","        end\r","        \r","        %% Test Case 3: 89-field 13x19 layout to itself: should be unchanged\r","        function Case3(obj)\r","            % Given\r","            load([bmmo_testdata_root filesep 'TC08_01_out.mat']);\r","            out.info.report_data = [];\r","            out.info.previous_correction = [];\r","            \r","            % When\r","            mlo = bmmo_map_layouts(out, out, 12);\r","            \r","            % Then\r","            obj.verifyWithinTol(mlo, out);\r","        end\r","        \r","        %% Test Case 4: target and input with layout marks in reverse order; real data from m5786 BMMO\r","        function Case4(obj)\r","            % Given\r","            load([bmmo_testdata_root filesep 'map_layout_reversed_input.mat']);\r","            load([bmmo_testdata_root filesep 'map_layout_reversed_output.mat']);\r","            \r","            % When\r","            result = bmmo_map_layouts(mli, mlo, tolerance_exponent);\r","            \r","            % Then\r","            obj.verifyWithinTol(mlr.wd, result.wd);\r","            obj.verifyWithinTol(mlr.layer, result.layer);\r","        end\r","        \r","    end\r","    \r","end"],"CoverageData":{"CoveredLineNumbers":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,36,42,43,44,45,46,47,48,50,51,52,53,57,60,64,65,66,69,72,80,81,82,85,88,94,95,98,101,102],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,0,1,2,2,2,0,0,0,1,0,0,1,0,0,0,1,6,6,0,0,534,0,0,534,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,1,1,0,0,0,0,0]}}