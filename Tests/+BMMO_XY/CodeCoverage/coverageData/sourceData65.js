var sourceData65 = {"FileContents":["function FP_WH = bmmo_construct_FPS_WH(ml, options)\r","% function FP_WH = bmmo_construct_FPS_WH(ml, options)\r","%\r","% Generate the raw WH fingerprint for the combined model\r","%\r","% Input: \r","%  ml: input ml structure\r","%  options: structure containing the fields\r","%           WH.input_fp_per_chuck: input wafer heating fingerprint, averaged\r","%               per chuck (1 * 2 struct array)\r","%           chuck_usage.chuck_id_used: horizontal array of chuck ids used,\r","%               in order of wafers\r","%           chuck_usage.nr_chuck_used: Number of chucks where the wafers are \r","%               exposed (1 or 2)\r","%           resample_options: structure constaining details of\r","%               interpolation\r","%\r","% Output: \r","%  FP_WH: WH fingerprint (1x2 cell array of ml structs}, resampled\r","%           to input size if necessary\r","\r","FP_WH = num2cell(options.WH.input_fp_per_chuck);\r","\r","for ic = options.chuck_usage.chuck_id_used\r","    FP_WH{ic} = ovl_get_fields(options.WH.input_fp_per_chuck(ic), 1:ml.nfield);\r","    if options.WH.input_fp_per_chuck(ic).nmark ~= ml.nmark\r","        FP_WH{ic} = bmmo_resample(FP_WH{ic}, ml, options.WH_resample_options);\r","    end\r","end\r","\r","if options.chuck_usage.nr_chuck_used==2\r","    FP_WH = FP_WH';\r","end\r",""],"CoverageData":{"CoveredLineNumbers":[22,24,25,26,31,32],"UnhitLineNumbers":27,"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,283,0,283,548,548,0,0,0,0,283,265,0,0]}}