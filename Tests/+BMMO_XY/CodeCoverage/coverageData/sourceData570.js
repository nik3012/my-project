var sourceData570 = {"FileContents":["function corr_out = bmmo_parse_sbc_IFO(corr_in, xml_corr_IFO)\r","%% Description:\r","% Add the IFO corrections from xml to the input correction structure in the\r","% format of the bmmo_nxe_drift_control_model output\r","%\r","% Input:\r","% - corr_in: formatted correction structure with all corrections except SUSD\r","% - xml_corr_IFO: IntraFieldOffset for both chuck and scan directions from \r","%                 xml (ADELsbc or ADELscbrep)  \r","%\r","% Output:\r","% - sbc2: formatted correction set including SUSD\r","\r","%% History\r","% 20151008  SELR\tCreation\r","\r","corr_out = corr_in;\r","\r","NM = 1e-9;\r","UM = 1e-6;\r","URAD = 1e-6;\r","\r","for i_IFO = 1:length(xml_corr_IFO)    \r","    corr_out.SUSD(i_IFO).TranslationX = NM * str2double(xml_corr_IFO(i_IFO).Translation.X);\r","    corr_out.SUSD(i_IFO).TranslationY = NM * str2double(xml_corr_IFO(i_IFO).Translation.Y);\r","    corr_out.SUSD(i_IFO).Magnification = UM * str2double(xml_corr_IFO(i_IFO).Magnification);\r","    corr_out.SUSD(i_IFO).AsymMagnification = UM * str2double(xml_corr_IFO(i_IFO).AsymMagnification);\r","    corr_out.SUSD(i_IFO).Rotation = URAD * str2double(xml_corr_IFO(i_IFO).Rotation);\r","    corr_out.SUSD(i_IFO).AsymRotation = URAD * str2double(xml_corr_IFO(i_IFO).AsymRotation);\r","end"],"CoverageData":{"CoveredLineNumbers":[17,19,20,21,23,24,25,26,27,28,29],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,12,12,12,0,12,32,32,32,32,32,32,0]}}