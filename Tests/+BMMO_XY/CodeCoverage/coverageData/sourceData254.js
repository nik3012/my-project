var sourceData254 = {"FileContents":["classdef testBmmoBao10Par < BMMO_XY.tools.testSuite\r","    \r","    methods(Test)\r","        \r","        %% bao->10par->bao using zero data\r","        function Case1(obj)\r","            % Given\r","            options = bmmo_default_options_structure;\r","            out = bmmo_default_output_structure(options);            \r","            bao_correction = out.corr.BAO(1);            \r","            dummy = ovl_create_dummy('7x7', 'nlayer', 1);\r","            parlist = bmmo_BAO_to_10par(bao_correction);            \r","            ovl_model(dummy, 'apply', parlist); % check that it is a valid parlist\r","            \r","            % When            \r","            bao2 = bmmo_10par_to_BAO(parlist);\r","            \r","            % Then\r","            obj.verifyWithinTol(bao_correction, bao2);            \r","        end\r","        \r","        %% 10par->bao->10par using zero data\r","        function Case2(obj)\r","            % Given\r","            parlist.tx = 0;\r","            parlist.ty = 0;\r","            parlist.rws = 0;\r","            parlist.rwa = 0;\r","            parlist.mwa = 0;\r","            parlist.mws = 0;\r","            parlist.ma = 0;\r","            parlist.ms = 0;\r","            parlist.ra = 0;\r","            parlist.rs = 0;       \r","            \r","            % When\r","            bao = bmmo_10par_to_BAO(parlist);            \r","            par2 = bmmo_BAO_to_10par(bao);\r","            f1 = sort(fieldnames(parlist)); % check that exactly the same fields are present\r","            f2 = sort(fieldnames(par2));    % check that exactly the same fields are present\r","            \r","            % Then\r","            obj.verifyEqual(f1, f2);            \r","            for ifield = 1:length(f1)\r","                obj.verifyWithinTol(parlist.(f1{ifield}), par2.(f1{ifield}));\r","            end\r","        end\r","        \r","        %% 10par->bao->10par using ones data; test converted values\r","        function Case3(obj)\r","            % Given\r","            parlist.tx = 1;\r","            parlist.ty = 1;\r","            parlist.rws = 1;\r","            parlist.rwa = 2;\r","            parlist.mwa = 1;\r","            parlist.mws = 1;\r","            parlist.ma = 1;\r","            parlist.ms = 1;\r","            parlist.ra = 1;\r","            parlist.rs = 1;\r","            \r","            % When\r","            bao = bmmo_10par_to_BAO(parlist);\r","            \r","            % Then\r","            obj.verifyTrue(bao.ExpansionX == 2);\r","            obj.verifyTrue(bao.ExpansionY == 0);\r","            obj.verifyTrue(bao.InterfieldRotation == -1);\r","            obj.verifyTrue(bao.NonOrtho == 4);\r","            \r","            % When\r","            par2 = bmmo_BAO_to_10par(bao);\r","            f1 = sort(fieldnames(parlist)); % check that exactly the same fields are present\r","            f2 = sort(fieldnames(par2));    % check that exactly the same fields are present\r","            \r","            % Then\r","            obj.verifyEqual(f1, f2);            \r","            for ifield = 1:length(f1)\r","                obj.verifyWithinTol(parlist.(f1{ifield}), par2.(f1{ifield}));\r","            end\r","        end\r","        \r","    end\r","    \r","end"],"CoverageData":{"CoveredLineNumbers":[8,9,10,11,12,13,16,19,25,26,27,28,29,30,31,32,33,34,37,38,39,40,43,44,45,52,53,54,55,56,57,58,59,60,61,64,67,68,69,70,73,74,75,78,79,80],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,10,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,10,0,0,0,0,0,0]}}