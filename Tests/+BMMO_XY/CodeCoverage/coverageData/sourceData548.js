var sourceData548 = {"FileContents":["function bmmo_create_ADEL_SBC(infile, outfile, sbc, inline_sdm, machine, fms)\r","% function bmmo_create_ADEL_SBC(infile, outfile, sbc)\r","%\r","% Build a new ADEL SBC2 correction on the template of an existing one\r","% replacing the correction data with the data from a Matlab sbc2 correction\r","%\r","% Input\r","%   infile: full path of ADEL SBC2 recipe\r","%   outfile: full path of output file\r","%   sbc: Matlab sbc correction (output by bmmo_nxe_drift_control_model)\r","%\r","% Optional input:\r","%   inline_sdm: inline_sdm struct with either or both time_filter and sdm_model fields\r","%               (as parsed by bmmo_kt_process_SBC2).The value can be left\r","%               empty if not needed to be updated [Example:\r","%               bmmo_create_ADEL_SBC('AdelSbcIn.xml', 'AdelSbcOut.xml',\r","%               sbc, [], '1001', fms)]\r","%   machine: Machine ID (char) to be updated in the outfile\r","%   fms: xml loaded ADELfineMetrologyOverlayState file to update the FMS value\r","%\r","%\r","% 20160922 SBPR Creation\r","% 20190524 KZAK Fixed KA-map generation\r","% 20190807 SELR Updated for IFO in SBC2a\r","\r","if ischar(infile)\r","    xml_data = xml_load(infile);\r","else\r","    xml_data = infile;\r","end\r","    \r","tmp_data = bmmo_inject_sbc_into_ADEL_xml(xml_data, sbc);\r","\r","if nargin > 3\r","    if ~isempty(inline_sdm)\r","        tmp_data = sub_bmmo_inject_inline_sdm_into_ADEL_xml(tmp_data, inline_sdm);\r","    else\r","        warning('inline_sdm is empty, Header of SdmDistortionMap will not be updated in the xml.')\r","    end\r","end\r","% Optional: overwrite machine name\r","if nargin > 4\r","    tmp_data.Header = sub_update_header(tmp_data.Header, machine);\r","end\r","    \r","% Optional: overwrite FMS\r","if nargin > 5\r","    tmp_data.FineMetrologyOverlayState = fms.FineMetrologyOverlayState.CalibrationState.Value;\r","end\r","\r","schema_info = 'xsi:schemaLocation=\"http://www.asml.com/XMLSchema/MT/Generic/ADELsbcOverlayDriftControlNxe/vx.x ADELsbcOverlayDriftControlNxe.xsd\" xmlns:ns0=\"http://www.asml.com/XMLSchema/MT/Generic/ADELsbcOverlayDriftControlNxe/vx.x\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"';\r","schema_info = strrep(schema_info, 'vx.x', xml_data.Header.VersionId);\r","bmmo_xml_save(outfile, tmp_data, 'ns0:Recipe', schema_info);\r","\r","function tmp_data = sub_bmmo_inject_inline_sdm_into_ADEL_xml(tmp_data, inline_sdm)\r","MAX_CHUCK_NR = 2;\r","sbc_chuck_order = arrayfun(@(x) str2double(x.elt.ApplicationRange.Exposure.Wafer.WaferStageChuckId(end)), tmp_data.CorrectionSets);\r","\r","for ic = 1:MAX_CHUCK_NR\r","    chuck_id = sbc_chuck_order(ic);\r","    if isfield(inline_sdm, 'time_filter')\r","        tmp_data.CorrectionSets(chuck_id).elt.Parameters.SdmDistortionMap.Header.TimeFilter = sprintf('%.4f', inline_sdm.time_filter);\r","    end\r","    if isfield(inline_sdm, 'sdm_model')\r","        tmp_data.CorrectionSets(chuck_id).elt.Parameters.SdmDistortionMap.Header.SdmModel = inline_sdm.sdm_model;\r","    end\r","end\r","\r","\r","function header_out = sub_update_header(header_in, machine_id)\r","\r","header_out = header_in;\r","\r","dateformat = 'YYYY-mm-DDTHH:MM:SS';\r","doctime = now;\r","header_out.CreateTime = datestr(doctime, dateformat);\r","header_out.LastModifiedTime = datestr(doctime, dateformat);\r","header_out.MachineName = num2str(machine_id);\r","\r","docid_dateformat = 'YYYYmmDD_HHMM';\r","doc_timestr = datestr(doctime, docid_dateformat);\r","\r","header_out.DocumentId = ['ADELsbc2-' num2str(machine_id) '-' doc_timestr];\r",""],"CoverageData":{"CoveredLineNumbers":[26,28,29,32,34,35,36,37,38,42,43,47,48,51,52,53,56,57,59,60,61,62,64,65,72,74,75,76,77,78,80,81,83],"UnhitLineNumbers":27,"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,0,0,2,0,2,2,1,1,1,0,0,0,2,1,0,0,0,2,1,0,0,2,2,2,0,0,1,1,0,1,2,2,2,0,2,2,0,0,0,0,0,0,1,0,1,1,1,1,1,0,1,1,0,1,0]}}