var sourceData69 = {"FileContents":["function mlo = bmmo_construct_wh_fp(mli, options)\r","% function mlo = bmmo_construct_wh_fp(mli, options)\r","% \r","% This function calculates the Wafer heating(WH) fingerprint from given K\r","% factors(k1~k20 except k13 and k20) per field. \r","% \r","% Input: \r","% mli : input ml struct \r","% options : BMMO/BL3 default options structure \r","%\r","% Output:\r","%  mlo : WH fingerprint converted from the given K-factors. Single layer and\r","%  single wafer. The number of wafers, fields, marks should agree\r","%  with those in the input ml struct, mli. \r","%\r","% For details of the model and definitions of in/out interfaces, refer to\r","% D000810611 EDS BMMO NXE drift control model\r","\r","if isfield(options, 'WH') & isfield(options.WH, 'use_input_fp') & options.WH.use_input_fp   \r","    \r","    % use the input wh fp data\r","    mlo = options.WH.fp;\r","else\r","\r","    % Get a field from the input layout to supply intrafield coordinates\r","    ml = ovl_get_fields(ovl_get_wafers(ovl_get_layers(mli, 1),1),1);\r","    x_f = ml.wd.xf;\r","    y_f = ml.wd.yf; \r","\r","    % Build 18par design matrices for x and y\r","    D_x =[ones(size(x_f)), x_f, y_f, x_f.^2, x_f.*y_f, y_f.^2, x_f.^2.*y_f, x_f.*y_f.^2, y_f.^3];\r","    D_y =[ones(size(y_f)), y_f, x_f, y_f.^2, y_f.*x_f, x_f.^2, y_f.^3, y_f.^2.*x_f, y_f.*x_f.^2];             \r","    D_x = repmat(D_x, mli.nfield, 1);\r","    D_y = repmat(D_y, mli.nfield, 1);\r","\r","    % Specify which Kfactors apply to x and y\r","    x_factors = [1:2:11 14:2:18]; % Odd K-numbers except K13\r","    y_factors = [2:2:12 13:2:17]; % Even K-numbers except K20\r","\r","    mlo = ovl_get_wafers(mli, []);\r","    mlo_tmp = ovl_get_wafers(mli, 1);\r","    for iwafer = 1:mli.nwafer\r","\r","       % Get a matrix of the K-factor values for this wafer\r","       Kmatrix = bmmo_pars_to_k_factor_matrix(options.WH_K_factors.wafer(iwafer).field, mli.nmark, mli.nfield);\r","       \r","       % Set all NaNs to zero: they will contaminate the entire wafer\r","       % otherwise\r","       Kmatrix(isnan(Kmatrix)) = 0;\r","       \r","       % Kmatrix is now an 18 X (nmark * nfield) matrix\r","       % Reshape to two (nmark * nfield) X 9 matrices for X and Y\r","       x_Kfactors = Kmatrix(x_factors, :)';\r","       y_Kfactors = Kmatrix(y_factors, :)';\r","\r","       % multiply\r","       mlo_tmp.layer.wr.dx = sum(D_x .* x_Kfactors, 2);\r","       mlo_tmp.layer.wr.dy = sum(D_y .* y_Kfactors, 2);\r","\r","       %mlo_tmp = ovl_remove_edge(mlo_tmp, options.edge_clearance);\r","       mlo = ovl_combine_wafers(mlo, mlo_tmp);  \r","    end\r","    \r","end  \r",""],"CoverageData":{"CoveredLineNumbers":[19,22,23,26,27,28,31,32,33,34,37,38,40,41,42,45,49,53,54,57,58,61],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0,1,177,0,0,177,177,177,0,0,177,177,177,177,0,0,177,177,0,177,177,177,0,0,916,0,0,0,916,0,0,0,916,916,0,0,916,916,0,0,916,0,0,0,0]}}