var sourceData646 = {"FileContents":["% Changelog\r","% 2015-06-30  MoZH  creation\r","% 2018-12-17  SELR  added setup function\r","\r","function test_suite = test_bmmo_field_reconstruction    %#ok<STOUT>\r","suite = initTestSuite2016(localfunctions);\r","if nargout==0\r","    suite.run();\r","else\r","    test_suite = suite;\r","end\r","\r","\r","function setup_data = setup\r","\r","%load([bmmo_testdata_root filesep 'TC08_01_in.mat']);\r","ml = bmmo_default_input;\r","ml = bmmo_turn_off_l2(ml);\r","load([bmmo_testdata_root filesep 'TC08_01_out.mat']);\r","load([bmmo_testdata_root filesep 'input_struct_lcp_89fields.mat']);\r","\r","% a = find(abs(ml.wd.yf - 0.0125) < 0.0001);\r","% b = find(abs(ml.wd.yf - 0.0143) < 0.0001);\r","% ml.wd.yf(a)=ml.wd.yf(7745);\r","% ml.wd.yf(b)=ml.wd.yf(7745);\r","\r","setup_data.options = bmmo_default_options_structure;\r","%setup_data.options.intrafield_reticle_layout = setup_data.options.reduced_reticle_layout;\r","setup_data.out = out;\r","setup_data.ml = ml;\r","setup_data.input_struct = input_struct;\r","\r","\r","%1. Test with one-mark-many-fields input\r","% Needs a different data set\r","% function test_TC08_01(setup_data) %#ok<DEFNU>\r","% options = setup_data.options;\r","% out = setup_data.out;\r","% options.mark_type = 'udbo';\r","% load([bmmo_testdata_root filesep 'TC08_01_in.mat']);\r","% ml = bmmo_phase_2_input(ml);\r","% options = bmmo_ml_options(ml, options);\r","% \r","% test_out = bmmo_field_reconstruction(ml, options);\r","% \r","% bmmo_assert_equal(out.wd, test_out.wd);\r","% bmmo_assert_equal(out.layer, test_out.layer);\r","\r","\r","%2. Test that the output remains unchanged when run though reconstruction\r","function test_TC08_02(setup_data) %#ok<DEFNU>\r","out = bmmo_phase_2_input(setup_data.out);\r","options = bmmo_ml_options(out, setup_data.options);\r","\r","options.x_shift = [0; 0];\r","options.y_shift = [0; 0];\r","\r","test_out = bmmo_field_reconstruction(out, options);\r","\r","bmmo_assert_equal(out.wd, test_out.wd);\r","bmmo_assert_equal(out.layer, test_out.layer);\r","\r","\r","%3. Test that the output is unchanged for one layer inputs\r","function test_bmmo_field_reconstruction_case3(setup_data) %#ok<DEFNU>\r","out = bmmo_phase_2_input(setup_data.out);\r","options = bmmo_ml_options(out, setup_data.options);\r","\r","options.x_shift = [0; 0];\r","options.y_shift = [0; 0];\r","options.layer_fields{1} = 1:89;\r","options.layer_fields{2} = 100;\r","\r","test_out = bmmo_field_reconstruction(out, options);\r","\r","bmmo_assert_equal(out.wd, test_out.wd);\r","bmmo_assert_equal(out.layer, test_out.layer);\r","\r","\r","% function test_TC08_02 %#ok<DEFNU>\r","% \r","% load([bmmo_testdata_root filesep 'TC08_02_in.mat']);\r","% mli = ml;\r","% idnan = isnan(mli.layer.wr(1).dx);\r","% nmark = 1;\r","% nfield = mli.nfield*mli.nmark - sum(idnan);\r","% mli.wd.xc(idnan) = [];\r","% mli.wd.yc(idnan) = [];\r","% mli.wd.xf(idnan) = [];\r","% mli.wd.yf(idnan) = [];\r","% mli.wd.xw(idnan) = [];\r","% mli.wd.yw(idnan) = [];\r","% for ilayer = 1:mli.nlayer;\r","%     for iwafer = 1:mli.nwafer;\r","%         mli.layer(ilayer).wr(iwafer).dx(idnan) = [];\r","%         mli.layer(ilayer).wr(iwafer).dy(idnan) = [];\r","%     end\r","% end\r","% mli.nmark  = nmark;\r","% mli.nfield = nfield;\r","% \r","% test_out = bmmo_field_reconstruction(mli);\r","% \r","% bmmo_assert_equal(ml.layer, test_out.layer);\r","\r","\r","function test_bmmo_field_reconstruction_case4(setup_data)\r","input_struct = setup_data.input_struct;\r","% include data from ml info structure \r","options = bmmo_ml_options(input_struct, setup_data.options);\r","\r","% reconstruct to fields of 13x19 in exposure order\r","[mlo, options] = bmmo_field_reconstruction(input_struct, options);\r","assertEqual(length(options.layer_fields), 1);\r","assertEqual(options.layer_fields{1}, 1:89);"],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[6,7,8,9,10,17,18,19,20,27,29,30,31,52,53,55,56,58,60,61,66,67,69,70,71,72,74,76,77,108,110,113,114,115],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}