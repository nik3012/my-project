var sourceData719 = {"FileContents":["classdef testInlineSdmModelDefault < matlab.unittest.TestCase\r","    \r","    properties\r","        sut\r","        configuration\r","    end\r","    \r","    methods (TestClassSetup)\r","        function setup(tc)\r","            tc.configuration = bl3_3600D_model_configuration();\r","            tc.sut = bmmo_InlineSdmModelDefault(tc.configuration);\r","        end\r","    end\r","    \r","    methods (Test)\r","        function testCreation(tc)\r","            tc.sut;\r","        end\r","        \r","        function testReportingResidue(tc)\r","            mlDisto = testHocModelDefault.generateRandomMlDisto();\r","            tc.sut.mlDistoIn = mlDisto;\r","            tc.sut.calcReport();\r","            [~, ~, ~, ~, res] = ...\r","                bmmo_model_inlineSDM_new(ovl_get_wafers(mlDisto, 1), ...\r","                ovl_get_wafers(mlDisto, 2), 'LFP', 0, 'default');\r","            \r","            bmmo_assert_equal(tc.sut.report.lens.Res.Lens.dx, res.LensRes.dx)\r","            bmmo_assert_equal(tc.sut.report.lens.Res.Lens.dy, res.LensRes.dy)\r","            \r","            for iChuck = 1:2\r","                bmmo_assert_equal(tc.sut.report.hoc.mlHocRes.layer.wr(iChuck).dx, ...\r","                    res.HOCRes(iChuck).dx)\r","                bmmo_assert_equal(tc.sut.report.hoc.mlHocRes.layer.wr(iChuck).dy, ...\r","                    res.HOCRes(iChuck).dy)\r","                bmmo_assert_equal(tc.sut.report.res.layer.wr(iChuck).dx, ...\r","                    res.TotalRes(iChuck).dx)\r","                bmmo_assert_equal(tc.sut.report.res.layer.wr(iChuck).dy, ...\r","                    res.TotalRes(iChuck).dy)\r","            end\r","        end\r","        \r","        function testApplySbcBmmoRintPoly2splineEnabled(tc)\r","            tc.configuration.setValue({'HocPoly2Spline'}, {'Enabled'})\r","            tc.sut = bmmo_InlineSdmModelDefault(tc.configuration);\r","            mlDisto = testHocModelDefault.generateRandomMlDisto();\r","            tc.sut.mlDistoIn = mlDisto;\r","            in = bmmo_default_input;\r","            in.info.configuration_data.platform = 'LIS';\r","            [tc.sut.mlWaferIn, options] = bmmo_process_input(in);\r","            tc.sut.run(); \r","            \r","            mlActuatedCenterField = ...\r","                ovl_get_wafers(ovl_get_fields(tc.sut.mlChuckCorr, 21), 1:2);\r","\r","            reportCorRint = bmmo_correct_intrafield_shift(tc.sut.report.cor, options);\r","            bmmo_assert_equal(reportCorRint.layer, ...\r","                mlActuatedCenterField.layer, 7e-11);\r","            \r","            mlActuatedEdgeField = ...\r","                ovl_get_wafers(ovl_get_fields(tc.sut.mlChuckCorr, 17), 1:2);\r","            \r","            % Edge field actuation is different from reporting actuation\r","            tc.verifyError(@()bmmo_assert_equal(tc.sut.report.cor.layer, ...\r","                mlActuatedEdgeField.layer, 0 , 0), 'MATLAB:assertion:failed');\r","        end\r","        \r","        function testApplySbcBmmoXpaPoly2SplineDisabled(tc)\r","            mlDisto = testHocModelDefault.generateRandomMlDisto();\r","            tc.sut.mlDistoIn = mlDisto;\r","            in = bmmo_default_input;\r","            tc.sut.mlWaferIn = bmmo_process_input(in);\r","            tc.sut.run(); \r","            \r","            mlActuatedCenterField = ...\r","                ovl_get_wafers(ovl_get_fields(tc.sut.mlChuckCorr, 21), 1:2);\r","\r","            bmmo_assert_equal(tc.sut.report.cor.layer, ...\r","                mlActuatedCenterField.layer, 7e-11);\r","            \r","            mlActuatedEdgeField = ...\r","                ovl_get_wafers(ovl_get_fields(tc.sut.mlChuckCorr, 17), 1:2);\r","            \r","            % Edge field actuation is different from reporting actuation\r","            tc.verifyError(@()bmmo_assert_equal(tc.sut.report.cor.layer, ...\r","                mlActuatedEdgeField.layer, 0 , 0), 'MATLAB:assertion:failed');\r","        end\r","    end\r","end"],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[10,11,17,21,22,23,24,25,26,28,29,31,32,33,34,35,36,37,38,39,44,45,46,47,48,49,50,51,53,54,56,57,58,60,61,64,65,69,70,71,72,73,75,76,78,79,81,82,85,86],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}