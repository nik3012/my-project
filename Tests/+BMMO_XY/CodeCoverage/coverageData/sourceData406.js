var sourceData406 = {"FileContents":["function [input_struct, readout_date] = bmmo_convert_adel_data(adelmet, adelsbc, adelwh)\r","% function input_struct = bmmo_convert_adel_data(adelmet, adelsbc, adelwh)\r","%\r","% Convert data from ADELmetrology (and optionally,\r","% ADELsbcOverlayDriftControlNxerep and ADELwaferHeatingCorrectionsReport)\r","% to BMMO-NXE model input structure\r","%\r","% Input:\r","%   adelmet: full path of ADELmetrology xml file\r","%\r","% Optional Input:\r","%   adelsbc: full path of ADELsbcOverlayDriftControlNxerep xml file\r","%       (default: zero previous correction)\r","%   adelwh: full path of ADELwaferHeatingCorrectionsReport xml file\r","%       (default: zero WH fingerprint)\r","%\r","% Output:\r","%   input_struct: valid BMMO-NXE input structure containing the data from\r","%   the ADEL file(s)\r","%\r","% 20170601 SBPR Creation\r","\r","\r","[mls, readout_date] = bmmo_read_adelmetrology(adelmet);\r","\r","% find the first non-WID target label\r","labels = {mls.targetlabel};\r","target_index = sub_get_target_id(labels);\r","ml = mls(target_index);\r","input_struct = bmmo_convert_generic_ml(ml(1));\r","\r","if nargin > 1\r","    prev_corr = bmmo_read_sbc_from_ADELrep(adelsbc);\r","    prev_corr.ffp = bmmo_map_ffp(input_struct, prev_corr.ffp); \r","    \r","    input_struct.info.previous_correction = prev_corr;\r","    \r","    if nargin > 2\r","        input_struct = bmmo_kt_process_adelwhc_input(input_struct, adelwh);\r","    end\r","end\r","\r","\r","function index = sub_get_target_id(labels)\r","\r","% look for non-WID targets\r","target_names = {'WID'};\r","\r","index = true(size(labels));\r","\r","for ii = 1:length(target_names)\r","    index = index & cellfun(@isempty, strfind(labels, target_names{ii})); \r","end\r","\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[24,27,28,29,30,32,33,34,36,38,39,47,49,51,52],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}