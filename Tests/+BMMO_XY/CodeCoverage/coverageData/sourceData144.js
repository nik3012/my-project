var sourceData144 = {"FileContents":["function intraf_out = bmmo_intrafield_interpolation_gridded(intraf_in, intraf_target, resample_options)\r","% function intraf_out = bmmo_intrafield_interpolation_gridded(intraf_in, intraf_target, resample_options)\r","%\r","% 'Fast' intrafield interpolation for BL3 CET residual /INTRAF model\r","%   Same interface as bmmo_resample\r","%\r","% Input:\r","%   intraf_in: ml structure containing original data to be resampled\r","%   intraf_target: ml structure specifying target layout on which to\r","%       resample\r","%   resample_options: structure containing the following fields:\r","%       nan_interpolation: how to extrapolate / interpolate NaNs (char\r","%       array)\r","%       bounding_box: dimensions of square bounding box around data\r","%       interp_type: interpolation type (cf. Matlab interp2 options)\r","%       extrap_type: extrapolation type (cf. Matlab griddedInterpolant\r","%       options)\r","%       Optional fields\r","%        xf_grid: ND grid of target layout\r","%        yf_grid: ND grid of target layout\r","%        index_out: index mapping disto to ND grid\r","%\r","% Output:\r","%  intraf_out: intraf_in interpolated to marks given in intraf_target\r","\r","if ~isfield(resample_options, 'xf_grid')\r","    [resample_options.xf_grid, resample_options.yf_grid, resample_options.index_out] = bmmo_fix_nd_grid(intraf_in.wd.xf, intraf_in.wd.yf);\r","end\r","\r","intraf_out = intraf_target;\r","\r","[nx, ny] = size(resample_options.xf_grid);\r","\r","dx_interpolant = griddedInterpolant(resample_options.xf_grid, resample_options.yf_grid, ...\r","    reshape(intraf_in.layer.wr.dx(resample_options.index_out), nx, ny), resample_options.interp_type, resample_options.extrap_type);\r","dy_interpolant = griddedInterpolant(resample_options.xf_grid, resample_options.yf_grid, ...\r","    reshape(intraf_in.layer.wr.dy(resample_options.index_out), nx, ny), resample_options.interp_type, resample_options.extrap_type);\r","\r","for iw = 1:intraf_target.nwafer        \r","    intraf_out.layer.wr(iw).dx = dx_interpolant(intraf_target.wd.xf, intraf_target.wd.yf);\r","    intraf_out.layer.wr(iw).dy = dy_interpolant(intraf_target.wd.xf, intraf_target.wd.yf);\r","end\r","        \r","        "],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[26,27,30,32,34,35,36,37,39,40,41],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}