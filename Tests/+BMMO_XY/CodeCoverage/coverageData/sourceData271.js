var sourceData271 = {"FileContents":["classdef testBmmoFfpToMlSimple < BMMO_XY.tools.testSuite\r","    \r","    methods(Static)\r","        \r","        %% Sub function\r","        function [ffp, options] = sub_get_random_ffp\r","            % generate random ffp\r","            options = bmmo_default_options_structure;\r","            out = bmmo_default_output_structure(options);\r","            ffp = out.corr.ffp;\r","            \r","            for ic = 1:2\r","                ffp(ic).dx = randn(size(ffp(ic).dx));\r","                ffp(ic).dy = randn(size(ffp(ic).dy));\r","            end\r","        end\r","        \r","    end\r","    \r","    methods(Test)\r","        \r","        %% 1. Test against bmmo_ffp_to_ml: 2 inputs\r","        function Case1(obj)\r","            % Given\r","            rng(59590);            \r","            ffp= obj.sub_get_random_ffp;\r","            mlp = bmmo_process_input(bmmo_default_input);   \r","            \r","            % When\r","            ml_exp = bmmo_ffp_to_ml(ffp, mlp);\r","            ml_test = bmmo_ffp_to_ml_simple(ffp, mlp);\r","            \r","            % Then\r","            obj.verifyWithinTol(ml_exp, ml_test);\r","        end\r","        \r","        %% 2. Test against bmmo_ffp_to_ml: 1 input\r","        function test_bmmo_ffp_to_ml_simple_case2(obj)\r","            % Given\r","            rng(3450);            \r","            ffp= obj.sub_get_random_ffp;\r","\r","            % When\r","            ml_exp = bmmo_ffp_to_ml(ffp);\r","            ml_test = bmmo_ffp_to_ml_simple(ffp);\r","            \r","            % Then\r","            obj.verifyWithinTol(ml_exp, ml_test);\r","        end\r","        \r","    end\r","    \r","end"],"CoverageData":{"CoveredLineNumbers":[8,9,10,12,13,14,25,26,27,30,31,34,40,41,44,45,48],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,2,2,2,0,2,4,4,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,0,0,1,0,0,0,0,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0]}}