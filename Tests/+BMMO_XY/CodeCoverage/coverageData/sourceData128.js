var sourceData128 = {"FileContents":["function [kfactors, ml_corr] = bmmo_get_kfactors_per_chuck(ml, options)\r","% function [kfactors, ml_corr] = bmmo_get_kfactors_per_chuck(ml, options)\r","%\r","% Given an ml struct, get the 20par fit per chuck and the 20par correctable\r","%\r","% Input:\r","%   ml: overlay structure\r","%   options: BMMO/BL3 options structure\r","%\r","% Output:\r","%   kfactors: K-factor coefficients per chuck\r","%   ml_corr: 20par correctible\r","\r","ml_corr = ovl_get_wafers(ml, []);\r","\r","for ic = 1:2\r","    wafers_this_chuck = find(options.chuck_usage.chuck_id == ic);\r","    ml_chuck = ovl_get_wafers(ml, wafers_this_chuck);\r","     [res, kfactors_temp(ic)] = ovl_model(ml_chuck, options.intraf_CETparfull.name, 'no_norm');\r","     kfactors(ic) = rmfield(kfactors_temp(ic), {'rs', 'ra', 'ms', 'ma', 'rws', 'rwa', 'mws', 'mwa'}); \r","    ml_corr = ovl_combine_wafers(ml_corr, ovl_sub(ml_chuck, res));\r","end"],"CoverageData":{"CoveredLineNumbers":[14,16,17,18,19,20,21],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,733,0,733,1466,1466,1466,1466,1466,0]}}