var sourceData246 = {"FileContents":["classdef testBmmoAddOutputCorr < BMMO_XY.tools.testSuite\r","    \r","    methods(Static)\r","        \r","        %% Sub function\r","        function out = sub_get_nonzero_output(out_zero, susd_ty_only)\r","            out = out_zero;                     % fill in structure with nonzero values\r","            fn_bao = fieldnames(out.corr.BAO);\r","            if susd_ty_only\r","                fn_susd = {'TranslationY'};\r","            else\r","                fn_susd = fieldnames(out.corr.SUSD);\r","            end\r","            out.corr.IR2EUV = 6;\r","            for ic = 1:2\r","                out.corr.MI.wse(ic).x_mirr.dx =  out.corr.MI.wse(ic).x_mirr.dx + 5e-9;\r","                out.corr.MI.wse(ic).y_mirr.dy =  out.corr.MI.wse(ic).y_mirr.dy + 5e-9;\r","                out.corr.KA.grid_2de(ic).dx = out.corr.KA.grid_2de(ic).dx + 4e-9;\r","                out.corr.KA.grid_2de(ic).dy = out.corr.KA.grid_2de(ic).dy + 4e-9;\r","                out.corr.ffp(ic).dx = out.corr.ffp(ic).dx + 3e-9;\r","                out.corr.ffp(ic).dy = out.corr.ffp(ic).dy + 3e-9;\r","                for ifield = 1:length(fn_susd)\r","                    out.corr.SUSD(ic).(fn_susd{ifield}) = out.corr.SUSD(ic).(fn_susd{ifield}) + 2e-9;\r","                end\r","                for ifield = 1:length(fn_bao)\r","                    out.corr.BAO(ic).(fn_bao{ifield}) = out.corr.BAO(ic).(fn_bao{ifield}) + 2e-9;\r","                end\r","            end\r","            out.corr.MI.wsm = out.corr.MI.wse;\r","        end\r","        \r","    end\r","    \r","    methods(Test)\r","        \r","        %% add zero structure to itself: output should be same as input\r","        function Case1(obj)\r","            % Given\r","            options = bmmo_default_options_structure;\r","            \r","            % When\r","            options.susd_control = 1;\r","            out = bmmo_default_output_structure(options);\r","            corr_new = bmmo_add_output_corr(out.corr, out.corr);\r","            \r","            % Then\r","            obj.verifyWithinTol(out.corr, corr_new);\r","        end\r","        \r","        %% add zero structure to random structure: output should be same as random structure. Also perform associativity test\r","        function Case2(obj)\r","            % Given\r","            options = bmmo_default_options_structure;\r","            \r","            % When\r","            options.susd_control = 1;\r","            out_zero = bmmo_default_output_structure(options);\r","            susd_ty_only = 1;            \r","            out = obj.sub_get_nonzero_output(out_zero, susd_ty_only);  \r","            corr_new = bmmo_add_output_corr(out_zero.corr, out.corr);\r","            \r","            % Then\r","            obj.verifyWithinTol(out.corr, corr_new);\r","            \r","            %%\r","            % When\r","            corr_new = bmmo_add_output_corr(out.corr, out_zero.corr);       % associativity test\r","            \r","            % Then\r","            obj.verifyWithinTol(out.corr, corr_new);\r","        end\r","        \r","        %% add nonzero structure to its inverse; result should be zero\r","        function Case3(obj)\r","            % Given\r","            options = bmmo_default_options_structure;\r","            options.susd_control = 1;\r","            out_zero = bmmo_default_output_structure(options);\r","            susd_ty_only = 1;\r","            out1 = obj.sub_get_nonzero_output(out_zero, susd_ty_only);\r","            out2 = out1;\r","            options.filter.coefficients.WH = 1;             % make sure filter coefficients are all 1\r","            options.filter.coefficients.BAO = 1;\r","            options.filter.coefficients.MI = 1;\r","            options.filter.coefficients.KA = 1;\r","            options.filter.coefficients.INTRAF = 1;\r","            options.filter.coefficients.SUSD = 1;            \r","            out2.corr = bmmo_apply_time_filter(out1.corr, options.filter.coefficients, -1);\r","            \r","            % When\r","            corr_new = bmmo_add_output_corr(out1.corr, out2.corr);\r","            \r","            % Then\r","            obj.verifyWithinTol(out_zero.corr, corr_new);\r","        end\r","        \r","        %% Only add TranslationY when adding SUSD corrections\r","        function Case4(obj)\r","            % Given\r","            options = bmmo_default_options_structure;\r","            \r","            % When\r","            out1 = bmmo_default_output_structure(options);\r","            susd_ty_only = 0;\r","            out2 = obj.sub_get_nonzero_output(out1, susd_ty_only);            \r","            susd_ty_only = 1;\r","            out3 = obj.sub_get_nonzero_output(out1, susd_ty_only);\r","            corr_new = bmmo_add_output_corr(out1.corr, out2.corr);\r","            \r","            % Then\r","            obj.verifyWithinTol(out3.corr, corr_new);\r","        end\r","        \r","    end\r","    \r","end"],"CoverageData":{"CoveredLineNumbers":[7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,25,26,29,39,42,43,44,47,53,56,57,58,59,60,63,67,70,76,77,78,79,80,81,82,83,84,85,86,87,88,91,94,100,103,104,105,106,107,108,111],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,4,4,4,3,1,1,0,4,4,8,8,8,8,8,8,8,18,0,8,80,0,0,4,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,1,0,0,0,0,0,1,0,0,1,1,1,1,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,0]}}