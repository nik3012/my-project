var sourceData543 = {"FileContents":["function [input_struct, bar_struct, adelexp] = bmmo_adelexp_from_zip(zip_path, filter, bar_struct)\r","% function input_struct = bmmo_read_lcp_zip(zip_path, filter, bar_struct)\r","%\r","% Read a zip file created by an LCP/VCP BMMO-NXE job (recover to baseline or\r","% control to baseline), recreating the BMMO-NXE Matlab input structure\r","%\r","% Input: zip_path: full path of zip file\r","%\r","% Optional Input:\r","%   filter: flag to determine filtering type\r","%       0: recover to baseline\r","%       1: control to baseline\r","%       2: from LCP/VCP job report (default)\r","%\r","% Output:\r","%   input_struct: recreating Matlab input structure as generated by LCP/VCP\r","%   bar_struct: updated bar struct or []\r","%   sbc_out   : SBC corrections from recipe\r","%   job_report: LCP/VCP job report\r","%   invalids  : Invalidated data (may not be produced for VCP)\r","% 20170131 SBPR Updated to include progress bar\r","% 20200918 ANBZ Updated progress bar for showing end of parsing\r","\r","\r","if nargin < 2\r","%Using time filter from LCP job report\r","    filter = 2;\r","end\r","\r","if nargin < 3\r","    bar_struct = [];\r","end\r","\r","tmpdir = [tempname '_LCP_ZIP'];\r","mkdir(tmpdir);\r","cleanupTempDir = onCleanup(@()rmdir(tmpdir, 's'));\r","\r","input_struct = 0;\r","\r","try     \r","    bar_struct = bmmo_log_progress(['Unzipping ' zip_path], bar_struct);\r","    unzip7(zip_path, tmpdir);\r","    \r","    [input_struct, ~, ~, ~, bar_struct] = bmmo_read_lcp_output(tmpdir, tmpdir, filter, bar_struct);\r","    \r","    \r","     bar_struct = bmmo_log_progress(['Generating KA residual'], bar_struct);\r","     [mlp, options] = bmmo_process_input(input_struct);\r","     [~, ml_KA_act_NCE] = bmmo_KA_SBC_fingerprint(mlp, options.previous_correction.KA.grid_2de, options);\r","     \r","     bar_struct = bmmo_log_progress(['Building ADELexposureTrajectoriesReport'], bar_struct);\r","     adels      = bmmo_find_adels(tmpdir);\r","    \r","     adelexp = bmmoADELexpTrajectories();\r","     adelexp.setMl(ml_KA_act_NCE);\r","     adelexp.fixCETGrid();\r","     adelexp.updateFromAdeller(adels.adeller);\r","     \r","     adel_filename = ['ADELexposureTrajectoriesReport_' adelexp.xml_data.Header.DocumentId '.xml'];\r","     bar_struct = bmmo_log_progress(['Writing ' adel_filename], bar_struct);\r","     adelexp.write(adel_filename);\r","     \r","     bar_struct = bmmo_log_progress(['Completed.',newline], bar_struct);\r","\r","catch read_err\r","   disp(read_err);\r","   rethrow(read_err);\r","end"],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[25,27,30,31,34,35,36,38,40,41,42,44,47,48,49,51,52,54,55,56,57,59,60,61,63,65,66,67],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}