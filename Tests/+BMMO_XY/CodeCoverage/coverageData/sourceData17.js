var sourceData17 = {"FileContents":["function [ml_apply, ml_res] = bmmo_KA_LOC_fingerprint(ka_grid, ml_input, options)\r","% function ml_apply = bmmo_KA_fingerprint(ml_KA, ml_input, options)\r","%\r","% Given the modelled KA grid in testlog format, get the KA fingerprint\r","%\r","% Input:\r","%   ml_KA: KA grid in testlog format\r","%   ml_input: input ml structure\r","%   options: structure containing at least the following field:\r","%       fieldsize: 1 * 2 array with x and y fieldsize\r","%\r","% Output:\r","%   ml_apply: KA fingerprint\r","%\r","%  NOTE:\r","%  According to the BMMO-NXE EDS, ml_input.info.F does not contain 'field_shift_Cn'\r","%  which ovl_metro_add_chuck_info used to determine field shifts for chuck\r","%  n. In addition, callers of this function are not necessarily aware of the\r","%  chuck context. Therefore, per-chuck field shifts should be applied\r","%  outside this function if necessary.\r","%\r","% SBPR 2015-10-26 Refactored from ovl_metro_par_mc_apply\r","% JIMI 2020-04-23 Include bmmo_gxy_mc_apply_KA (worked by ANBZ)\r","% JIMI 2020-07-10 update with actuation/CET NCE\r","% SELR 2020-10-12 created from bmmo_KA_fingerprint\r","\r","% The tool ovl_create_dummy by default uses 3mm edge clearance, which is not what we want. But this script must \r","% also be able to model on TIS location, so we provide an 'infinite' value for 'edge'.\r","% (Comment copied from ovl_metro_par_mc_apply)\r","ml_zero = ovl_create_dummy(ml_input, 'edge', 1500);\r","ml_apply  = ml_zero;\r","\r","ml_KA = bmmo_KA_grid_to_ml(ka_grid);\r","ml_KA_expose_actuation = bmmo_apply_KA(ml_KA, ml_zero, 'exposure', options.fieldsize, 'none');\r","\r","% now apply to this wafer/layer\r","ml_apply.layer.wr.dx = ml_KA_expose_actuation.layer.wr.dx;\r","ml_apply.layer.wr.dy = ml_KA_expose_actuation.layer.wr.dy;\r","\r","if nargout > 1\r","    dx_out = ka_grid.interpolant_x(ml_zero.wd.xw, ml_zero.wd.yw);\r","    dy_out = ka_grid.interpolant_y(ml_zero.wd.xw, ml_zero.wd.yw);\r","    ml_out_F = ml_zero;\r","    ml_out_F.layer.wr.dx = dx_out;\r","    ml_out_F.layer.wr.dy = dy_out;\r","    ml_res = ovl_sub(ml_out_F, ml_apply);\r","end\r","\r",""],"CoverageData":{"CoveredLineNumbers":[30,31,33,34,37,38,40],"UnhitLineNumbers":[41,42,43,44,45,46],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2427,2427,0,2427,2427,0,0,2427,2427,0,2427,0,0,0,0,0,0,0,0,0]}}