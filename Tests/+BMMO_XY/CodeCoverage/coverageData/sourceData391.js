var sourceData391 = {"FileContents":["function kpi_struct = bmmo_parse_lcp_report(job_report)\r","% function kpi_struct = bmmo_parse_lcp_report(job_report)\r","%\r","% Given an LCP/VCP job report (optionally already loaded with xml_load), parse\r","% the contents into a BMMO-NXE kpi structure\r","%\r","% Input:\r","%   job_report: full path of OTAS/LIS (LCP/VCP) job report, or parsed job_report strcture\r","%       generated by xml_load\r","%\r","% Output:\r","%   kpi_struct: KPI structure as generated by bmmo_nxe_drift_control_model\r","%\r","% 20171030 SBPR Creation\r","% 20200918 ANBZ Updated for LIS job report\r","% 20201030 LUDU Updated to parse input, uncontrolled, inline SDM and 18parNCE kpis\r","% 20201119 OGIE Updated to parse 33parNCE kpis for LIS\r","\r","if ischar(job_report)\r","    job_report = xml_load(job_report);\r","end\r","\r","% Case: LIS Job report\r","if strcmp(job_report.Header.DocumentType, 'ADELbmmoOverlayJobReport')\r","    \r","    % Outlier and applied KPIs\r","    kpi_outlier = job_report.Results.KpisPerClassList(3).KpisPerClass.InputData;\r","    if isfield(job_report.Results.StatisticsPerClassList(3).StatisticsPerClass, 'AppliedCorrection')\r","        kpi_appl_nonchuck = job_report.Results.StatisticsPerClassList(3).StatisticsPerClass.AppliedCorrection;\r","    end\r","    \r","    % correction KPIs and Stats\r","    for i = 1:length(job_report.Results.KpisPerClassList)\r","        kpi_corr(i)   = job_report.Results.KpisPerClassList(i).KpisPerClass.CorrectionMagnitude;\r","        stats_corr(i) = job_report.Results.StatisticsPerClassList(i).StatisticsPerClass.CorrectionMagnitude;\r","    end\r","    % Residue and Controlled Input, KPI and Stats\r","    for i= 1:2\r","        kpi_res(i)        = job_report.Results.KpisPerClassList(i).KpisPerClass.CorrectionQuality;\r","        kpi_input(i)      = job_report.Results.KpisPerClassList(i).KpisPerClass.InputData;\r","        stats_input(i)    = job_report.Results.StatisticsPerClassList(i).StatisticsPerClass.InputData;\r","        if isfield(job_report.Results.StatisticsPerClassList(i).StatisticsPerClass, 'Uncontrolled')\r","            stats_unctrl(i) = job_report.Results.StatisticsPerClassList(i).StatisticsPerClass.Uncontrolled;\r","        end\r","        if isfield(job_report.Results.KpisPerClassList(i).KpisPerClass, 'Uncontrolled')\r","            kpi_unctrl(i) = job_report.Results.KpisPerClassList(i).KpisPerClass.Uncontrolled;\r","        else\r","            kpi_unctrl = [];\r","        end\r","        if isfield(job_report.Results.StatisticsPerClassList(i).StatisticsPerClass, 'AppliedCorrection')\r","            kpi_appl.InlineSdm(i) = job_report.Results.StatisticsPerClassList(i).StatisticsPerClass.AppliedCorrection.InlineSdm;\r","        else\r","            kpi_appl = [];\r","        end\r","        stats_res(i) = job_report.Results.StatisticsPerClassList(i).StatisticsPerClass.CorrectionQuality;\r","        if isfield(job_report.Results.StatisticsPerClassList(i).StatisticsPerClass, 'Intrafield18ParNce')\r","            stats_18parNCE(i) = job_report.Results.StatisticsPerClassList(i).StatisticsPerClass.Intrafield18ParNce;\r","        else\r","            stats_18parNCE = [];\r","        end\r","        if isfield(job_report.Results.StatisticsPerClassList(i).StatisticsPerClass, 'Intrafield33ParNce')\r","            stats_33parNCE(i) = job_report.Results.StatisticsPerClassList(i).StatisticsPerClass.Intrafield33ParNce;\r","        else\r","            stats_33parNCE = [];\r","        end\r","    end\r","    \r","    % VCP functions for parsing input, corrections and residue\r","    kpi_struct.input = bmmo_parse_kpi_rep_input_lis(kpi_input, kpi_outlier, stats_input);\r","    if ~isempty(kpi_unctrl)\r","        kpi_struct.uncontrolled = bmmo_parse_kpi_rep_uncontrolled_lis(kpi_unctrl, stats_unctrl);\r","    end\r","    if ~isempty(kpi_appl)\r","        kpi_struct.applied  = bmmo_parse_kpi_rep_applied_lis(kpi_appl.InlineSdm, kpi_appl_nonchuck);\r","    end\r","    kpi_struct.correction = bmmo_parse_kpi_corr_lis(kpi_corr, stats_corr);\r","    kpi_struct.residue = bmmo_parse_kpi_res_lis(kpi_res, stats_res);\r","    if ~isempty(stats_18parNCE)        \r","        kpi_struct.Intra_18par_NCE = bmmo_parse_kpi_ho_NCE_lis(stats_18parNCE);\r","    end\r","    if ~isempty(stats_33parNCE)        \r","        kpi_struct.Intra_33par_NCE = bmmo_parse_kpi_ho_NCE_lis(stats_33parNCE);\r","    end \r","    \r","% Case: OTAS Job report\r","else\r","    % OTAS functions for parsing input, corrections and residue\r","    kpi_struct.input               = bmmo_parse_kpi_rep_input(job_report.Results.KpiList.BaseLinerMmo.Overlay.InputData);\r","    kpi_struct.applied             = bmmo_parse_kpi_rep_inlinesdm(job_report.Results.KpiList.BaseLinerMmo.Overlay.InlineSdm);\r","    kpi_struct.uncontrolled        = bmmo_parse_kpi_rep_uncontrolled(job_report.Results.KpiList.BaseLinerMmo.Overlay.Uncontrolled);\r","    kpi_struct.correction          = bmmo_parse_kpi_corr(job_report.Results.KpiList.BaseLinerMmo.Overlay.CorrectionMagnitude);\r","    kpi_struct.residue             = bmmo_parse_kpi_res(job_report.Results.KpiList.BaseLinerMmo.Overlay.CorrectionQuality);\r","    if isfield(job_report.Results.KpiList.BaseLinerMmo.Overlay, 'IntraField18ParNce')\r","        kpi_struct.Intra_18par_NCE     = bmmo_parse_kpi_18parNCE(job_report.Results.KpiList.BaseLinerMmo.Overlay.IntraField18ParNce);\r","    end\r","end\r","\r","\r",""],"CoverageData":{"CoveredLineNumbers":[19,20,24,27,28,29,33,34,35,38,39,40,41,42,43,45,46,47,48,50,51,52,53,55,56,57,58,59,61,62,63,64,69,70,71,73,74,76,77,78,79,81,82,86,88,89,90,91,92,93,94],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,2,0,0,0,6,0,0,4,4,3,0,0,0,4,12,12,0,0,4,8,8,8,8,6,0,8,6,2,2,0,8,6,2,2,0,8,8,4,4,4,0,8,2,6,6,0,0,0,0,4,4,3,0,4,3,0,4,4,4,2,0,4,1,0,0,0,2,0,2,2,2,2,2,2,2,0,0,0,0,0]}}