var sourceData31 = {"FileContents":["function ml_in_bb = bmmo_add_bounding_box(mli, boundary)\r","% function ml_in_bb = bmmo_add_bounding_box(mli, boundary)\r","%\r","% Extend the input layout with a bounding box. \r","%\r","% Input:    \r","%   mli:                input layout\r","%   boundary:           position (in xw/yw coordinate system) at which to add bounding box\r","%                       NB it is the responsibility of the caller to ensure\r","%                           the bounding box is not inside or coincident\r","%                           with the layout\r","%\r","% Output:   \r","%   ml_in_bb:           layout with bounding box added to xw/yw and corresponding NaNs added to dx/dy\r","%                       NB the output values for marks in different\r","%                       coordinate systems will be inconsistent: use with\r","%                       care!\r","\r","ml_in_bb = mli;\r"," \r","% assume it is indeed a bounding box, not coinciding or within target layout\r","bbx = boundary(:, 1);\r","bby = boundary(:, 2);\r","    \r","ml_in_bb.wd.xw = [ml_in_bb.wd.xw; bbx];\r","ml_in_bb.wd.yw = [ml_in_bb.wd.yw; bby];\r","for it_layer = ml_in_bb.nlayer\r","    for it_wafer = 1:ml_in_bb.nwafer\r","        ml_in_bb.layer(it_layer).wr(it_wafer).dx = [ml_in_bb.layer(it_layer).wr(it_wafer).dx; ones(size(bbx))*NaN];\r","        ml_in_bb.layer(it_layer).wr(it_wafer).dy = [ml_in_bb.layer(it_layer).wr(it_wafer).dy; ones(size(bby))*NaN];\r","    end\r","end\r",""],"CoverageData":{"CoveredLineNumbers":[19,22,23,25,26,27,28,29,30],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2122,0,0,2122,2122,0,2122,2122,2122,2122,7457,7457,0,0,0]}}