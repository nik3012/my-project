var sourceData333 = {"FileContents":["classdef testBmmoShiftFields < BMMO_XY.tools.testSuite\r","    \r","    methods(Static)\r","        %% Sub function\r","        function ml = sub_simplezerostructure\r","            ml.wd.xc = zeros(1,10);         % Make a small ml structure.\r","            ml.wd.yc = ml.wd.xc;\r","            ml.wd.xf = ml.wd.xc;\r","            ml.wd.yf = ml.wd.xc;\r","            ml.wd.xw = ml.wd.xc;\r","            ml.wd.yw = ml.wd.xc;\r","        end\r","        \r","    end\r","    \r","    methods(Test)\r","        \r","        %% Test case 1\r","        function Case1(obj)\r","            \r","            ml = obj.sub_simplezerostructure;\r","            \r","            % When\r","            x_shift = [10 15; 20 30];       % Make a structure with distinct shifts per layer and coordinate\r","            y_shift = [-1 -3; -2 -6];            \r","            for il = 1:2\r","                mll(il) = bmmo_shift_fields(ml, x_shift, y_shift, il);\r","            end        \r","            \r","            % Then\r","            for il = 1:2\r","                obj.verifyTrue(all(mll(il).wd.xc == x_shift(il,1)));\r","                obj.verifyTrue(all(mll(il).wd.xf == x_shift(il,2)));\r","                obj.verifyTrue(all(mll(il).wd.yc == y_shift(il,1)));\r","                obj.verifyTrue(all(mll(il).wd.yf == y_shift(il,2)));\r","            end\r","        end\r","        \r","        %% Test case 2\r","        function Case2(obj)\r","            % Given\r","            ml = obj.sub_simplezerostructure;\r","            \r","            % When\r","            x_shift_simple = 40;            % Make a simple shift structure (one layer, no xf shifts\r","            y_shift_simple = 45;            \r","            mlo = bmmo_shift_fields(ml, x_shift_simple, y_shift_simple);   \r","            \r","            % Then\r","            obj.verifyTrue(all(mlo.wd.xc == x_shift_simple));\r","            obj.verifyTrue(all(mlo.wd.yc == y_shift_simple));\r","            obj.verifyTrue(all(mlo.wd.xf == 0));\r","            obj.verifyTrue(all(mlo.wd.yf == 0));\r","        end\r","        \r","        %% Test case 3\r","        function Case3(obj)\r","            % Given\r","            ml = obj.sub_simplezerostructure;     \r","            \r","            % When\r","            x_shift_l1 = [50 55];           % Make a shift structure with one layer and xf/yf shifts\r","            y_shift_l1 = [60 65];            \r","            mlo = bmmo_shift_fields(ml, x_shift_l1, y_shift_l1); \r","            \r","            % Then\r","            obj.verifyTrue(all(mlo.wd.xc == x_shift_l1(1)));\r","            obj.verifyTrue(all(mlo.wd.yc == y_shift_l1(1)));\r","            obj.verifyTrue(all(mlo.wd.xf == x_shift_l1(2)));\r","            obj.verifyTrue(all(mlo.wd.yf == y_shift_l1(2)));         \r","        end\r","        \r","        %% Test case 4\r","        function Case4(obj)\r","            % Given\r","            ml = obj.sub_simplezerostructure; \r","            \r","            % When\r","            x_shift_2l = [70; 75];          % Make a shift structure with 2 layers and no xf/yf shifts\r","            y_shift_2l = [80; 85];            \r","            for il = 1:2\r","                mll(il) = bmmo_shift_fields(ml, x_shift_2l, y_shift_2l, il);\r","            end         \r","            \r","            % Then\r","            for il = 1:2\r","                obj.verifyTrue(all(mll(il).wd.xc == x_shift_2l(il,1)));\r","                obj.verifyTrue(all(mll(il).wd.xf == 0));\r","                obj.verifyTrue(all(mll(il).wd.yc == y_shift_2l(il,1)));\r","                obj.verifyTrue(all(mll(il).wd.yf == 0));\r","            end\r","        end\r","        \r","    end\r","    \r","end"],"CoverageData":{"CoveredLineNumbers":[6,7,8,9,10,11,21,24,25,26,27,31,32,33,34,35,42,45,46,47,50,51,52,53,59,62,63,64,67,68,69,70,76,79,80,81,82,86,87,88,89,90],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,2,0,0,0,1,2,2,2,2,0,0,0,0,0,0,1,0,0,1,1,1,0,0,1,1,1,1,0,0,0,0,0,1,0,0,1,1,1,0,0,1,1,1,1,0,0,0,0,0,1,0,0,1,1,1,2,0,0,0,1,2,2,2,2,0,0,0,0,0,0]}}