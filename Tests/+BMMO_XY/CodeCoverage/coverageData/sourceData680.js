var sourceData680 = {"FileContents":["%% history:\r","%   2015-10-27  SBPR  creation\r","%   2019-01-02  SELR  fix case2\r","\r","function test_suite = test_bmmo_map_layouts\r","suite = initTestSuite2016(localfunctions);\r","if nargout==0\r","    suite.run();\r","else\r","    test_suite = suite;\r","end\r","\r","\r","% Case 1: very  simple layouts: check data mapping directly\r","function test_bmmo_map_layouts_case_1\r","\r","% map layout mli:\r","% xw|-4  0  4\r","% yw|---------\r","%  4| 1  2  3\r","%  0| 4  5  6\r","% -4| 7  8  9\r","%\r","% ...to layout mlt:\r","% xw| -4   -2   0   2   4\r","% yw|---------------------\r","%  4| 1   NaN  2  NaN  3\r","%  2| NaN NaN NaN NaN NaN\r","%  0| 4   NaN  5  NaN  6\r","% -2| NaN NaN NaN NaN NaN\r","% -4| 7   NaN  8  NaN  9\r","xw = [-4, 0, 4];\r","yw = xw;\r","[xwg, ywg] = meshgrid(xw, yw);\r","mli.wd.xw = xwg(:);\r","mli.wd.yw = ywg(:);\r","mli.layer.wr.dx = [1 4 7 2 5 8 3 6 9];\r","mli.layer.wr.dy = mli.layer.wr.dx;\r","mli.nlayer = 1;\r","mli.nwafer = 1;\r","mli.nfield = 1;\r","mli.nmark = 9;\r","xw = [-4, -2, 0, 2, 4];\r","yw = xw;\r","[xwg, ywg] = meshgrid(xw, yw);\r","mlt.wd.xw = xwg(:);\r","mlt.wd.yw = ywg(:);\r","mlt.nwafer = 1;\r","mlt.nlayer = 1;\r","mlt.nfield = 1;\r","mlt.nmark = 25;\r","out = mlt;\r","out.layer.wr.dx = [1 NaN 4 NaN 7 NaN NaN NaN NaN NaN 2 NaN 5 NaN 8 NaN NaN NaN NaN NaN  3 NaN 6 NaN 9];\r","out.layer.wr.dy = out.layer.wr.dx;\r","mlo = bmmo_map_layouts(mli, mlt, 12);\r","bmmo_assert_equal(mlo, out);\r","\r","\r","% Test Case 2: one-mark-many-fields to 13x19; TODO add test condition\r","function test_bmmo_map_layouts_case_2\r","\r","mli = bmmo_default_input;\r","options = bmmo_default_options_structure;\r","options.x_shift = [0, -260e-6; 0, -260e-6];\r","options.y_shift = [0, -40e-6; 0, -40e-6];\r","options = bmmo_ml_options(mli, options);\r","tolerance_exponent = 12; % tolerance for layout mark equality is 10^-12 m\r","\r","% build target layouts per layer\r","mlo = bmmo_construct_layout_from_ml(mli, options);\r","\r","for ilayer = 1:length(mlo)\r","    % shift fields to measurement position\r","    mlo(ilayer) = bmmo_shift_fields(mlo(ilayer), options.x_shift, options.y_shift, ilayer);\r","\r","    % map input layout to shifted exposure layout, with fields in exposure\r","    % sort order\r","    mlo(ilayer) = bmmo_map_layouts(mli, mlo(ilayer), tolerance_exponent);\r","\r","    % shift mapped fields to exposure position\r","    mlo(ilayer) = bmmo_shift_fields(mlo(ilayer), -options.x_shift, -options.y_shift);\r","end\r","\r","% combine the layers\r","mlo = bmmo_combine_fields(mlo(1), mlo(2), 1:mlo(2).nfield);\r","\r","assert(mlo.nfield == 167);\r","% Make sure that every field has non-NaN values\r","for iw = 1:mlo.nwafer\r","    mlw = ovl_get_wafers(mlo, iw);\r","    for ifield = 1:89\r","        ml_f = ovl_get_fields(mlw, ifield); \r","        assert(any(~isnan(ml_f.layer.wr.dx) & ~isnan(ml_f.layer.wr.dy)));  \r","    end\r","end\r","\r","\r","% Test Case 3: 89-field 13x19 layout to itself: should be unchanged\r","function test_bmmo_map_layouts_case_3\r","\r","load([bmmo_testdata_root filesep 'TC08_01_out.mat']);\r","out.info.report_data = [];\r","out.info.previous_correction = [];\r","mlo = bmmo_map_layouts(out, out, 12);\r","bmmo_assert_equal(mlo, out);\r","\r","\r","% Test Case 4: target and input with layout marks in reverse order; \r","% real data from m5786 BMMO \r","function test_bmmo_map_layouts_case_4\r","\r","load([bmmo_testdata_root filesep 'map_layout_reversed_input.mat']);\r","load([bmmo_testdata_root filesep 'map_layout_reversed_output.mat']);\r","result = bmmo_map_layouts(mli, mlo, tolerance_exponent);\r","bmmo_assert_equal(mlr.wd, result.wd);\r","bmmo_assert_equal(mlr.layer, result.layer);"],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[6,7,8,9,10,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,62,63,64,65,66,67,70,72,74,78,81,85,87,89,90,91,92,93,101,102,103,104,105,112,113,114,115,116],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}