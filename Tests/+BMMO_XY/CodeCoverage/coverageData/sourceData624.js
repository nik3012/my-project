var sourceData624 = {"FileContents":["function test_suite = test_bmmo_KA_fingerprint\r","suite = initTestSuite2016(localfunctions);\r","if nargout==0\r","    suite.run();\r","else\r","    test_suite = suite;\r","end\r","\r","\r","% 2. Test that ml input only provides the layout\r","function test_bmmo_KA_fingerprint_case2\r","\r","% generate a single-layer, single-wafer zeroed structure mli1\r","% with no chuck info\r","mli1 = ovl_create_dummy('marklayout', 'BA-XY-DYNA-13X19', 'nlayer', 1);\r","\r","% generate a single-layer, single-wafer structure mli2 with the same layout,\r","% but filled distortion values\r","mli2 = ovl_create_dummy('marklayout', 'BA-XY-DYNA-13X19', 'nlayer', 1);\r","mli2.layer.wr.dx = mli2.layer.wr.dx + 1e7;\r","mli2.layer.wr.dy = mli2.layer.wr.dx;\r","\r","options = bmmo_default_options_structure;\r","\r","% generate a parmc with only 2de information, convert to tlg\r","parmc = ovl_metro_par_mc('KA_pitch',options.KA_pitch);\r","\r","% add some simple distortion\r","parmc.KA.raw.grid_2de(1).dx = parmc.KA.raw.grid_2de(1).dx + 1e-7;\r","parmc.KA.raw.grid_2de(1).dy = parmc.KA.raw.grid_2de(1).dy + 1e-7;\r","\r","ka_grid = bmmo_KA_corr_to_grid(parmc.KA.raw.grid_2de(1));\r","% verify that parmc produces the same KA fingerprint with mli1 and mli2\r","KA_fp1 = bmmo_KA_LOC_fingerprint(ka_grid, mli1, options);\r","KA_fp2 = bmmo_KA_LOC_fingerprint(ka_grid, mli2, options);\r","\r","bmmo_assert_equal(KA_fp1, KA_fp2);\r","\r","\r","function test_bmmo_KA_fp_case3 \r","\r","load([bmmo_testdata_root filesep 'KA_fingerprint.mat']);\r","\r","options = bmmo_default_options_structure;\r"," \r","ka_grid = bmmo_KA_corr_to_grid(Calib_KA);\r","ka_fp = bmmo_KA_LOC_fingerprint(ka_grid, ml, options);\r","test_out_ml_ka_res = ovl_sub(ml, ka_fp);\r","\r","ovl = ovl_calc_overlay( ovl_sub(test_out_ml_ka_res,out_ml_ka_res));\r","\r","bmmo_assert_equal( 1e9*ovl.ox100, 0 ,  0.05);\r","bmmo_assert_equal( 1e9*ovl.ox997, 0 ,  0.05);\r","bmmo_assert_equal( 1e9*ovl.oxm3s, 0 ,  0.05);\r","bmmo_assert_equal( 1e9*ovl.ox3sd, 0 ,  0.05);\r","bmmo_assert_equal( 1e9*ovl.oy100, 0 ,  0.05);\r","bmmo_assert_equal( 1e9*ovl.oy997, 0 ,  0.05);\r","bmmo_assert_equal( 1e9*ovl.oym3s, 0 ,  0.05);\r","bmmo_assert_equal( 1e9*ovl.oy3sd, 0 ,  0.05);\r","\r","bmmo_assert_equal(out_ml_ka_res.layer, test_out_ml_ka_res.layer);\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[2,3,4,5,6,15,19,20,21,23,26,29,30,32,34,35,37,42,44,46,47,48,50,52,53,54,55,56,57,58,59,61],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}