var sourceData471 = {"FileContents":["function [fp_struct, ff_6p, fp_struct_smf] = bmmo_apply_SBC_inline_SDM(ml_template, corr, factor, skip_sdm)\r","% function [fp_struct, ff_6p, fp_struct_smf] = bmmo_apply_SBC_inline_SDM(ml_template, corr, factor, skip_sdm)\r","%\r","% Generate a list of SBC correction ml structures from a valid bmmo \r","% input_struct and an SBC correction. Intrafield is modeled by simulating \r","% inline SDM. Access to the projection toolbox is needed to perform this\r","% simulation.\r","%\r","% Input: \r","%   ml_template: a valid input structure for the BMMO-NXE drift control\r","%       model\r","%   corr: a valid correction set from the BMMO-NXE drift control model,\r","%       e.g. the output of bmmo_nxe_drift_control_model (out.corr) or\r","%       bmmo_kt_process_SBC2\r","%   factor: A constant factor to apply to the fingerprints (default = 1)\r","%   skip_sdm: Skips modeling using InlineSDM model if set to 1.(default = 0).\r","%             In case skip_sdm = 1, corr.ffp is directly resampled and \r","%             distributed to ml_template to calculate the intrafield\r","%             fingerprint.\r","%\r","% Output:\r","%   fp_struct: structure containing the following (all ml structures, same layout as ml_template)\r","%       WH: wafer heating fingerprint\r","%       MI:  Mirror fingerprint \r","%       KA: KA fingerprint \r","%       BAO:  BAO fingerprint \r","%       INTRAF: INTRAF fingerprint\r","%       TotalSBCcorrection: sum of the other fingerprints\r","%   ff_6p: 6par feedforward BAO fingerprint from MI@M & KA@M corrections\r","%   ffp_struct_smf: fp_struct with the smf format from ml_template\r","%\r","% 20191014 SELR creation from bmmo_apply_SBC\r","% 20200616 ANBZ Updated for KA@M ff 6par Fingerprint\r","% 20200710 JIMI Update intrafield actuation(skip_sdm=0) with cet model type\r","\r","if nargin < 3\r","    factor = 1;\r","end\r","\r","if nargin < 4\r","    skip_sdm = 0;\r","end\r","\r","[mlp, options] = bmmo_process_input(ml_template); % options will contain the WH input fingerprint\r","if ~skip_sdm\r","    options.intraf_actuation.fnhandle = @bmmo_INTRAF_inline_SDM_fingerprint; \r","else\r","    options.intraf_actuation.fnhandle = @bmmo_INTRAF_resampled_fingerprint;\r","end\r","[fp_struct, ff_6p] = bmmo_apply_SBC_core(mlp, corr, factor, options);\r","\r","fn = fieldnames(fp_struct);\r","for ifield = 1:length(fn)\r","    fp_struct_smf.(fn{ifield}) = bmmo_map_to_smf(fp_struct.(fn{ifield}), ml_template);\r","end\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[36,37,40,41,44,45,46,47,48,50,52,53,54],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}