var sourceData441 = {"FileContents":["function mlo = bmmo_generate_ADELmetrology(wafers_in, wafers_out, adeller, name, machineId, with_noise)\r","% function adel_out = bmmo_generate_ADELmetrology(wafers_in, wafers_out, adeller)\r","%\r","% Generate a valid ADELmetrology for BMMO-NXE given KT_wafers_in/out and a\r","% valid ADELler\r","%\r","% Input (all strings)\r","%       wafers_in: KT_wafers_in file path from a BMMO lot\r","%       wafers_out: KT_wafers_out file path from the same lot\r","%       adeller: ADELler path from the same lot\r","%       name: unique name identifier of output file\r","%\r","%\r","% 20160331 SBPR creation; modified from tlg2ADELmetrology\r","\r","% Set default Machine ID if none input\r","if nargin < 5\r","    machineId = '1001';\r","end\r","\r","if nargin < 6\r","    with_noise = 0;\r","end\r","\r","% seed the random number generator\r","rng(sum(clock));\r","\r","% Matching tolerance for mark positions\r","TOL = 9;\r","\r","% read adeller to get expinfo (containing only xc, yc field centres)\r","disp('reading ADELler');\r","expinfo = bmmo_expinfo_from_adeller(adeller);\r","\r","% generate the measurement ml structure(s) from wafers_out, generating a\r","% template structure from expinfo\r","disp('reading KT_wafers_out');\r","mlo = bmmo_get_meas_data(wafers_out, expinfo);\r","\r","if with_noise\r","    disp('adding DCO budget noise per wafer');\r","    mlo = bmmo_add_noise(mlo);\r","end\r","\r","% Generate the swid ml structure(s) from wafers_in\r","disp('reading KT_wafers_in');\r","[ml_wid_up, ml_wid_down] = bmmo_get_swid_data(wafers_in);\r","\r","\r","    \r","% Remove edge for measurement layout & downsample\r","disp('removing edge and downsampling');\r","mlo = bmmo_get_meas_layout(mlo);\r","mlo = bmmo_generate_2l_dyna25_input(mlo);\r","\r","% % Remove all non-weccable marks from mlo\r","% disp('verifying WEC marks');\r","% mlo = bmmo_filter_wec(mlo, TOL);\r","% \r","% disp('verifying REC marks');\r","% mlo = bmmo_filter_rec_positions(mlo, TOL);\r","\r","% if mlo.nfield is greater than 89, split into two (second element will\r","% have LS_OV_RINT_NOWEC targets\r","if mlo.nfield > 89\r","    l1_fields = [1:87 125 136];\r","    l2_fields = [88:124 126:135 137:174]; \r","    \r","    mltemp(1) = ovl_get_fields(mlo, l1_fields);\r","    mltemp(2) = ovl_get_fields(mlo, l2_fields);\r","    mlo = mltemp;\r","end\r","    \r","% write the ADELmetrology file\r","disp('writing ADELmetrology');\r","bmmo_write_adelmetrology(ml_wid_up, ml_wid_down, mlo, name, machineId);\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[17,18,21,22,26,29,32,33,37,38,40,41,42,46,47,52,53,54,65,66,67,69,70,71,75,76],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}