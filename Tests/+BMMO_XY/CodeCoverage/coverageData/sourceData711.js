var sourceData711 = {"FileContents":["%% history \r","%   2015-07-03  JIMI    creation\r","%   2016-09-30  SBPR    Changed test data to reflect new actuation\r","%                       simulation model\r","%   2020-07-06  SELR    Updated reference data for KA actuation bugfix\r","\r","function test_suite = test_bmmo_undo_sbc_correction\r","suite = initTestSuite2016(localfunctions);\r","if nargout==0\r","    suite.run();\r","else\r","    test_suite = suite;\r","end\r","\r","\r","function test_TC16_01  % ok<DEFNU>\r","\r","load([bmmo_testdata_root filesep 'undo_sbc_correction.mat']);\r","\r","mli = ml;\r","\r","delta_R=0.2;    % assume 20% drift in WH Ratio\r","[options, model_results] = sub_configure(mli, options, delta_R);\r","\r","\r","t_mlo = bmmo_undo_sbc_correction(mli, options);\r","\r","bmmo_assert_equal(t_mlo.layer, mlo.layer, 5e-11);\r","% for i = 1:options.chuck_usage.nr_chuck_used\r","% %     mlo_wh(i) = ovl_combine_linear(mlo_wh(i), -1);\r","% %     mlo_intra(i) = ovl_combine_linear(mlo_intra(i), -1);\r","% \r","%     t_mlo_wh(i).layer.wr.dx(isnan(mlo_wh(i).layer.wr.dx)) = NaN;\r","%     t_mlo_wh(i).layer.wr.dy(isnan(mlo_wh(i).layer.wr.dy)) = NaN;\r","%     bmmo_assert_equal(t_mlo_wh(i).layer, mlo_wh(i).layer);\r","%     bmmo_assert_equal(t_mlo_intra(i).layer, mlo_intra(i).layer);\r","% end\r","\r","function test_TC16_02  % ok<DEFNU>\r","\r","load([bmmo_testdata_root filesep 'undo_sbc_correction.mat']);\r","\r","mli = ml;\r","mli.info.F.chuck_operation='USE_BOTH_CHUCK';\r","mli.info.F.chuck_id{1}='CHUCK_ID_2';\r","mli.info.F.chuck_id{2}='CHUCK_ID_1';\r","mli.info.F.chuck_id{3}='CHUCK_ID_2';\r","mli.info.F.chuck_id{4}='CHUCK_ID_1';\r","mli.info.F.chuck_id{5}='CHUCK_ID_2';\r","mli.info.F.chuck_id{6}='CHUCK_ID_1';\r","for i=1:2:mli.nwafer\r","    mli.info.report_data.WH_K_factors.wafer(i) = ml.info.report_data.WH_K_factors.wafer(i+1);\r","    mli.info.report_data.WH_K_factors.wafer(i+1) = ml.info.report_data.WH_K_factors.wafer(i);\r","end\r","\r","delta_R=0.2;    % assume 20% drift in WH Ratio\r","[options, model_results] = sub_configure(mli, options, delta_R);\r","\r","\r","t_mlo = bmmo_undo_sbc_correction(mli, options);\r","\r","mloo = mlo;\r","for i=1:2:mli.nwafer\r","    mloo.layer.wr(i) = mlo.layer.wr(i+1);\r","    mloo.layer.wr(i+1) = mlo.layer.wr(i);\r","end\r","\r","bmmo_assert_equal(t_mlo.layer, mloo.layer, 5e-11);\r","\r","\r","function test_TC16_03  % ok<DEFNU>\r","\r","load([bmmo_testdata_root filesep 'undo_sbc_correction.mat']);\r","\r","mli = ovl_get_wafers(ml, [1 3 5]);\r","mli.info.F.chuck_operation='USE_SINGLE_CHUCK';\r","mli.info.F = rmfield(mli.info.F, 'chuck_id');\r","mli.info.F.chuck_id{1}='CHUCK_ID_1';\r","mli.info.F.chuck_id{2}='CHUCK_ID_1';\r","mli.info.F.chuck_id{3}='CHUCK_ID_1';\r","mli.info.report_data.WH_K_factors = rmfield(mli.info.report_data.WH_K_factors, 'wafer');\r","for i=1:mli.nwafer\r","    mli.info.report_data.WH_K_factors.wafer(i) = ml.info.report_data.WH_K_factors.wafer(1);\r","end\r","\r","delta_R=0.2;    % assume 20% drift in WH Ratio\r","[options, model_results] = sub_configure(mli, options, delta_R);\r","\r","t_mlo = bmmo_undo_sbc_correction(mli, options);\r","\r","\r","\r","mloo = ovl_get_wafers(mlo, [1 3 5]);\r","mloo_wh(1) = mlo_wh(1);\r","mloo_wh(2) = ovl_combine_linear(mlo_wh(2),0);\r","mloo_intra(1) = mlo_intra(1);\r","mloo_intra(2) = ovl_combine_linear(mlo_intra(2), 0 );\r","\r","bmmo_assert_equal(t_mlo.layer.wr, mloo.layer.wr);\r","\r","\r","function test_TC16_04  % ok<DEFNU>\r","\r","load([bmmo_testdata_root filesep 'undo_sbc_correction.mat']);\r","\r","mli = ovl_get_wafers(ml, [2 4 6]);\r","mli.info.F.chuck_operation='USE_SINGLE_CHUCK';\r","mli.info.F = rmfield(mli.info.F, 'chuck_id');\r","mli.info.F.chuck_id{1}='CHUCK_ID_2';\r","mli.info.F.chuck_id{2}='CHUCK_ID_2';\r","mli.info.F.chuck_id{3}='CHUCK_ID_2';\r","mli.info.report_data.WH_K_factors = rmfield(mli.info.report_data.WH_K_factors, 'wafer');\r","for i=1:mli.nwafer\r","    mli.info.report_data.WH_K_factors.wafer(i) = ml.info.report_data.WH_K_factors.wafer(2);\r","end\r","\r","delta_R=0.2;    % assume 20% drift in WH Ratio\r","[options, model_results] = sub_configure(mli, options, delta_R);\r","\r","\r","t_mlo = bmmo_undo_sbc_correction(mli, options);\r","\r","\r","mloo = ovl_get_wafers(mlo, [2 4 6]);\r","mloo_wh(1) = ovl_combine_linear(mlo_wh(1),0);\r","mloo_wh(2) = mlo_wh(2);\r","mloo_intra(1) = ovl_combine_linear(mlo_intra(2), 0 );\r","mloo_intra(2) = mlo_intra(2);\r","\r","bmmo_assert_equal(t_mlo.layer.wr, mloo.layer.wr, 5e-11);\r","\r","%% End of test functions, sub-functions below\r","\r","\r","function [options_out, model_results] = sub_configure(mli, options_in, delta_R)\r","\r","options_out = options_in;\r","\r","% add new required fields to options\r","options_out.mark_type = 'udbo';\r","options_out.x_shift = [0 0 ; 0 0];\r","options_out.y_shift = [0 0; 0 0];\r","options_out.layer_fields{1} = 1:87;\r","options_out.layer_fields{2} = 88;\r","options_out.fieldsize = [0.0260    0.0330];\r","options_out.combined_model_contents = {};\r","options_out.submodel_sequence = {'WH', 'SUSD', 'MI', 'KA', 'BAO', 'INTRAF'};\r","tmp_options = bmmo_default_options_structure;\r","options_out.filter = tmp_options.filter;\r","mli = bmmo_phase_2_input(mli);\r","options_out = bmmo_phase_2_options(options_out);\r","options_out.bl3_model = 0;\r","options_out.susd_control = 0;\r","options_out.KA_control = 0;\r","options_out.invert_MI_wsm_sign = 0;\r","options_out.KA_orders = tmp_options.KA_orders;\r","options_out.model_shift = tmp_options.model_shift;\r","options_out = bmmo_ml_options(mli, options_out);\r","options_out.WH.use_input_fp                  = 0;\r","options_out.WH.fp                            = [];\r","options_out.WH.use_raw                       = 0;\r","options_out.WH_K_factors = bmmo_k_factors_to_xml(options_out.WH_K_factors, mli.nwafer, mli.nfield);\r","tmp_sensitivity = options_out.IR2EUVsensitivity;\r","options_out = bmmo_wh_options(mli, options_out);\r","options_out.IR2EUVsensitivity = tmp_sensitivity;\r","options_out.IFO_scan_direction = [-1 1 -1 1];\r","options_out.KA_actuation = tmp_options.KA_actuation;\r","options_out.platform = tmp_options.platform;\r","options_out.FIWA_mark_locations = tmp_options.FIWA_mark_locations;\r","options_out.KA_resample_options = tmp_options.KA_resample_options;\r","options_out.KA_meas_start = tmp_options.KA_meas_start;\r","\r","% convert BAO previous correction to new format\r","for ic = 1:2\r","    newBAO(ic) = bmmo_10par_to_BAO(options_out.previous_correction.BAO(ic));\r","end\r","options_out.previous_correction = rmfield(options_out.previous_correction, 'BAO');\r","options_out.previous_correction.BAO = newBAO;\r","\r","options_out.previous_correction = bmmo_get_18p_intraf(options_out.previous_correction);\r","\r","model_results.WH.lambda = delta_R / options_out.IR2EUVsensitivity;\r","model_results.WH.Calib_WH = delta_R;\r","\r","% add SUSD to previous correction\r","temp_out = bmmo_default_output_structure(options_out);\r","options_out.previous_correction.SUSD = temp_out.corr.SUSD;"],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[8,9,10,11,12,18,20,22,23,26,28,41,43,44,45,46,47,48,49,50,51,52,53,56,57,60,62,63,64,65,68,73,75,76,77,78,79,80,81,82,83,86,87,89,93,94,95,96,97,99,104,106,107,108,109,110,111,112,113,114,117,118,121,124,125,126,127,128,130,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,174,175,177,178,180,182,183,186,187],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}