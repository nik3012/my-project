var sourceData118 = {"FileContents":["function filter_out = bmmo_get_dynamic_filter_coefficients(filter_in, delta_t, wafers_per_chuck, T1, T2, platform)\r","% function filter_out = bmmo_get_dynamic_filter_coefficients(filter_in, delta_t, wafers_per_chuck, T1, T2, platform)\r","%\r","% Calculate dynamic time filter coefficients based on wafers per chuck and\r","% time since last bmmo lot\r","%\r","% Input :\r","%   filter_in: structure containing filter coefficient values for WH, SUSD, MI,\r","%              KA, BAO, INTRAF (each field is a 1x1 double value)\r","%   delta_t:   time interval since previous BMMO-NXE lot (vector of double\r","%              values)\r","%   wafers_per_chuck: maximum number of wafers per chuck\r","%   T1:        time threshold to begin dynamic filter \r","%   T2:        time threshold to set filter to 1\r","%   platform:  'LIS' or 'OTAS'\r","%\r","% Output: \r","% filter_out: structure containing adaptive time filter coefficient values\r","%             for WH, SUSD, MI, KA, BAO, INTRAF (each field is a 1x1 double value)\r","%\r","%  See D000323756 for a description of the algorithm in OTAS\r","%  See D000810611 for LIS\r","\r","filter_max = 1;\r","\r","tt = T2 - T1;\r","\r","if strcmp(platform,'LIS')\r","    wafer_scaling_factor = sqrt(2 / wafers_per_chuck);\r","else\r","    wafer_scaling_factor = sqrt(3 / wafers_per_chuck);\r","end\r","\r","fn = fieldnames(filter_in);\r","\r","for ii = 1:length(fn)\r","    base = filter_in.(fn{ii}) / wafer_scaling_factor;\r","    filter_out.(fn{ii})(1:numel(delta_t)) = base;   \r","    mid_indices = delta_t > T1 & delta_t < T2;  \r","    filter_out.(fn{ii})(mid_indices) = ((filter_max - base) * (delta_t(mid_indices) - T2))/tt + filter_max;   \r","    filter_out.(fn{ii})(delta_t >= T2) = filter_max;\r","    filter_out.(fn{ii})(filter_out.(fn{ii}) > filter_max) = filter_max;\r","end\r","\r","\r",""],"CoverageData":{"CoveredLineNumbers":[24,26,28,29,30,31,34,36,37,38,39,40,41,42],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,40,0,40,3,37,37,0,0,40,0,40,240,240,240,240,240,240,0,0,0,0]}}