var sourceData117 = {"FileContents":["function C = bmmo_get_design_matrix(wd, options, varargin)\r","% function C = bmmo_get_design_matrix(wd, options, varargin)\r","%\r","% This function returns a design matrix based on the input\r","%\r","% Input:\r","%  wd: wafer mark coordinate structure\r","%        options: options containing parlist\r","%\r","% Optional Input:\r","%  varargin: a variable number of options and parameter names, \r","%            including the following\r","%           'xonly': construct only x matrix (default is to construct both)\r","%           'yonly': construct only y matrix\r","%           '10par': construct 10par matrix \r","%           '6par': construct 6par matrix\r","%           '18par': construct 18par matrix\r","%           '20par': construct 20par matrix (default)\r","%           '33par': construct 33par matrix\r","%           '35par': construct 35par matrix\r","%           'tx', 'ty' etc: parameter names\r","% Output:\r","%  C: Design matrix\r","%\r","% NB Make sure to call this function with valid parameter lists!\r","% NO checking is done on parameter order, duplication or validity\r","\r","% create parlist if not created already\r","if ~isfield(options, 'parlist')\r","    options.parlist = bmmo_parlist;\r","end\r","    \r","% parse the input arguments\r","local_options = sub_parse_varargs(wd, options, varargin);\r","    \r","numpars = length(local_options.parlist);\r","C = zeros(local_options.ovl_len, numpars);\r","\r","xend = 0;\r","if(local_options.do_x)\r","    xstart = 1;\r","    xend = length(wd.xc);\r","end\r","if(local_options.do_y)\r","    ystart = xend + 1;\r","    yend = local_options.ovl_len;\r","end\r","\r","for ipar = 1:numpars\r","   if(local_options.do_x)\r","       C(xstart:xend, ipar) = feval(local_options.parlist{ipar}.dxfun, wd, local_options.parlist{ipar}.args);\r","   end\r","   if(local_options.do_y)\r","       C(ystart:yend, ipar) = feval(local_options.parlist{ipar}.dyfun, wd, local_options.parlist{ipar}.args);\r","   end\r","end\r","\r","\r","function local_options = sub_parse_varargs(wd, options, varlist)\r","\r","% first, some global defaults\r","local_options.do_x = 1;\r","local_options.do_y = 1;\r","local_options.parlist = {};\r","local_options.ovl_len = length(wd.xc) + length(wd.yc);\r","\r","% flatten the cell array\r","varlist = bmmo_flatten_cell(varlist);\r","\r","nvarargs = length(varlist);\r","if nvarargs == 0\r","    % set some defaults for no input arguments\r","    % default is full 10par\r","    local_options.numargs = 10;\r","    local_options.parlist = sub_10parlist(options);\r","else\r","    for ivar = 1:nvarargs\r","        % parse the arguments\r","        % NB We don't check for duplicates!\r","        switch(lower(varlist{ivar}))\r","            case 'xonly'\r","                local_options.do_y = 0;\r","                local_options.do_x = 1; % in case someone sets 'yonly' too\r","                local_options.ovl_len = length(wd.xc);\r","            case 'yonly'\r","                local_options.do_y = 1;\r","                local_options.do_x = 0;\r","                local_options.ovl_len = length(wd.yc);\r","            case '10par'\r","                local_options.parlist = sub_10parlist(options);\r","            case '6par'\r","                local_options.parlist = sub_6parlist(options);\r","            case '18par'\r","                local_options.parlist = sub_18parlist(options);\r","            case '20par'\r","                local_options.parlist = sub_20parlist(options);\r","            case '33par'\r","                local_options.parlist = sub_33parlist(options);\r","            case '35par'\r","                local_options.parlist = sub_35parlist(options);\r","            otherwise\r","                local_options.parlist = horzcat(local_options.parlist,  {options.parlist.(lower(varlist{ivar}))});\r","        end\r","    end\r","    local_options.numargs = length(local_options.parlist);\r","end\r","\r","\r","function tenparlist = sub_10parlist(options)\r","\r","tenparlist = {options.parlist.tx, options.parlist.ty, options.parlist.rs, options.parlist.ra, options.parlist.ms, ...\r","    options.parlist.ma, options.parlist.rws, options.parlist.rwa, options.parlist.mws, options.parlist.mwa};\r","\r","function sixparlist = sub_6parlist(options)\r","\r","sixparlist = {options.parlist.tx, options.parlist.ty, options.parlist.rws, ...\r","    options.parlist.rwa, options.parlist.mws, options.parlist.mwa};\r","\r","%'18par'                 = 'tx,ty,mx,my,rx,ry,d2,k8,k9,k10,bowxf,bowyf,mag3y,accx,accy,cshpx,cshpy,flw3x'\r","\r","function eighteenparlist = sub_18parlist(options)\r","\r","eighteenparlist = {options.parlist.tx, options.parlist.ty, options.parlist.mx, options.parlist.my, ...\r","    options.parlist.rx, options.parlist.ry, options.parlist.d2, options.parlist.k8, options.parlist.k9, ...\r","    options.parlist.k10, options.parlist.bowxf, options.parlist.bowyf, options.parlist.mag3y, ...\r","    options.parlist.accx, options.parlist.accy, options.parlist.cshpx, options.parlist.cshpy, ...\r","    options.parlist.flw3x};\r","\r","function twentyparlist = sub_20parlist(options);\r","\r","twentyparlist = horzcat(sub_18parlist(options), {options.parlist.d3}, {options.parlist.flw3y});\r","\r","%'33par' = 'k1,k2,k3,k4,k5,k6,k7,k8,k9,k10,k11,k12,k13,k14,k15,k16,k17,k18,k19,k20,k22,k24,k25,k26,k27,k29,k32,k34,k36,k37,k39,k41,k46,k48,k51'\r","%        = 18par + 'k22,k24,k25,k26,k27,k29,k32,k34,k36,k37,k39,k41,k46,k48,k51'\r","function thirtythreeparlist = sub_33parlist(options)\r","\r","thirtythreeparlist = {options.parlist.tx, options.parlist.ty, options.parlist.mx, options.parlist.my, ...\r","    options.parlist.rx, options.parlist.ry, options.parlist.d2, options.parlist.k8, options.parlist.k9, ...\r","    options.parlist.k10, options.parlist.bowxf, options.parlist.bowyf, options.parlist.mag3y, ...\r","    options.parlist.accx, options.parlist.accy, options.parlist.cshpx, options.parlist.cshpy, ...\r","    options.parlist.flw3x, options.parlist.k22, options.parlist.k24, options.parlist.k25, ...\r","    options.parlist.k26, options.parlist.k27, options.parlist.k29, options.parlist.k32, ...\r","    options.parlist.k34, options.parlist.k36, options.parlist.k37, options.parlist.k39, ...\r","    options.parlist.k41, options.parlist.k46, options.parlist.k48, options.parlist.k51 };\r","\r","function thirtyfiveparlist = sub_35parlist(options);\r","\r","thirtyfiveparlist = horzcat(sub_33parlist(options), {options.parlist.d3}, {options.parlist.flw3y});\r",""],"CoverageData":{"CoveredLineNumbers":[29,30,34,36,37,39,40,41,42,44,45,46,49,50,51,53,54,62,63,64,65,68,70,71,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,101,102,105,111,112,116,117,123,124,125,126,127,131],"UnhitLineNumbers":[98,100,137,138,139,140,141,142,143,144,148],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5384,47,0,0,0,5384,0,5384,5384,0,5384,5384,5378,5378,0,5384,5378,5378,0,0,5384,56144,56108,0,56144,56108,0,0,0,0,0,0,0,5384,5384,5384,5384,0,0,5384,0,5384,5384,0,0,1,1,5383,5383,0,0,35379,35379,6,6,6,35373,6,6,6,35367,905,34462,2,34460,477,33983,237,33746,0,33746,0,33746,33746,0,0,5383,0,0,0,0,0,906,906,0,0,0,2,2,0,0,0,0,0,714,714,714,714,714,0,0,0,237,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}