var sourceData371 = {"FileContents":["function kpi_ho = bmmo_parse_kpi_bao_rep(kpi_ho, kpi_rep_bao)\r","%\r","% function kpi_ho = bmmo_parse_kpi_bao_rep(kpi_ho, kpi_rep_bao)\r","%\r","%Given the BAO parameters from the OTAS job report, parse the\r","%contents into a BMMO-NXE kpi structure\r","% Input:\r","%   kpi_rep_bao:  BAO parameters from job report  \r","%   kpi_ho     :  KPI structure to copy the output\r","%\r","% Output:\r","%   kpi_ho      :  BAO parameters KPI structure structure as generated by\r","%   BMMO model\r","\r","% mapping table from kpi rep \r","%Changelog\r","% 20171030 SBPR Creation\r","\r","\r","kpi_rep_pars1 = {'Translation', 'Scaling'}; % pars with dim components\r","kpi_rep_pars2 = {...\r","    'SymmetricMagnification',...\r","    'SymmetricIntraFieldRotation',...\r","    'AsymmetricMagnification',...\r","    'AsymmetricIntraFieldRotation',...\r","    'Rotation',...\r","    'NonOrthogonality'};\r","\r","\r","kpi_rep_dim =  {'X','Y'};\r","kpi_rep_chk =   {'Chuck1','Chuck2'};\r","\r","\r","kpi_pars1 = {'translation', 'wafer_exp'};\r","kpi_pars2 = {'sym_intra_mag', ...\r","    'sym_intra_rot',  ...\r","    'asym_intra_mag', ...\r","    'asym_intra_rot', ...\r","    'wafer_rot', ...\r","    'wafer_non_ortho'};\r","\r","kpi_dim_map = {'x', 'y'};\r","kpi_chk     = {'chk1','chk2'};\r","\r","%for conversion to meter from nm (translation) and ppm (wafer expansion)\r","Units1 = [ 1e-9; 1e-6];\r","% for conversion to meter from ppm and urad\r","Units2 = [1e-6; 1e-6; 1e-6; 1e-6; 1e-6; 1e-6];\r","\r","\r","\r","for ichk =  1:2\r","    for idim = 1:2\r","        % pars with dim\r","        for ipar = 1:2\r","            fname = ['ovl_' kpi_pars1{ipar} '_' kpi_dim_map{idim} '_' kpi_chk{ichk} '_delta'];\r","            val = kpi_rep_bao.(kpi_rep_pars1{ipar}).(kpi_rep_dim{idim}).(kpi_rep_chk{ichk});\r","            kpi_ho.(fname) = str2double(val) *  Units1(ipar);\r","        end\r","    end\r","    \r","    for ipar = 1:6\r","        fname = ['ovl_' kpi_pars2{ipar} '_'  kpi_chk{ichk} '_delta'];\r","        val = kpi_rep_bao.(kpi_rep_pars2{ipar}).(kpi_rep_chk{ichk});\r","        kpi_ho.(fname) = str2double(val) *  Units2(ipar);\r","    end\r","end"],"CoverageData":{"CoveredLineNumbers":[20,21,30,31,34,35,42,43,46,48,52,53,55,56,57,58,62,63,64,65],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,8,8,0,0,8,8,0,0,0,0,0,0,8,8,0,0,8,0,8,0,0,0,8,16,0,32,64,64,64,0,0,0,16,96,96,96,0,0]}}