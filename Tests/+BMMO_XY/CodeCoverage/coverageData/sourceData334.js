var sourceData334 = {"FileContents":["classdef testBmmoSubModelBao < BMMO_XY.tools.testSuite\r","    \r","    methods(Test)\r","        \r","        %% 1. Basic regression test        \r","        function Case1(obj)\r","            % Given\r","            load([bmmo_testdata_root filesep 'sub_model_input_basic.mat']);\r","            load([bmmo_testdata_root filesep 'sub_model_bao_output_basic.mat']);            \r","            mlz = ovl_create_dummy(mli);\r","            [unused, par1] = ovl_model(mlz);\r","            model_results.BAO.before_MI = [par1 par1];\r","            model_results.BAO.before_KA = [par1 par1];\r","            model_results.BAO = rmfield(model_results.BAO, 'correction');\r","            for chuck_id = 1:2\r","                model_results.BAO.correction(chuck_id)         = struct('tx',0,'ty',0,'rs',0,'ra',0,'ms',0,'ma',0,'rws',0,'rwa',0,'mws',0,'mwa',0);\r","            end            \r","            model_results.interfield_residual = bmmo_average_chuck(mli, options);\r","            options.reduced_reticle_layout = '13x19';\r","            new_options = bmmo_default_options_structure;\r","            options.model_shift = new_options.model_shift;\r","            \r","            % When\r","            test_results = bmmo_sub_model_BAO(model_results, options);    \r","            \r","            % Then\r","            obj.verifyWithinTol(test_results.BAO.correction, results_bao.BAO.correction);\r","        end\r","        \r","    end\r","    \r","end"],"CoverageData":{"CoveredLineNumbers":[8,9,10,11,12,13,14,15,16,18,19,20,21,24,27],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,2,0,1,1,1,1,0,0,1,0,0,1,0,0,0,0,0]}}