var sourceData735 = {"FileContents":["function [fps, sbc] = bmmo_convergence_run(input_struct, num_iter, noise_level, runs_to_compare)\r","% function [fps, sbc] = bmmo_convergence_run(input_struct, num_iter, noise_level, runs_to_compare)\r","%\r","% Simulates a run of consecutively applied BMMO-NXE modelling steps for\r","% convergence testing purposes\r","%\r","% Input:\r","%   input_struct: valid BMMO-NXE input structure, input to run 1\r","%\r","% Optional Input: \r","%   num_iter: number of iterations (default 20)\r","%   noise_level: if > 0, apply this 3sigma level of DCO noise (in nm) each run\r","%   runs_to_compare: iterations available in the output (default num_iter) \r","%\r","% Output:\r","%   fps: 1 * length(runs_to_compare) of correction fingerprint structures (as\r","%       defined in the output of bmmo_apply_SBC)\r","%   sbc: 1 * length(runs_to_compare) of sbc correction structures (as output by\r","%       bmmo_nxe_drift_control_model\r","%\r","    \r","if nargin < 2\r","    num_iter = 20;\r","end\r","if nargin < 3\r","    noise_level = 0;\r","end\r","if nargin < 4\r","    runs_to_compare = 1:num_iter;\r","end\r","\r","input_struct.configurable_options.do_outlier_removal = 0;\r","    \r","[mlp1, options] = bmmo_process_input(input_struct);\r","\r","if noise_level > 0\r","    mlp1 = sub_add_noise(mlp1, noise_level);\r","end\r","        \r","mlp = mlp1;\r","\r","for ii = 1:num_iter\r","    \r","    if (ii > 1) && (noise_level > 0) \r","        mlp = sub_add_noise(mlp, noise_level);\r","    end\r","    \r","    model_results = bmmo_run_submodels(mlp, options);\r","    out = bmmo_process_output(input_struct, model_results, options); % input_struct only used for KPI\r","\r","    current_sbc = out.corr;\r","    current_fps = bmmo_apply_SBC(input_struct, current_sbc);% input_struct only used as template\r","    \r","    mlp = ovl_add(mlp1, current_fps.TotalSBCcorrection); \r","    \r","    options.previous_correction = out.corr;\r","\r","    save_run = (ii == runs_to_compare);\r","    if any(save_run)\r","       fps(save_run) = current_fps;\r","       sbc(save_run) = current_sbc;\r","    end\r","    \r","end\r","\r","function mlo = sub_add_noise(mli, noise_level)\r","\r","mln = DCO_budget_noise(ovl_get_wafers(mli, 1), 'nwafer', mli.nwafer, 'noise3s', noise_level);\r","ml_noise = mln.total;\r","mlo = ovl_add(mli, ml_noise);\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[22,23,25,26,28,29,32,34,36,37,40,42,44,45,48,49,51,52,54,56,58,59,60,61,68,69,70],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}