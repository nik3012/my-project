var sourceData177 = {"FileContents":["function ml_out  =  bmmo_sort_ml(ml_in, ml_target)\r","% function ml_out  =  bmmo_sort_ml(ml_in, ml_target)\r","%\r","% Sort a given ml structure based on a template ml structure \r","%\r","% Input\r","%  ml_in: ml structure to be sorted\r","%  ml_target: template to get sorting order\r","%       \r","% Output:\r","%  ml_out: sorted ml structure\r","\r","\r","ml_out = ml_in;\r","\r","% find indices\r","ind1 = knnsearch([ml_in.wd.xf ml_in.wd.yf], [ml_target.wd.xf, ml_target.wd.yf]); \r","ind2 = knnsearch([ml_in.wd.xc ml_in.wd.yc], [ml_target.wd.xc, ml_target.wd.yc]); \r","ind3 = knnsearch([ml_in.wd.xw ml_in.wd.yw], [ml_target.wd.xw, ml_target.wd.yw]); \r","\r","% sort ml_in coordinates (wd) as ml_target\r","ml_out.wd.xf = ml_in.wd.xf(ind1);\r","ml_out.wd.yf = ml_in.wd.yf(ind1);\r","ml_out.wd.xc = ml_in.wd.xc(ind2);\r","ml_out.wd.yc = ml_in.wd.yc(ind2);\r","ml_out.wd.xw = ml_in.wd.xw(ind3);\r","ml_out.wd.yw = ml_in.wd.yw(ind3);\r","\r","% sort overlay (dx,dy) same as ml_target\r","for iw = 1:ml_in.nwafer\r","    ml_out.layer.wr(iw).dx =  ml_in.layer.wr(iw).dx(ind3);\r","    ml_out.layer.wr(iw).dy =  ml_in.layer.wr(iw).dy(ind3);\r","end\r","     "],"CoverageData":{"CoveredLineNumbers":[14,17,18,19,22,23,24,25,26,27,30,31,32],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,16,16,16,0,0,16,16,16,16,16,16,0,0,16,64,64,0,0]}}