var sourceData723 = {"FileContents":["function mlo = bl3_generate_KA(template_mli, options)\r","% function mlo = bmmo_generate_KA(template_mli, options)\r","%\r","% Given an ml input and a MI map in parmc format,\r","% generate a mirror fingerprint\r","%\r","% Input: MI_map: mirror map\r","%        mli: input ml structure\r","%        options: Default options structure\r","%\r","% Output: mlo: single-layer, single-wafer mirror fingerprint ml structure\r","%\r","% 20200520 SELR Creation, refactored from bmmo_simulate_random_input\r","\r","% Poly part\r","mlo_poly = bmmo_generate_KA(template_mli, options);\r","\r","% Gaussian edge part\r","mlo_edge = template_mli;\r","fps_edge = bmmo_construct_FPS_GaussianEDGE(ovl_get_wafers(mlo_edge, 1), options);\r","for i = 1:length(fps_edge)\r","    M(:, i) = sub_make_columns(fps_edge{i});\r","end\r","C_EdgeBase = M;\r","edge_rand{1}=rand(1,size(C_EdgeBase,2));\r","edge_rand{2}=rand(1,size(C_EdgeBase,2));\r","for ichuck = 1:2\r","    wafers_this_chuck = find(options.chuck_usage.chuck_id == ichuck);\r","    val = C_EdgeBase*edge_rand{ichuck}';\r","    for iwafer = wafers_this_chuck\r","        mlo_edge.layer.wr(iwafer).dx = val(1:length(val)/2);\r","        mlo_edge.layer.wr(iwafer).dy = val(length(val)/2+1:length(val));\r","    end\r","end\r","\r","mlo_edge = ovl_combine_linear(mlo_edge, 1, template_mli, 0);\r","mlo_edge = ovl_model(mlo_edge, 'perwafer');\r","mlo = ovl_combine_linear(scale2one(mlo_poly), 0.5, scale2one(mlo_edge), 0.5);\r","\r","\r","function o = sub_make_columns(mli)\r","\r","o = [mli.layer.wr.dx ; mli.layer.wr.dy];\r","\r","\r","function mlo = scale2one(mli)\r","\r","mlo=mli;\r","for iw=1:mli.nwafer\r","    mlo.layer.wr(iw).dx = mli.layer.wr(iw).dx *(1/max(abs(mli.layer.wr(iw).dx)))*1e-9;\r","    mlo.layer.wr(iw).dy = mli.layer.wr(iw).dy *(1/max(abs(mli.layer.wr(iw).dy)))*1e-9;\r","end\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[16,19,20,21,22,24,25,26,27,28,29,30,31,32,36,37,38,43,48,49,50,51],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}