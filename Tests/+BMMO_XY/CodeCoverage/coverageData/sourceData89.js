var sourceData89 = {"FileContents":["function mlo = bmmo_ffp_to_ml_simple(ffp, ml_tmp, options)\r","% function mlo = bmmo_fpp_to_ml_simple(ffp, ml_tmp, options)\r","%\r","% Convert ffp (Field fingerprint from SBC2 correction structure) to ml\r","% structure. By default, a single-field 13x19 ml structure, 1 wafer per chuck, is\r","% created. Optionally, a template ml_tmp structure can be provided. The the ffp\r","% data will be mapped to the field layout of ml_tmp, and the chuck corrections\r","% will be mapped to the wafers assuming starting chuck 1.\r","%\r","% NPA the intrafield mark positions will be shifted to XPA field centre.\r","%\r","% Input:\r","%   ffp: 1x2 field fingerprint structure from SBC2 correction\r","% \r","% Optional input:\r","%   ml_tmp: template ml structure (default: single-layer, 2-wafer 13x19\r","%       structure)\r","%   options: bmmo-nxe options structure, used to determine chuck order if\r","%       present\r","%\r","%  Output:\r","%   mlo: ffp mapped to ml structure\r","\r","if nargin < 2\r","    % create a dummy ml_tmp\r","    ml_tmp.nwafer = 2;\r","    ml_tmp.wd.xc = zeros(size(ffp(1).x));\r","    ml_tmp.wd.yc = ml_tmp.wd.xc;\r","    ml_tmp.nfield = 1;\r","    ml_tmp.nlayer = 1;\r","    ml_tmp.nmark = length(ml_tmp.wd.xc);\r","    ml_tmp.tlgname = '';\r","end\r","    \r","if nargin < 3\r","   options.chuck_usage.chuck_id = ones(1, ml_tmp.nwafer);\r","   options.chuck_usage.chuck_id(2:2:end) = 2;\r","   options.model_shift.x = [0 0; 0 0];\r","   options.model_shift.y = [0 0; 0 0];\r","end\r","\r","mlo = ml_tmp;\r","\r","% ffp might be shifted relative to XPA centre.\r","% however, since the field positions are symmetrical about (0,0), we\r","% can determine the (x,y) shifts from the mean\r","rd = 7; % calculate up to RINT shift values\r","x_shift = round(mean(ffp(1).x), rd);\r","y_shift = round(mean(ffp(1).y), rd);\r","\r","mlo.wd.xf = repmat(ffp(1).x - x_shift, mlo.nfield, 1);\r","mlo.wd.yf = repmat(ffp(1).y - y_shift, mlo.nfield, 1);\r","mlo.wd.xw = mlo.wd.xf + mlo.wd.xc;\r","mlo.wd.yw = mlo.wd.yf + mlo.wd.yc;\r","\r","nl = mlo.nlayer;\r","\r","for iw = 1:mlo.nwafer\r","    mlo.layer(nl).wr(iw).dx = repmat(ffp(options.chuck_usage.chuck_id(iw)).dx, mlo.nfield, 1);\r","    mlo.layer(nl).wr(iw).dy = repmat(ffp(options.chuck_usage.chuck_id(iw)).dy, mlo.nfield, 1);\r","end\r","\r","mlo = bmmo_shift_fields(mlo, options.model_shift.x, options.model_shift.y);\r",""],"CoverageData":{"CoveredLineNumbers":[24,26,27,28,29,30,31,32,35,36,37,38,39,42,47,48,49,51,52,53,54,56,58,59,60,63],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,893,0,766,766,766,766,766,766,766,0,0,893,767,767,767,767,0,0,893,0,0,0,0,893,893,893,0,893,893,893,893,0,893,0,893,2190,2190,0,0,893,0]}}