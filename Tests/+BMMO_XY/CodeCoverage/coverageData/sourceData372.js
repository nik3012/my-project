var sourceData372 = {"FileContents":["function kpi_ho = bmmo_parse_kpi_bao_rep_lis(kpi_ho, kpi_rep_bao1, kpi_rep_bao2)\r","%\r","% function kpi_ho = bmmo_parse_kpi_bao_rep_lis(kpi_ho, kpi_rep_bao1, kpi_rep_bao2)\r","%\r","%Given the BAO parameters from the LIS job report, parse the\r","%contents into a BMMO-NXE kpi structure\r","% Input:\r","%   kpi_rep_bao1:  BAO parameters Chuck 1 from the job report\r","%   kpi_rep_bao2:  BAO parameters Chuck 2 from the job report\r","%   kpi_ho      :  KPI structure to copy the output\r","%\r","% Output:\r","%   kpi_ho      :  BAO parameters KPI structure structure as generated by\r","%   BMMO model\r","\r","% mapping table from kpi rep \r","kpi_rep_pars1 = {'Translation', 'Scaling'}; % pars with dim components\r","\r","kpi_rep_pars2 = {... \r","          'SymmetricMagnification',...\r","     'SymmetricIntrafieldRotation',...\r","         'AsymmetricMagnification',...\r","    'AsymmetricIntrafieldRotation',...\r","                        'Rotation',...\r","                'NonOrthogonality'};\r","                \r","kpi_rep_dim =  {'X','Y'};\r","           \r","\r","kpi_pars1 = {'translation', 'wafer_exp'};\r","kpi_pars2 = {'sym_intra_mag', ...\r","     'sym_intra_rot',  ...\r","    'asym_intra_mag', ...\r","    'asym_intra_rot', ...\r","    'wafer_rot', ...\r","    'wafer_non_ortho'};\r","     \r","\r","kpi_dim_map = {'x', 'y'};           \r","                \r","kpi_chk =       {'chk1', 'chk2'};\r","            \r","%for conversion to meter from nm (translation) and ppm (wafer expansion)\r","Units1 = [ 1e-9; 1e-6];\r","% for conversion to meter from ppm and urad\r","Units2 = [1e-6; 1e-6; 1e-6; 1e-6; 1e-6; 1e-6];\r","\r","            \r","for ichk =  1\r","    for idim = 1:2\r","        % pars with dim\r","        for ipar = 1:2\r","            fname = ['ovl_' kpi_pars1{ipar} '_' kpi_dim_map{idim} '_' kpi_chk{ichk} '_delta'];\r","            val = kpi_rep_bao1.(kpi_rep_pars1{ipar}).(kpi_rep_dim{idim});\r","            kpi_ho.(fname) = str2double(val) * Units1(ipar);\r","        end\r","    end\r","    \r","    for ipar = 1:6\r","            fname = ['ovl_' kpi_pars2{ipar} '_'  kpi_chk{ichk} '_delta'];\r","            val = kpi_rep_bao1.(kpi_rep_pars2{ipar});\r","            kpi_ho.(fname) = str2double(val) * Units2(ipar);\r","    end\r","end\r","\r","\r","\r","for ichk =  2\r","    for idim = 1:2\r","        % pars with dim\r","        for ipar = 1:2\r","            fname = ['ovl_' kpi_pars1{ipar} '_' kpi_dim_map{idim} '_' kpi_chk{ichk} '_delta'];\r","            val = kpi_rep_bao2.(kpi_rep_pars1{ipar}).(kpi_rep_dim{idim});\r","            kpi_ho.(fname) = str2double(val) * Units1(ipar);\r","        end\r","    end\r","    \r","    for ipar = 1:6\r","            fname = ['ovl_' kpi_pars2{ipar} '_'  kpi_chk{ichk} '_delta'];\r","            val = kpi_rep_bao2.(kpi_rep_pars2{ipar});\r","            kpi_ho.(fname) = str2double(val) * Units2(ipar);\r","    end\r","end"],"CoverageData":{"CoveredLineNumbers":[17,19,27,30,31,39,41,44,46,49,50,52,53,54,55,59,60,61,62,68,69,71,72,73,74,78,79,80,81],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,16,0,0,0,0,0,0,0,16,0,0,16,16,0,0,0,0,0,0,0,16,0,16,0,0,16,0,16,0,0,16,16,0,32,64,64,64,0,0,0,16,96,96,96,0,0,0,0,0,16,16,0,32,64,64,64,0,0,0,16,96,96,96,0,0]}}