var sourceData465 = {"FileContents":["function [mlo, ml_intra] = bmmo_INTRAF_resampled_fingerprint(ml_tmp, ffp, options)\r","% function [mlo, ml_intra] = bmmo_INTRAF_resampled_fingerprint(mli, fingerprint, options)\r","%\r","% This function returns an ml structure corresponding to the input SBC\r","% INTRAF fingerprint. It will resample the ffp input onto ml_tmp.\r","%\r","% Input:\r","% ml_tmp: template ml structure\r","% ffp: INTRAF fingerprint (1x2 struct array)\r","% options: bmmo/bl3 options structure\r","% \r","% Output:\r","% mlo: output ml structure containing the INTRAF fingerprint in the same layout as mli\r","% ml_intra: INTRAF fingerprint in same layout as mli, averaged per chuck\r","    \r","if nargin < 3\r","   options.chuck_usage.chuck_id = ones(1, ml_tmp.nwafer);\r","   options.chuck_usage.chuck_id(2:2:end) = 2;\r","   options.chuck_usage.chuck_id_used = 1:2;\r","end\r","\r","mlo = ml_tmp;\r","if isfield(mlo.wd, 'xf')\r","    ml_intra = bmmo_ffp_to_ml_simple(ffp);\r","    ml_intra_tmp = ovl_average_fields(ml_tmp);\r","    ml_intra_resampled = bmmo_correct_intrafield_shift(ml_intra, options, ml_intra_tmp);\r","    mlt = ovl_get_wafers(mlo, []);\r","    for iw = 1:mlo.nwafer\r","        ml_temp = ovl_distribute_field(ovl_get_wafers(ml_intra_resampled, options.chuck_usage.chuck_id(iw)), ovl_get_wafers(mlo, iw));\r","        mlt = ovl_combine_wafers(mlt, ml_temp);\r","    end\r","end\r","\r","nl = mlo.nlayer;\r","\r","for iw = 1:mlo.nwafer\r","    mlo.layer(nl).wr(iw).dx = mlt.layer.wr(options.chuck_usage.chuck_id(iw)).dx;\r","    mlo.layer(nl).wr(iw).dy = mlt.layer.wr(options.chuck_usage.chuck_id(iw)).dy;\r","end\r","\r","ml_intra = bmmo_average_chuck(ovl_average_fields(mlo), options);\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[16,17,18,19,22,23,24,25,26,27,28,29,30,34,36,37,38,41],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}