var sourceData114 = {"FileContents":["function cm = bmmo_get_cm_options(options)\r","% function cm = bmmo_get_cm_options(options)\r","%\r","% Construct combined model options for bmmo-nxe drift control model\r","%\r","% Input\r","%   options: structure defined in bmmo_default_options_structure\r","%\r","% Output\r","%   cm: structure with one subfield for each element of\r","%       options.combined_model_contents\r","%       (possible field names: MIX, MIY, INTRAF, INTERF, KA, SUSD)\r","%       each field containing the following subfields\r","%           fnhandle: function handle for generating fingerprints for this\r","%               combined model element\r","%           length: number of fingerprints for this combined model element\r","%           fpindex: index of fingerprint in combined model array\r","\r","cm = struct;\r","MAX_CHUCK = 2;\r","\r","fpindex = MAX_CHUCK; % last index of WH in FPS\r","fn = fieldnames(options.combined_model_contents);\r","for icms = 1:length(fn)\r","    offset = fpindex;\r","    cm.(fn{icms}) = struct;\r","    for icom = 1:length(options.combined_model_contents.(fn{icms}))\r","        com = options.combined_model_contents.(fn{icms}){icom};\r","        switch(com)\r","            case 'MIX'\r","                cm.(fn{icms}).MIX.fnhandle = @bmmo_construct_FPS_MIX;\r","                cm.(fn{icms}).MIX.length = options.xty_spline_params.nr_segments + 1;\r","            case 'MIY'\r","                cm.(fn{icms}).MIY.fnhandle = @bmmo_construct_FPS_MIY;\r","                cm.(fn{icms}).MIY.length = options.ytx_spline_params.nr_segments + 1;\r","            case 'INTERF'\r","                cm.(fn{icms}).INTERF.fnhandle = @bmmo_construct_FPS_INTERF;\r","                cm.(fn{icms}).INTERF.length = length(options.INTERF.name);\r","            case 'INTERFMAG'\r","                cm.(fn{icms}).INTERFMAG.fnhandle = @bmmo_construct_FPS_INTERFMAG;\r","                cm.(fn{icms}).INTERFMAG.length = length(options.INTERFMAG.name);\r","            case 'INTRAF'\r","                cm.(fn{icms}).INTRAF.fnhandle = @bmmo_construct_FPS_INTRAF;\r","                cm.(fn{icms}).INTRAF.length = length(options.INTRAF.name);\r","            case 'KA_POLY'\r","                cm.(fn{icms}).KA_POLY.fnhandle = @bmmo_construct_FPS_KA;\r","                cm.(fn{icms}).KA_POLY.length = (sum(options.KA_orders) ) * 2;\r","            case 'KA_POLY_NONLINEAR'\r","                cm.(fn{icms}).KA_POLY_NONLINEAR.fnhandle = @bmmo_construct_FPS_KA_nonlinear;\r","                ka_orders = options.KA_orders;\r","                ka_orders(ka_orders == 1) = [];\r","                cm.(fn{icms}).KA_POLY_NONLINEAR.length = (sum(ka_orders) ) * 2;\r","            case 'KA_EDGE'\r","                cm.(fn{icms}).KA_EDGE.fnhandle = @bmmo_construct_FPS_GaussianEDGE;\r","                cm.(fn{icms}).KA_EDGE.length = length(options.GaussianEdge_nodes);\r","            case 'SUSD'\r","                cm.(fn{icms}).SUSD.fnhandle = @bmmo_construct_FPS_SUSD;\r","                cm.(fn{icms}).SUSD.length = 1;\r","            case 'BAO'\r","                cm.(fn{icms}).BAO.fnhandle = @bmmo_construct_FPS_BAO;\r","                cm.(fn{icms}).BAO.length = 10;\r","            case 'WH'\r","                cm.(fn{icms}).WH.fnhandle = @bmmo_construct_FPS_WH;\r","                cm.(fn{icms}).WH.length = 2;\r","            otherwise\r","                error('Combined model value %s unknown', com);\r","        end\r","        cm.(fn{icms}).(com).fpindex = offset + 1;\r","        offset = offset + cm.(fn{icms}).(com).length;\r","    end\r","end\r",""],"CoverageData":{"CoveredLineNumbers":[19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,64,65,66,68,69],"UnhitLineNumbers":[60,61],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,209,209,0,209,209,209,1087,1087,1087,4024,4024,4024,778,778,3246,778,778,2468,405,405,2063,9,9,2054,414,414,1640,169,169,1471,405,405,405,405,1066,27,27,1039,549,549,490,0,0,490,489,489,1,1,0,4023,4023,0,0,0]}}