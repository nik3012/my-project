var sourceData88 = {"FileContents":["function mlo = bmmo_ffp_to_ml_resampled(ffp, ml_tmp, options)\r","% function mlo = bmmo_ffp_to_ml_resampled(ffp, ml_tmp, options)\r","%\r","% Convert ffp (Field fingerprint from SBC2 correction structure) to ml\r","% structure and also interpolates it from XPA to RINT layout. \r","% By default, a single-field 13x19 ml structure, 1 wafer per chuck, is\r","% created. Optionally, a template ml_tmp structure can be provided. The resampled ffp\r","% data will be distributed to the wafer layout given in ml_tmp. The chuck corrections\r","% will be mapped to the wafers assuming starting chuck 1 by default if \r","% options structure is not provided.\r","%\r","% Input:\r","%   ffp: 1x2 field fingerprint structure from SBC2 correction\r","% \r","% Optional input:\r","%   ml_tmp: template ml structure (default: single-layer, 2-wafer 13x19\r","%       structure)\r","%  options: BMMO/BL3 default options structure \r","%\r","%  Output:\r","%   mlo: ffp mapped to ml_tmp structure\r","\r","if nargin < 2\r","    % create a dummy ml_tmp\r","    ml_tmp.nwafer = 2;\r","    ml_tmp.wd.xc = zeros(size(ffp(1).x));\r","    ml_tmp.wd.yc = ml_tmp.wd.xc;\r","    ml_tmp.nfield = 1;\r","    ml_tmp.nlayer = 1;\r","    ml_tmp.nmark = length(ml_tmp.wd.xc);\r","    ml_tmp.tlgname = '';\r","end\r","    \r","if nargin < 3\r","   options.chuck_usage.chuck_id = ones(1, ml_tmp.nwafer);\r","   options.chuck_usage.chuck_id(2:2:end) = 2;\r","   options.chuck_usage.chuck_id_used = 1:2;\r","end\r","\r","mlo = ml_tmp;\r","if isfield(mlo.wd, 'xf')\r","    ml_intra = bmmo_ffp_to_ml_simple(ffp);\r","    ml_intra_resampled = bmmo_correct_intrafield_shift(ml_intra, options);\r","    mlt = ovl_get_wafers(mlo, []);\r","    for iw = 1:mlo.nwafer\r","        ml_temp = ovl_distribute_field(ovl_get_wafers(ml_intra_resampled, options.chuck_usage.chuck_id(iw)), ovl_get_wafers(mlo, iw));\r","        mlt = ovl_combine_wafers(mlt, ml_temp);\r","    end\r","end\r","\r","nl = mlo.nlayer;\r","\r","for iw = 1:mlo.nwafer\r","    mlo.layer(nl).wr(iw).dx = mlt.layer.wr(options.chuck_usage.chuck_id(iw)).dx;\r","    mlo.layer(nl).wr(iw).dy = mlt.layer.wr(options.chuck_usage.chuck_id(iw)).dy;\r","end\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[23,25,26,27,28,29,30,31,34,35,36,37,40,41,42,43,44,45,46,47,51,53,54,55],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}