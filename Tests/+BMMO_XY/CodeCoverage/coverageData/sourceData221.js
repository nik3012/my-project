var sourceData221 = {"FileContents":["function values = extractKAOvlKpis(inStruct, location, type, uncontrolled)\r","% values = extractKAOvlKpis(inStruct, location, type, uncontrolled)\r","%\r","% Function that extracts the uncontrolled or controlled clamp overlay kpis for chuck 1 and chuck 2 from the simulation results\r","% (rerun/self-correction) for x and y.\r","%\r","% Input Arguments:\r","% - inStruct        [ array of structs ]        Structs containing the\r","%                                                 simulation results from the \r","%                                                 rerun or self-correction\r","%                                                 tooling, including the kpis\r","% - location        [ char array ]              'radial_inward', 'inner',\r","%                                                 'outer', 'radial' \r","% - type            [ char array ]              'mean', 'median', 'x', 'y'\r","% \r","% Optional Arguments:\r","% - uncontrolled    [ double ]                  Controlled (0) or uncontrolled\r","%                                                 ('uncontrolled' or 1)\r","%                                                 kpis. Default: controlled\r","% Output Arguments:\r","% - values          [ array of structs ]        Structs containing the\r","%                                                 extracted kpis\r","%\r","\r","\r","import BMMO_XY.populationTooling.tools.*\r","\r","if exist('uncontrolled', 'var') && uncontrolled\r","    uncontrolled = true;\r","else\r","    uncontrolled = false;\r","end\r","\r","if uncontrolled\r","    values.chk1.(type) = extractArrayFromStruct(inStruct, ['kpis.uncontrolled.input_clamp.ovl_' location '_chk1_' type]);\r","    values.chk2.(type) = extractArrayFromStruct(inStruct, ['kpis.uncontrolled.input_clamp.ovl_' location '_chk2_' type]);\r","elseif string(location) == \"radial\"\r","    values.chk1.(type) = extractArrayFromStruct(inStruct, ['kpis.input.input_clamp.ovl_radial_chk1_' type]);\r","    values.chk2.(type) = extractArrayFromStruct(inStruct, ['kpis.input.input_clamp.ovl_radial_chk2_' type]);\r","else\r","    values.chk1.x = extractArrayFromStruct(inStruct, ['kpis.input.input_clamp.ovl_' location '_chk1_' type '_x']);\r","    values.chk1.y = extractArrayFromStruct(inStruct, ['kpis.input.input_clamp.ovl_' location '_chk1_' type '_y']);\r","    values.chk2.x = extractArrayFromStruct(inStruct, ['kpis.input.input_clamp.ovl_' location '_chk2_' type '_x']);\r","    values.chk2.y = extractArrayFromStruct(inStruct, ['kpis.input.input_clamp.ovl_' location '_chk2_' type '_y']);\r","end\r","\r","end"],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[28,29,30,31,34,35,36,37,38,39,40,41,42,43,44],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}