var sourceData436 = {"FileContents":["\r","function [expinfo, mark_type, adeller_wids, scan_direction] = bmmo_expinfo_from_adeller(adeller)\r","% function [expinfo, mark_type] = bmmo_expinfo_from_adeller(adeller)\r","%\r","% Given an adeller, extract the field centres into an expinfo structure\r","% and return the number of fields\r","% \r","% Input:\r","%   adeller: full path of valid ADELler.xml file\r","%\r","% Output: \r","%   expinfo: structure containing the following fields\r","%       xc: numfields * 1 vector of field centre x coordinates in m\r","%       yc: numfields * 1 vector of field centre y coordinates in m\r","%   mark_type: alignment mark type used\r","%   adeller_wids: Exposure Wafer_ids from Adeller\r","%\r","% 20160331 SBPR Creation\r","% 20200918 ANBZ Updated for Exposure Wafer_ids output from Adeller\r","\r","% Allow pre-loaded input\r","if ischar(adeller)\r","    ler = xml_load(adeller);\r","else\r","    ler = adeller;\r","end\r","    \r","[expinfo, scan_direction] = bmmo_kt_expinfo_from_ler(ler);\r","\r","mark_type = ler.Input.WaferSettings.WaferGenericSettings.AlignmentSettings.WaferAlignmentStrategySettings(1).elt.MarkList(10).elt.MarkType;\r","\r","for i =1:length(ler.Results.WaferResultList)\r","    adeller_wids{i} = ler.Results.WaferResultList(i).elt.WaferId;\r","end\r",""],"CoverageData":{"CoveredLineNumbers":[22,23,28,30,32,33],"UnhitLineNumbers":[24,25],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,0,0,0,4,0,4,0,4,16,0,0]}}