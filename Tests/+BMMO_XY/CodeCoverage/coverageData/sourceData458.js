var sourceData458 = {"FileContents":["function [sbc_new, ml_in, out] = bmmo_simulate_LCP(KT_wo, adelsbcrep, adeller, timefilter)\r","% function [sbc_new, ml_in] = bmmo_simulate_LCP(KT_wo, adelsbcrep, adeller)\r","%\r","% Given KT wafers out, SBC report and ADELler, simulate LCP control loop\r","% (no WH)\r","%\r","% Input:\r","%   KT_wo: KT_wafers_out from KT Devbench Monitor Lot\r","%   adelsbcrep: full path of ADELsbcOverlayDriftControlNxerep from same lot\r","%   adeller: full path of ADELler from same lot\r","%\r","% Optional Input:\r","%   timefilter: (0/1) flag to specify if time filter is enabled (default 0)\r","%       0 means Recover to Baseline\r","%       1 means Control to Baseline\r","%\r","% Output:  \r","%   sbc_new: SBC correction returned by offline model\r","%   ml_in: BMMO-NXE model input read from input data\r","%   out: BMMO-NXE model output\r","%\r","% 201701 SBPR Creation\r","\r","% read adeller to get expinfo (containing only xc, yc field centres)\r","\r","ml_in = bmmo_input_struct_from_devbench(KT_wo, adelsbcrep, adeller, timefilter);\r","\r","out = bmmo_nxe_drift_control_model(ml_in);\r"," \r","sbc_new = out.corr;\r","\r","% % Invert to compare with actuated correction\r","% sbc_inv = sbc;\r","% for ic = 1:2\r","%     sbc_inv.MI.wse(ic).x_mirr.dx = -1 * sbc_inv.MI.wse(ic).x_mirr.dx;\r","%     sbc_inv.MI.wse(ic).y_mirr.dy = -1 * sbc_inv.MI.wse(ic).y_mirr.dy;\r","% end\r","\r","\r","\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[26,28,30],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}