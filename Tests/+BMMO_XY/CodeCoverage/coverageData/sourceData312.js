var sourceData312 = {"FileContents":["classdef testBmmoMlOption < BMMO_XY.tools.testSuite\r","    \r","    %% Test-setup\r","    methods(TestClassSetup)\r","        \r","        function setup(obj)\r","            load ([bmmo_testdata_root filesep 'TC_option_parsing.mat']);\r","            obj.setup_data.mlo = mlo;\r","            \r","            obj.setup_data.options = bmmo_default_options_structure;\r","            obj.setup_data.options.intrafield_reticle_layout = obj.setup_data.options.reduced_reticle_layout;\r","        end\r","        \r","    end\r","    \r","    properties\r","        \r","        setup_data\r","        \r","    end\r","    \r","    methods(Test)\r","        \r","        %% 2 chucks, [1 2 1 2 1 2]\r","        function Case1(obj)\r","            % Given\r","            mlo = bmmo_phase_2_input(obj.setup_data.mlo);\r","            options = bmmo_ml_options(mlo, obj.setup_data.options);\r","            \r","            % When\r","            o.nr_chuck_used =  2;\r","            o.chuck_id =  [1 2 1 2 1 2];\r","            o.chuck_id_used =  [1 2];\r","            \r","            % Then\r","            obj.verifyWithinTol(options.chuck_usage, o);\r","        end\r","        \r","        %% 2 chucks, [2 1 2 1 2 1]\r","        function Case2(obj)\r","            % Given\r","            mlo = bmmo_get_wafers(obj.setup_data.mlo, [2 1 4 3 6 5]);\r","            mlo = bmmo_phase_2_input(mlo);\r","            options = bmmo_ml_options(mlo, obj.setup_data.options);\r","            \r","            % When\r","            o.nr_chuck_used =  2;\r","            o.chuck_id =  [2 1 2 1 2 1];\r","            o.chuck_id_used =  [2 1];\r","            \r","            % Then\r","            obj.verifyWithinTol(options.chuck_usage, o);\r","        end\r","        \r","        %% 1 chuck, [1 1 1]\r","        function Case3(obj)\r","            % Given\r","            mlo = bmmo_get_wafers(obj.setup_data.mlo, [1 3 5]);\r","            mlo = bmmo_phase_2_input(mlo);\r","            options = bmmo_ml_options(mlo, obj.setup_data.options);\r","            \r","            % When\r","            o.nr_chuck_used =  1;\r","            o.chuck_id =  [1 1 1];\r","            o.chuck_id_used =  1;\r","            \r","            % Then\r","            obj.verifyWithinTol(options.chuck_usage, o);            \r","        end\r","        \r","        %% 1 chuck, [2 2 2]\r","        function Case4(obj)\r","            % Given\r","            mlo = bmmo_get_wafers(obj.setup_data.mlo, [2 4 6]);\r","            mlo = bmmo_phase_2_input(mlo);\r","            options = bmmo_ml_options(mlo, obj.setup_data.options);\r","            \r","            % When\r","            o.nr_chuck_used =  1;\r","            o.chuck_id =  [2 2 2];\r","            o.chuck_id_used =  2;\r","            \r","            % Then\r","            obj.verifyWithinTol(options.chuck_usage, o);\r","        end\r","        \r","        %% inline SDM residuals\r","        function Case5(obj)\r","            % Given\r","            options = obj.setup_data.options;            \r","            mlo = bmmo_phase_2_input(obj.setup_data.mlo);\r","            zc = bmmo_default_output_structure(options);\r","            zerocorr = zc.corr;            \r","            expected_corr = zerocorr;\r","            for ic = 1:2\r","                expected_corr.ffp(ic).dx = expected_corr.ffp(ic).dx + (ic * 2);\r","                expected_corr.ffp(ic).dy = expected_corr.ffp(ic).dy + ic + (ic * 2);\r","                mlo.info.report_data.inline_sdm_residual(ic).dx = expected_corr.ffp(ic).dx * -1;\r","                mlo.info.report_data.inline_sdm_residual(ic).dy = expected_corr.ffp(ic).dy * -1;\r","            end\r","            mlo.info.previous_correction = zerocorr;   \r","            \r","            % When\r","            options = bmmo_ml_options(mlo, options);            \r","            \r","            % Then\r","            obj.verifyWithinTol(options.previous_correction, expected_corr);\r","        end\r","        \r","        %%  wrong chuck usage info in ml\r","        function Case6(obj)\r","            % Given\r","            mlo = bmmo_phase_2_input(obj.setup_data.mlo);\r","            mlo.info.F.chuck_id{1} = 'wrong';           \r","            \r","            % When/Then\r","            obj.verifyError(@() bmmo_ml_options(mlo, obj.setup_data.options), '');\r","        end\r","        \r","    end\r","    \r","end"],"CoverageData":{"CoveredLineNumbers":[7,8,10,11,27,28,31,32,33,36,42,43,44,47,48,49,52,58,59,60,63,64,65,68,74,75,76,79,80,81,84,90,91,92,93,94,95,96,97,98,99,101,104,107,113,114,117],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,1,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,0,1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0]}}