var sourceData0 = {"FileContents":["%% Module configuration file for f65e_bl_xy\r","%\r","%   This module and its dependent modules can be included\r","%   in the Matlab search path with command:\r","%\r","%       module.include(<name_of_this_directory>);\r","%\r","% See also: module.include\r","\r","function modConf = MODULE_conf\r","\r","%% name of this module.\r","% Single string that may contain spaces and preferably\r","% has a length of not more than 80 characters.\r","% Name is used to display the name of this module.\r","% If a module in included that has the same name\r","% as this module, a warning will be generated.\r","modConf.name = 'BMMO-XY';\r","\r","%% description of this module.\r","% Cell array of strings. Multiple lines may be used.\r","modConf.summary = {'BMMO-NXE and BL3-NXE model and utilities'};\r","\r","%% responsible person(s) for this module.\r","% String or cell array of strings with email-address(es).\r","% Owners can be contacted for support on this module.\r","modConf.owner = {'dl-fc65e-bl-xy-repo-owners@asml.com'};\r","\r","%% release date.\r","% Note: this field will automatically be updated when publishing with \"module.publish\".\r","% Date format: yyyy-mm-dd\r","modConf.releaseDate = '1111-22-33';\r","\r","%% UserData\r","% This is an optional field that must contain a structure.\r","% No specific fieldnames are required.\r","% UserData can be used to store specific properties for this modules.\r","% For example:\r","% modConf.UserData.field1 = 'content';\r","% modConf.UserData.field2 = 44;\r","%   or\r","% modConf.UserData = struct('field1','content', 'field2', 44);\r","modConf.UserData = generateUserData();\r","\r","%% internal path names.\r","% Cell array with module path names relative to this directory for setting Matlab path.\r","% These path names will be included in the Matlab path when this module is included.\r","% Note: relative directories outside the module directory tree are not allowed.\r","% To include directories outside this module, a dependency of another module,\r","% that has this directory defined as its internal path, can be defined\r","% The module root ('.', this directory) must be included at the top.\r","modConf.relPath = {\r","    ['.']\r","    ['.', filesep, 'BMMOdriftcontrol']\r","    ['.', filesep, 'Help']\r","    ['.', filesep, 'Help', filesep, 'Livescripts']\r","    ['.', filesep, 'Help', filesep, 'Livescripts', filesep, 'populationTooling']\r","    ['.', filesep, 'html']\r","    ['.', filesep, 'Toolbox']\r","    ['.', filesep, 'Toolbox', filesep, 'bmmo_kpi']\r","    ['.', filesep, 'Toolbox', filesep, 'bmmo_layouts']\r","    ['.', filesep, 'Toolbox', filesep, 'bmmo_lcp_sim']\r","    ['.', filesep, 'Toolbox', filesep, 'bmmo_tools']\r","    ['.', filesep, 'Toolbox', filesep, 'bmmo_xml']\r","    ['.', filesep, 'Toolbox', filesep, 'InlineSDM_offlineModel']\r","    ['.', filesep, 'Toolbox', filesep, 'InlineSDM_offlineModel', filesep, 'Configuration']\r","    ['.', filesep, 'Toolbox', filesep, 'InlineSDM_offlineModel', filesep, 'Configuration', filesep, 'StandardConfigurations']\r","    ['.', filesep, 'Toolbox', filesep, 'InlineSDM_offlineModel', filesep, 'old']\r","    ['.', filesep, 'testSuite', filesep, 'testUtilities']\r","    };\r","\r","%% Locations where this module can be found.\r","% Cell array of strings specifying one or more Publish locations.\r","% Publish location can be an absolute pathnames or URL (http:, https:, ftp:).\r","% Publish location must either contain a file named \"MODULE_conf.m\" or \"MODULE_releases.m\"\r","% Publish location must be accessible by both Windows and Unix.\r","% Example:\r","%    if ispc\r","%        publishRoot = <UNC path to shared drive location>;\r","%    else\r","%        publishRoot = <path to shared drive location>;\r","%    end\r","%    modConf.publishLocation = { fullfile(PublishRoot, 'Local') };\r","modConf.publishLocation = {[modConf.UserData.shareRoot, filesep, 'nl011052', filesep, 'DE_Metro_tools', filesep, 'EUV', filesep, 'releases', filesep, modConf.name]};\r","\r","%% Location of other modules where this module depends on.\r","% Cell array with publish locations of dependent modules.\r","% Dependent modules have a lower precedence in the Matlab path than internal module directories.\r","% Each cell specifies a dependent module and itself is a cell array of strings\r","% that specify one or more locations where the root of the dependent module can be found.\r","% Dependent module root locations can be absolute, relative or an URL.\r","% The first available dependent module root will be used by this module.\r","%\r","% Initialy, you may want to copy the \"modConf.publishLocation\" specification\r","% from the MODULE_conf.m file where this module depends on.\r","% It also possible to add a relative path to the dependent module,\r","% relative to this module.\r","% Example:\r","%    modConf.requires = {\r","%            { '../common'     [modConf.publishLocation{1} '/../common'] }\r","%            { matlabroot }\r","%        }\r","% matlabroot is a synthesized module, containing the path to all installed\r","% Matlab products.\r","%\r","% When specifying the publish location of a dependent module, the latest published version will be used.\r","% You can specify a specific published version by including the release date.\r","% Example:\r","%    if ispc\r","%        modConf.requires = {\r","%            { '\\\\asml.com\\shared\\nl123456\\published_modules\\WS_tools' }\r","%            { '\\\\asml.com\\shared\\nl123456\\published_modules\\RS_tools\\R2017_07_18' }\r","%            { matlabroot }\r","%        }\r","%    else\r","%        modConf.requires = {\r","%            { '/shared/nl123456/published_modules/WS_tools' }\r","%            { '/shared/nl123456/published_modules/RS_tools/R2017_07_18' }\r","%            { matlabroot }\r","%    end\r","\r","modConf.requires = {\r","    { matlabroot }\r","    { modConf.UserData.depPaths.Basics }\r","    { modConf.UserData.depPaths.DE_Overlay_Models }\r","};\r","if isfield(modConf.UserData.depPaths, 'CET_model') && exist(modConf.UserData.depPaths.CET_model, 'dir')\r","    modConf.requires = [modConf.requires; {{modConf.UserData.depPaths.CET_model}}];\r","else\r","    warning('The CET_model toolbox is unavailable.\\npath = %s\\nIf needed request access to the following costcenter: nl011052\\DE_Metro_tools.');\r","end\r","if isfield(modConf.UserData.depPaths, 'projection_toolbox_p') &&  exist(modConf.UserData.depPaths.projection_toolbox_p, 'dir')\r","    modConf.requires = [modConf.requires; {{modConf.UserData.depPaths.projection_toolbox_p}}];\r","else\r","    warning('The projection_toolbox_p toolbox is unavailable.\\npath = %s\\nIf needed request access to the following costcenter: nl011032\\Projection_tooling.');\r","end\r","\r","%% Matlab release and architecture compatibility\r","% This is an optional field containing a structure array with the fields\r","% \"release\" and \"arch\", indicating for which combinations of Matlab releases\r","% and Matlab architectures this module is qualified.\r","% \"release\" is the name returned by version('-release'),\r","% optionally preceded by \"R\".\r","% \"arch\" is the name returned by computer('arch').\r","% Before publishing a module, its owner(s) is expected to qualify the\r","% module for the Matlab releases and architectures specified here.\r","% For example:\r","%   qualified = { \r","%       'R2008a'  'win32'\r","%       'R2016b'  'win64'\r","%       'R2016b'  'glnxa64' };\r","%   modConf.matlabQualified = cell2struct(qualified, {'release' 'arch'}, 2);\r","modConf.matlabQualified = struct('release', {'R2020b'}, 'arch', {'win64'});\r","\r","%% % Test Directory\r","% This is an optional field containing a string or cell array of strings\r","% specifying directories that contain test files.\r","% Test directories generally are not included in relPath.\r","% Test directories need to be specified relative to the module root.\r","% For example:\r","% modConf.testDir = './tests';\r","%   or\r","% modConf.testDir = {'./tests' './testCases'};\r","modConf.testDir = {\r","    ['.', filesep, 'testSuite', filesep, 'testCases']\r","    ['.', filesep, 'testSuite', filesep, 'testCasesExt']\r","    ['.', filesep, 'testSuite', filesep, 'testCasesWindows']\r","    ['.', filesep, 'Tests']\r","    };\r","\r","%% Java class directories or jar-files\r","% This is an optional field containing a cell array of strings specifying\r","% Java class directories or jar-files.\r","% Java directories or jar-files need to be specified relative to the module root.\r","% For example:\r","% modConf.javaRelPath = {'./java/xyz.jar'};\r","modConf.javaRelPath = { \r","};\r","\r","end\r","\r","\r","function userData = generateUserData()\r","\r","% Set the platform\r","if ispc\r","    userData.arch = \"win64\";\r","elseif contains(pwd, '/hoop/asml-gh')\r","    userData.arch = \"GHA\";\r","end\r","\r","% Set paths\r","if userData.arch == \"win64\"\r","    userData.networkRoot = '\\\\asml.com\\eu';\r","else\r","    userData.networkRoot = '';\r","end\r","userData.shareRoot  = [userData.networkRoot filesep 'shared'];\r","userData.moduleRoot = fileparts(mfilename('fullpath'));\r","\r","% Set required toolbox paths\r","if userData.arch == \"win64\"\r","    userData.depPaths.Basics                = '\\\\asml.com\\eu\\applications\\matlab\\published_modules\\Basics';\r","    userData.depPaths.DE_Overlay_Models     = '\\\\asml.com\\eu\\shared\\nl011065\\MO_tools\\DE_Overlay_Models';\r","    userData.depPaths.CET_model             = '\\\\asml.com\\eu\\shared\\nl011052\\DE_Metro_tools\\EUV\\releases\\CET_model';\r","    userData.depPaths.projection_toolbox_p  = '\\\\asml.com\\eu\\shared\\nl011032\\Projection_tooling\\projection_toolbox_p';\r","elseif userData.arch == \"GHA\"\r","    userData.depPaths.Basics                = '/shared/nl011023_u/samatmgr/published_modules/Basics';\r","    userData.depPaths.DE_Overlay_Models     = [userData.moduleRoot '/../DE_Overlay_Models'];\r","else\r","    userData.depPaths.Basics                = '/shared/nl011023_u/samatmgr/published_modules/Basics';\r","    userData.depPaths.DE_Overlay_Models     = '/shared/nl011065/MO_tools/DE_Overlay_Models';\r","    userData.depPaths.CET_model             = '/shared/nl011052/DE_Metro_tools/EUV/releases/CET_model';\r","    userData.depPaths.projection_toolbox_p  = '/shared/nl011032/Projection_tooling/projection_toolbox_p';\r","end\r","\r","end\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[18,22,27,32,43,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,84,122,123,124,125,127,128,129,130,132,133,134,135,153,164,165,166,167,168,177,186,187,188,189,193,194,195,196,198,199,202,203,204,205,206,207,208,209,210,211,212,213,214],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}