var sourceData46 = {"FileContents":["function drdl = bmmo_calculate_WH_sensitivity(options)\r","% function drdl = bmmo_calculate_WH_sensitivity(options)\r","%\r","% Given the report data and the empirical constants in options, calculate\r","% the wafer heating sensitivity drdl\r","%\r","% Input:\r","%   options: structure containing the following fields (all type double):\r","%       WH.tret:        Reticle Transmission Factor\r","%       WH.rir:         Wafer IR reflectance\r","%       WH.tir:         Wafer IR transmittance\r","%       WH.pdgl:        DGL Power (W)\r","%       WH.slip:        W/m\r","%       WH.a            empirical constants\r","%       WH.b\r","%        and the following structure:\r","%       WH.c_mapping\r","%           WH.c_mapping.Peuv: 1*n vector of Peuv values (double)\r","%           WH.c_mapping.cP:   1*n vector of c values (double)\r","%\r","% Output:\r","%   drdl: WH sensitivity value\r","\r","tret = options.WH.tret;\r","rwaf = options.WH.rir;\r","twaf = options.WH.tir;\r","pdgl = options.WH.pdgl;\r","peuv = options.WH.slip * 0.026; % Peuv at wafer level for 100% reflective reticle\r","a = options.WH.a;\r","b = options.WH.b;\r","IR2EUV_old = options.Rir2euv;\r","\r","\r","% Find c from the lookup table\r","c = sub_get_c(options);\r","\r","drdl = 1/(1-rwaf) * ((1-rwaf)*IR2EUV_old + 1/(1-twaf+c*twaf) * (b * pdgl/peuv + a * tret));\r","\r","\r","% End of main function, subfunctions below\r","function c = sub_get_c(options)\r","\r","if options.WH.slip < options.WH.c_mapping.slip(1)\r","    c = options.WH.c_mapping.c(1);\r","elseif options.WH.slip > options.WH.c_mapping.slip(end)\r","    c = options.WH.c_mapping.c(end);\r","else\r","    c = interp1(options.WH.c_mapping.slip, options.WH.c_mapping.c, options.WH.slip);\r","end\r","\r",""],"CoverageData":{"CoveredLineNumbers":[24,25,26,27,28,29,30,31,35,37,43,44,45,46,47,48],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,177,177,177,177,177,177,177,177,0,0,0,177,0,177,0,0,0,0,0,177,147,30,7,23,23,0,0,0]}}