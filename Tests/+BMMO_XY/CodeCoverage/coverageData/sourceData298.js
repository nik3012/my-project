var sourceData298 = {"FileContents":["classdef testBmmoIntrafSign < BMMO_XY.tools.testSuite\r","    \r","    methods(Test)\r","        \r","        %% test case \r","        function Case1(obj)\r","            % Given\r","            mlz = bmmo_default_input;\r","            mlp = bmmo_process_input(mlz);              % perform field reconstruction\r","            [~, par18] = ovl_model(mlz, '18par');       % Add some positive INTRAF content       \r","            \r","            % When     \r","            fn = fieldnames(par18);\r","            for i = 1:length(fn)\r","                par18.(fn{i}) = 1e-9;\r","            end            \r","            mlp = ovl_model(mlp, 'apply', par18);\r","            mlp = bmmo_convert_to_smf(mlp);\r","            input = mlz;\r","            input.layer = mlp.layer;\r","            input.info.previous_correction = bmmo_add_missing_corr(input.info.previous_correction);\r","            input.configurable_options.submodel_sequence = {'INTRAF'};                        \r","            out = bmmo_nxe_drift_control_model(input);  % run the model            \r","            intradata = out.corr.ffp(1);            \r","            mlout.wd.xf = intradata.x;\r","            mlout.wd.yf = intradata.y;\r","            mlout.wd.xw = mlout.wd.xf;\r","            mlout.wd.yw = mlout.wd.yf;\r","            mlout.wd.xc = zeros(size(mlout.wd.xf));\r","            mlout.wd.yc = zeros(size(mlout.wd.xf));            \r","            mlout.layer.wr.dx = intradata.dx;\r","            mlout.layer.wr.dy = intradata.dy;            \r","            mlout.nwafer = 1;\r","            mlout.nlayer = 1;\r","            mlout.nfield = 1;\r","            mlout.nmark = length(intradata.x);            \r","            [~, par_out] = ovl_model(mlout, '18par');\r","            fn = fieldnames(par_out);\r","            for i = 1:length(fn)\r","                \r","                % Then\r","                obj.verifyTrue(par_out.(fn{i}) < 1e-12);\r","            end            \r","        end\r","        \r","    end\r","    \r","end"],"CoverageData":{"CoveredLineNumbers":[8,9,10,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,1,1,1,0,0,1,1,23,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,23,0,0,0,0,0,0]}}