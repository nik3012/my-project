var sourceData217 = {"FileContents":["function array = extractArrayFromStruct(inStruct, fieldName)\r","% array = extractArrayFromStruct(inStruct, fieldName)\r","%\r","% Function that extracts a specified array from a struct and places it in a new array. \r","%\r","% Input Arguments:\r","% - inStruct          [ array of structs ] An array of structs containing the\r","%                                            data which needs to be extracted\r","% - fieldName         [ string ]           String with the name of the array that needs to\r","%                                            be extracted from the struct\r","%\r","% Output Arguments:\r","% - array              [ array ]           Array containing the extracted data.  \r","%\r","\r","% Manipulate the input to the subsref function\r","fhandle = @(x) subsref(inStruct(x), stringToSubsref(string(fieldName)));\r","\r","% Extract the values\r","try\r","    % Default where all the elements are valid inputs for an array\r","    array = arrayfun(fhandle, (1 : length(inStruct)));\r","catch\r","    % Alternative where the elements have to be stored in a cell array\r","    try\r","        array = arrayfun(fhandle, (1 : length(inStruct)), 'UniformOutput', false);\r","    catch ME\r","        rethrow(ME)\r","    end\r","end\r","\r","end\r","\r","\r","function S = stringToSubsref(str)\r","\r","% Split the string\r","str                 = string(str);\r","delimiters          = [\".\", \"(\", \").\", \")\", \"{\", \"}.\", \"}\"];\r","[strElem, strDelim] = split(str, delimiters);\r","\r","% Construct the subsref types\r","S(1).type = '.';\r","for index = 1 : length(strDelim)\r","    switch strDelim(index)\r","        case {\".\", \").\", \"}.\"}\r","            S(index + 1).type = '.';\r","        case \"(\"\r","            S(index + 1).type = '()';\r","        case \"{\"\r","            S(index + 1).type = '{}';\r","        otherwise\r","    end            \r","end\r","\r","% Construct the subsref subs\r","for index = 1 : length(S)\r","    switch S(index).type\r","        case '.'\r","            S(index).subs = char(strElem(index));\r","        case {'()', '{}'}\r","            numericValue = sscanf(strElem(index), '%f', 1);\r","            if numericValue\r","                S(index).subs = {numericValue};\r","            else\r","                S(index).subs = char(strElem(index));\r","            end\r","        otherwise\r","    end\r","end\r","\r","end"],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[17,20,22,23,25,26,27,28,38,39,40,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,66,68],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}