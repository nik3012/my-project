var sourceData685 = {"FileContents":["%% history:\r","%   2015-06-30  MoZH  creation\r","%   2019-01-02  SELR  created setup function & test case 6, fixed reticle layout\r","\r","function test_suite = test_bmmo_ml_options\r","suite = initTestSuite2016(localfunctions);\r","if nargout==0\r","    suite.run();\r","else\r","    test_suite = suite;\r","end\r","\r","\r","function setup_data = setup\r","load ([bmmo_testdata_root filesep 'TC_option_parsing.mat']);\r","setup_data.mlo = mlo;\r","\r","setup_data.options = bmmo_default_options_structure;\r","setup_data.options.intrafield_reticle_layout = setup_data.options.reduced_reticle_layout;\r","\r","\r","% 2 chucks, [1 2 1 2 1 2]\r","function test_bmmo_ml_options_case1(setup_data)\r","mlo = bmmo_phase_2_input(setup_data.mlo);\r","options = bmmo_ml_options(mlo, setup_data.options);\r","\r","o.nr_chuck_used =  2;\r","o.chuck_id =  [1 2 1 2 1 2];\r","o.chuck_id_used =  [1 2];\r","\r","bmmo_assert_equal(options.chuck_usage, o);\r","\r","\r","% 2 chucks, [2 1 2 1 2 1]\r","function test_bmmo_ml_options_case2(setup_data)\r","mlo = bmmo_get_wafers(setup_data.mlo, [2 1 4 3 6 5]);\r","mlo = bmmo_phase_2_input(mlo);\r","options = bmmo_ml_options(mlo, setup_data.options);\r","\r","o.nr_chuck_used =  2;\r","o.chuck_id =  [2 1 2 1 2 1];\r","o.chuck_id_used =  [2 1];\r","\r","bmmo_assert_equal(options.chuck_usage, o);\r","\r","\r","% 1 chuck, [1 1 1]\r","function test_bmmo_ml_options_case3(setup_data)\r","mlo = bmmo_get_wafers(setup_data.mlo, [1 3 5]);\r","mlo = bmmo_phase_2_input(mlo);\r","options = bmmo_ml_options(mlo, setup_data.options);\r","\r","o.nr_chuck_used =  1;\r","o.chuck_id =  [1 1 1];\r","o.chuck_id_used =  1;\r","\r","bmmo_assert_equal(options.chuck_usage, o);\r","\r","\r","% 1 chuck, [2 2 2]\r","function test_bmmo_ml_options_case4(setup_data)\r","mlo = bmmo_get_wafers(setup_data.mlo, [2 4 6]);\r","mlo = bmmo_phase_2_input(mlo);\r","options = bmmo_ml_options(mlo, setup_data.options);\r","\r","o.nr_chuck_used =  1;\r","o.chuck_id =  [2 2 2];\r","o.chuck_id_used =  2;\r","\r","bmmo_assert_equal(options.chuck_usage, o);\r","\r","\r","% inline SDM residuals\r","function test_bmmo_ml_options_case5(setup_data)\r","options = setup_data.options;\r","\r","mlo = bmmo_phase_2_input(setup_data.mlo);\r","\r","zc = bmmo_default_output_structure(options);\r","zerocorr = zc.corr;\r","\r","expected_corr = zerocorr;\r","for ic = 1:2\r","    expected_corr.ffp(ic).dx = expected_corr.ffp(ic).dx + (ic * 2);\r","    expected_corr.ffp(ic).dy = expected_corr.ffp(ic).dy + ic + (ic * 2);\r","    mlo.info.report_data.inline_sdm_residual(ic).dx = expected_corr.ffp(ic).dx * -1;\r","    mlo.info.report_data.inline_sdm_residual(ic).dy = expected_corr.ffp(ic).dy * -1;\r","end\r","mlo.info.previous_correction = zerocorr;\r","\r","options = bmmo_ml_options(mlo, options);\r","\r","bmmo_assert_equal(options.previous_correction, expected_corr);\r","\r","\r","%  wrong chuck usage info in ml\r","function test_bmmo_ml_options_case6(setup_data)\r","mlo = bmmo_phase_2_input(setup_data.mlo);\r","mlo.info.F.chuck_id{1} = 'wrong';\r","\r","try\r","    options = bmmo_ml_options(mlo, setup_data.options);\r","catch ME\r","    if strcmp(ME.message, 'No chuck id exists.: sub_determine_chuck_usage');\r","        assert(true)\r","    else\r","        rethrow ME\r","    end\r","end"],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[6,7,8,9,10,15,16,18,19,24,25,27,28,29,31,36,37,38,40,41,42,44,49,50,51,53,54,55,57,62,63,64,66,67,68,70,75,77,79,80,82,83,84,85,86,87,89,91,93,98,99,101,102,103,104,105,106,107],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}