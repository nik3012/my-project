var sourceData689 = {"FileContents":["%% history:\r","%   2016-02-16  SBPR  creation\r","%   2018-12-19  SELR  changed setup function\r","%   2020-02-04  LUDU  update for MI@M sign switch\r","\r","function test_suite = test_bmmo_organise_model_results\r","suite = initTestSuite2016(localfunctions);\r","if nargout==0\r","    suite.run();\r","else\r","    test_suite = suite;\r","end\r","\r","\r","function setup_data = setup_test_bmmo_organise_model_results\r","\r","ml = bmmo_default_input;\r","ml = bmmo_turn_off_l2(ml);\r","corr = bmmo_default_output_structure(bmmo_default_options_structure);\r","ml.info.previous_correction = corr.corr;\r","\r","% newkfactors = bmmo_k_factors_to_xml(ml.info.report_data.WH_K_factors, ml.nwafer, length(ml.info.report_data.WH_K_factors.wafer(1).field));\r","% ml.info.report_data.WH_K_factors = newkfactors;\r","ml.configurable_options.mark_type = 'udbo';\r","ml.configurable_options.layer_fields = { 1:89 };\r","mli = bmmo_phase_2_input(ml);\r","[setup_data.mli, setup_data.options] = bmmo_process_input(mli);\r","\r","\r","% case 1: all-zero previous correction and all-zero results\r","function test_bmmo_organise_model_results_case1(setup_data)\r","\r","mli = setup_data.mli;\r","options = setup_data.options;\r","\r","out = bmmo_default_output_structure(options);\r","out = sub_set_configurations(out, options);\r","options.previous_correction = out.corr;\r","\r","model_results = bmmo_default_model_result(mli, options);\r","\r","test_out = bmmo_organize_model_results(model_results,options);\r","test_out.corr = bmmo_KA_remove_interpolants(test_out.corr);\r","bmmo_assert_equal(out, test_out);\r","\r","\r","% case 2: nonzero previous correction and all-zero results.\r","% Also checks if previous SUSD and KA is neutralized when disabled\r","function test_bmmo_organise_model_results_case2(setup_data)\r","\r","mli = setup_data.mli;\r","options = setup_data.options;\r","\r","out = bmmo_default_output_structure(options);\r","\r","out = sub_get_nonzero_output(out, options, 1, 2, 0, -1, 3, 0);\r","\r","options.previous_correction = out.corr;\r","model_results = bmmo_default_model_result(mli, options);\r","\r","test_out = bmmo_organize_model_results(model_results,options);\r","out.corr.Configurations = test_out.corr.Configurations;\r","test_out.corr = bmmo_KA_remove_interpolants(test_out.corr);\r","bmmo_assert_equal(out, test_out);\r","\r","\r","% case 3: all-zero previous correction and non-zero results, unitary time\r","% filter scaling\r","function test_bmmo_organise_model_results_case3(setup_data)\r","\r","mli = setup_data.mli;\r","options = setup_data.options;\r","options.susd_control = 1;\r","\r","tmp_out = bmmo_default_output_structure(options);\r","options.previous_correction = tmp_out.corr;\r","options.filter_coefficients = sub_get_filter(1,1,1,1,1,1);\r","\r","% Generate expected output\r","out = sub_get_nonzero_output(tmp_out, options, 1, 1, 1, 1, 1, 1);\r","\r","% generate example model results\r","model_results = sub_get_model_results(mli, options, -1,-1,-1,-1,-1,-1);\r","\r","test_out = bmmo_organize_model_results(model_results,options);\r","out.corr.Configurations = test_out.corr.Configurations;\r","test_out.corr = bmmo_KA_remove_interpolants(test_out.corr);\r","bmmo_assert_equal(out, test_out);\r","\r","\r","% case 4: all-zero previous correction and non-zero results, varied time\r","% filter scaling\r","function test_bmmo_organise_model_results_case4(setup_data)\r","\r","mli = setup_data.mli;\r","options = setup_data.options;\r","options.susd_control = 1;\r","\r","out = bmmo_default_output_structure(options);\r","options.previous_correction = out.corr;\r","\r","% scale the different results\r","options.filter.coefficients = sub_get_filter(6,5,4,2,3,7);\r","\r","out = sub_get_nonzero_output(out, options, 6,5,4,2,3,7);\r","\r","% Generate example model results\r","model_results = sub_get_model_results(mli, options, -1,-1,-1,-1,-1,-1);\r","\r","test_out = bmmo_organize_model_results(model_results,options);\r","out.corr.Configurations = test_out.corr.Configurations;\r","test_out.corr = bmmo_KA_remove_interpolants(test_out.corr);\r","bmmo_assert_equal(out, test_out);\r","\r","\r","function out = sub_set_configurations(in, options)\r","\r","out = in;\r","out.corr.Configurations.KA_start_x  = options.KA_start;\r","out.corr.Configurations.KA_start_y  = options.KA_start;\r","out.corr.Configurations.KA_steps_x  = options.KA_length;\r","out.corr.Configurations.KA_steps_y  = options.KA_length;\r","out.corr.Configurations.KA_pitch_x  = options.KA_pitch;\r","out.corr.Configurations.KA_pitch_y  = options.KA_pitch;\r","out.corr.Configurations.MI_start    = options.map_param.start_position;\r","out.corr.Configurations.MI_steps    = options.map_table_length;\r","out.corr.Configurations.MI_pitch    = options.map_param.pitch;\r","\r","\r","function out = sub_get_nonzero_output(out_zero, options, wh, mi, ka, bao, intraf, susd)\r","\r","% fill in structure with nonzero values\r","out = out_zero;\r","fn = fieldnames(out.corr.BAO);\r","out.corr.IR2EUV = 1 * wh;\r","for ic = 1:2\r","   out.corr.MI.wse(ic).x_mirr.dx =  out.corr.MI.wse(ic).x_mirr.dx + (1e-9 * mi);\r","   out.corr.MI.wse(ic).y_mirr.dy =  out.corr.MI.wse(ic).y_mirr.dy + (1e-9 * mi);\r","   out.corr.KA.grid_2de(ic).dx = out.corr.KA.grid_2de(ic).dx + (1e-9 * ka);\r","   out.corr.KA.grid_2de(ic).dy = out.corr.KA.grid_2de(ic).dy + (1e-9 * ka);\r","   out.corr.ffp(ic).dx = out.corr.ffp(ic).dx + (1e-9 * intraf);\r","   out.corr.ffp(ic).dy = out.corr.ffp(ic).dy + (1e-9 * intraf);\r","   for ifield = 1:length(fn)\r","        out.corr.BAO(ic).(fn{ifield}) = out.corr.BAO(ic).(fn{ifield}) + (1e-9 * bao);\r","   end\r","end\r","for ic_sd = 1:4\r","    out.corr.SUSD(ic_sd).TranslationY = 1e-9*susd*(-1)^ic_sd;\r","end\r","\r","for ic = 1:2\r","    if options.invert_MI_wsm_sign\r","        out.corr.MI.wsm(ic).x_mirr.dx = -1 * out.corr.MI.wse(ic).x_mirr.dx;\r","        out.corr.MI.wsm(ic).y_mirr.dy = -1 * out.corr.MI.wse(ic).y_mirr.dy;\r","    else\r","        out.corr.MI.wsm      =      out.corr.MI.wse;\r","    end \r","end\r","\r","out.corr.ffp = bmmo_model_10par_ffp(out.corr.ffp, options);\r","\r","\r","function filter = sub_get_filter(wh, mi, ka, bao, intraf, susd)\r","\r","filter.WH = 1 * wh;\r","filter.MI = 1 * mi;\r","filter.KA = 1 * ka;\r","filter.BAO = 1 * bao;\r","filter.INTRAF = 1 * intraf;\r","filter.SUSD = 1 * susd;\r","\r","\r","function model_results = sub_get_model_results(ml, options, wh, mi, ka, bao, intraf, susd)\r","\r","model_results = bmmo_default_model_result(ml, options);\r","\r","out = bmmo_default_output_structure(options);\r","defaultBAO = out.corr.BAO(1);\r","baofields = fieldnames(defaultBAO);\r","for ibao = 1:length(baofields)\r","    defaultBAO.(baofields{ibao}) = defaultBAO.(baofields{ibao}) + (1e-9 * bao);\r","end\r","parlist = bmmo_BAO_to_10par(defaultBAO);\r","\r","% Generate example model results\r","model_results.WH.Calib_WH = wh;\r","\r","fn = fieldnames(model_results.BAO.correction(1));\r","for ic = 1:2\r","    model_results.MI.Calib_MI(ic).x_mirr.dx = model_results.MI.Calib_MI(ic).x_mirr.dx + (1e-9 * mi);\r","    model_results.MI.Calib_MI(ic).y_mirr.dy = model_results.MI.Calib_MI(ic).y_mirr.dy + (1e-9 * mi);\r","    model_results.KA.Calib_KA(ic).dx = model_results.KA.Calib_KA(ic).dx + (1e-9 * ka);\r","    model_results.KA.Calib_KA(ic).dy = model_results.KA.Calib_KA(ic).dy + (1e-9 * ka);\r","    model_results.INTRAF.Calib_intra(ic).layer.wr.dx = model_results.INTRAF.Calib_intra(ic).layer.wr.dx + (1e-9 * intraf);\r","    model_results.INTRAF.Calib_intra(ic).layer.wr.dy = model_results.INTRAF.Calib_intra(ic).layer.wr.dy + (1e-9 * intraf);\r","    for ibao = 1:length(fn)\r","        model_results.BAO.correction(ic).(fn{ibao}) = parlist.(fn{ibao});\r","    end\r","    model_results.SUSD.Calib_SUSD(ic) = model_results.SUSD.Calib_SUSD(ic) + (1e-9 * susd);\r","    model_results.MI.Calib_MI_wsm(ic) = model_results.MI.Calib_MI(ic);\r","    if options.invert_MI_wsm_sign\r","        model_results.MI.Calib_MI_wsm(ic).x_mirr.dx = -1 * model_results.MI.Calib_MI(ic).x_mirr.dx;\r","        model_results.MI.Calib_MI_wsm(ic).y_mirr.dy = -1 * model_results.MI.Calib_MI(ic).y_mirr.dy;\r","    end\r","end"],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[7,8,9,10,11,17,18,19,20,24,25,26,27,33,34,36,37,38,40,42,43,44,51,52,54,56,58,59,61,62,63,64,71,72,73,75,76,77,80,83,85,86,87,88,95,96,97,99,100,103,105,108,110,111,112,113,118,119,120,121,122,123,124,125,126,127,133,134,135,136,137,138,139,140,141,142,143,144,147,148,151,152,153,154,155,156,160,165,166,167,168,169,170,175,177,178,179,180,181,183,186,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}