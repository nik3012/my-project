var sourceData378 = {"FileContents":["function kpi_ho = bmmo_parse_kpi_ho_rep_lis(kpi_ho, kpi_rep_ho1,kpi_rep_ho2, compare)\r","%\r","% function kpi_ho = bmmo_parse_kpi_ho_rep_lis(kpi_ho, kpi_rep_ho1,kpi_rep_ho2, compare)\r","%\r","%Given the K-factors from the LIS job report, parse the\r","%contents into a BMMO-NXE kpi structure\r","% Input:\r","%   kpi_rep_ho1 : K-factors Chuck 1 from job report \r","%   kpi_rep_ho2 : K-factors Chuck 2 from job report \r","%   kpi_ho      : KPI structure to copy the output\r","\r","% Optional Input:\r","%   compare     :  switch (true/false) used for Delta k factors (monitoring)\r","\r","% Output:\r","%   kpi_ho  :  K-factors KPI structure as generated by\r","%   BMMO model\r","%\r","% Changelog\r","% 20200812  ANBZ Creation\r","% 20201120  OGIE Update for 35par\r","\r","if nargin < 4\r","    compare = false;\r","end\r","\r","% mapping table from kpi rep\r","kpi_rep_pars = {'SecondOrderMagnification', ...\r","    'Trapezoid', ...\r","    'Bow', ...\r","    'ThirdOrderMagnification', ...\r","    'Accordion', ...\r","    'CShapeDistortion', ...\r","    'ThirdOrderFlow'};\r","\r","kpi_rep_dim =  {'X', ...\r","    'Y'};\r","\r","% mapping table from kpi pars to k-factor names\r","%           col1: x, col2: y\r","kpi_kf_map = {'k7', 'k8'; ...\r","    'k9', 'k10'; ...\r","    'k11', 'k12'; ...\r","    'k13', 'k14'; ...\r","    'k15', 'k16'; ...\r","    'k17', 'k18'; ...\r","    'k19', 'k20'};\r","\r","kpi_chk = {'chk1', ...\r","           'chk2'};\r","\r","if compare\r","    for ii = 1:2\r","        kpi_chk{ii} = [kpi_chk{ii} '_compare_delta'];\r","    end\r","end\r","\r","parscale = [1e-5 1e-5 1e-5 1e-3 1e-3 1e-3 1e-3];\r","\r","for ipar = 1:length(kpi_rep_pars)\r","    for idim = 1:2\r","        for ichk = 1\r","            fname = ['ovl_' kpi_kf_map{ipar, idim} '_' kpi_chk{ichk}];\r","            val = kpi_rep_ho1.(kpi_rep_pars{ipar}).(kpi_rep_dim{idim});\r","            kpi_ho.(fname) = str2double(val) * parscale(ipar);\r","        end\r","        \r","        \r","        for ichk = 2\r","            fname = ['ovl_' kpi_kf_map{ipar, idim} '_' kpi_chk{ichk}];\r","            val = kpi_rep_ho2.(kpi_rep_pars{ipar}).(kpi_rep_dim{idim});\r","            kpi_ho.(fname) = str2double(val) * parscale(ipar);\r","        end\r","    end\r","end\r","\r","if isfield(kpi_rep_ho1,'K51')\r","    % 35par situation - add the extra parameters\r","    % this is a flatlist, no XY separation like the other pars\r","    kpi_rep_pars35 = {'K22','K24','K25','K26','K27','K29','K32',...\r","        'K34','K36','K37','K39','K41','K46','K48','K51'};\r","    kpi_kf_map35 = {'k22','k24','k25','k26','k27','k29','k32',...\r","        'k34','k36','k37','k39','k41','k46','k48','k51'};\r","    % convert to all nm & cm to m: nm/cm4 -> 1e-9/1e-8=1e-1\r","    parscale35 = [1e-1 1e-1 1e-1 1e-1 1e-1 1e-1 1e+1 1e+1 1e+1 1e+1 1e+1 1e+1 1e+3 1e+3 1e+3];\r","\r","    for ipar = 1:length(kpi_rep_pars35)\r","        for ichk = 1\r","            fname = ['ovl_' kpi_kf_map35{ipar} '_' kpi_chk{ichk}];\r","            val = kpi_rep_ho1.(kpi_rep_pars35{ipar});\r","            kpi_ho.(fname) = str2double(val) * parscale35(ipar);\r","        end\r","        \r","        for ichk = 2\r","            fname = ['ovl_' kpi_kf_map35{ipar} '_' kpi_chk{ichk}];\r","            val = kpi_rep_ho2.(kpi_rep_pars35{ipar});\r","            kpi_ho.(fname) = str2double(val) * parscale35(ipar);\r","        end\r","    end    \r","end"],"CoverageData":{"CoveredLineNumbers":[23,24,28,36,41,49,52,53,54,58,60,61,62,63,64,65,69,70,71,72,77,80,82,85,87,88,89,90,91,94,95,96,97],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,19,0,0,0,23,0,0,0,0,0,0,0,23,0,0,0,0,23,0,0,0,0,0,0,0,23,0,0,23,4,8,0,0,0,23,0,23,161,322,322,322,322,0,0,0,322,322,322,322,0,0,0,0,23,0,0,6,0,6,0,0,6,0,6,90,90,90,90,0,0,90,90,90,90,0,0,0]}}