var sourceData707 = {"FileContents":["function test_suite = test_bmmo_shift_fields\r","suite = initTestSuite2016(localfunctions);\r","if nargout==0\r","    suite.run();\r","else\r","    test_suite = suite;\r","end\r","\r","\r","function test_bmmo_shift_fields_case1\r","\r","ml = sub_simplezerostructure;\r","\r","% Make a structure with distinct shifts per layer and coordinate\r","x_shift = [10 15; 20 30];\r","y_shift = [-1 -3; -2 -6];\r","\r","for il = 1:2\r","    mll(il) = bmmo_shift_fields(ml, x_shift, y_shift, il);\r","end\r","\r","for il = 1:2\r","    assert(all(mll(il).wd.xc == x_shift(il,1)));\r","    assert(all(mll(il).wd.xf == x_shift(il,2)));\r","    assert(all(mll(il).wd.yc == y_shift(il,1)));\r","    assert(all(mll(il).wd.yf == y_shift(il,2)));  \r","end\r","\r","\r","function test_bmmo_shift_fields_case2\r","\r","ml = sub_simplezerostructure;\r","\r","% Make a simple shift structure (one layer, no xf shifts\r","x_shift_simple = 40;\r","y_shift_simple = 45;\r","\r","mlo = bmmo_shift_fields(ml, x_shift_simple, y_shift_simple);\r","\r","assert(all(mlo.wd.xc == x_shift_simple));\r","assert(all(mlo.wd.yc == y_shift_simple));\r","assert(all(mlo.wd.xf == 0));\r","assert(all(mlo.wd.yf == 0));\r","\r","function test_bmmo_shift_fields_case3\r","\r","ml = sub_simplezerostructure;\r","\r","% Make a shift structure with one layer and xf/yf shifts\r","x_shift_l1 = [50 55];\r","y_shift_l1 = [60 65];\r","\r","mlo = bmmo_shift_fields(ml, x_shift_l1, y_shift_l1);\r","\r","assert(all(mlo.wd.xc == x_shift_l1(1)));\r","assert(all(mlo.wd.yc == y_shift_l1(1)));\r","assert(all(mlo.wd.xf == x_shift_l1(2)));\r","assert(all(mlo.wd.yf == y_shift_l1(2)));\r","\r","\r","function test_bmmo_shift_fields_case4\r","\r","ml = sub_simplezerostructure;\r","\r","% Make a shift structure with 2 layers and no xf/yf shifts\r","x_shift_2l = [70; 75];\r","y_shift_2l = [80; 85];\r","\r","for il = 1:2\r","    mll(il) = bmmo_shift_fields(ml, x_shift_2l, y_shift_2l, il);\r","end\r","\r","for il = 1:2\r","    assert(all(mll(il).wd.xc == x_shift_2l(il,1)));\r","    assert(all(mll(il).wd.xf == 0));\r","    assert(all(mll(il).wd.yc == y_shift_2l(il,1)));\r","    assert(all(mll(il).wd.yf == 0));  \r","end\r","\r","function ml = sub_simplezerostructure\r","\r","% Make a small ml structure.\r","ml.wd.xc = zeros(1,10);\r","ml.wd.yc = ml.wd.xc;\r","ml.wd.xf = ml.wd.xc;\r","ml.wd.yf = ml.wd.xc;\r","ml.wd.xw = ml.wd.xc;\r","ml.wd.yw = ml.wd.xc;"],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[2,3,4,5,6,12,15,16,18,19,22,23,24,25,26,32,35,36,38,40,41,42,43,47,50,51,53,55,56,57,58,63,66,67,69,70,73,74,75,76,77,83,84,85,86,87,88],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}