var sourceData728 = {"FileContents":["function bmmo_assert_kfactor_equal(kTest,kRef, actuation_order, show_NOKs)\r","% function bmmo_assert_kfactor_equal(kTest,kRef, actuation_order, varargin)\r","%\r","% Asserts if k-structs (kTest and kRef) are equal\r","% Tolerances are specified for each k-factor\r","%\r","% Inputs:    \r","%           kTest                   : k-structs test\r","%           kRef                    : k-structs reference\r","%           actuation_order         : intrafield order of actuation (3 or 5)\r","% \r","% Optional input:\r","%           show_NOKs               : list only NOKs from assertion if set to 1 (default is 1)\r","% \r","% k-structs can be obtained from:   [~, kStruct] = bmmo_remove_k_factors_from_output(output_struct)\r","\r","if nargin < 4\r","    show_NOKs = 1;\r","end\r","\r","\r","outfile = 0;\r","f = [\"uncontrolled\" \"delta_filtered\" \"delta_unfiltered\" \"total_filtered\" \"total_unfiltered\" \"intra_delta\"];\r","\r","for ii = 1:length(f)\r","    \r","    if ii <= 5\r","        subname = string( ( fieldnames( kTest.(f(ii)) ) ) );\r","        [kTest1, kRef1, kTest2, kRef2, kTest3, kRef3] = sub_select_Kfac(kTest.(f(ii)).(subname), kRef.(f(ii)).(subname));\r","        if actuation_order == 5  %5th order actuation\r","            [hkTest1, hkRef1, hkTest2, hkRef2, hkTest3, hkRef3] = sub_select_Kfac2(kTest.(f(ii)).(subname), kRef.(f(ii)).(subname));\r","        end\r","    else\r","        [kTest1, kRef1, kTest2, kRef2] = sub_select_Kfac(kTest.(f(ii)), kRef.(f(ii)));\r","        if actuation_order == 5  %5th order actuation\r","            [hkTest1, hkRef1, hkTest2, hkRef2, hkTest3, hkRef3] = sub_select_Kfac2(kTest.(f(ii)), kRef.(f(ii)));\r","        end\r","    end\r","    \r","    bmmo_assert_equal(kTest1, kRef1, 5e-9, outfile, show_NOKs)\r","    bmmo_assert_equal(kTest2, kRef2, 5e-7, outfile, show_NOKs)\r","    bmmo_assert_equal(kTest3, kRef3, 5e-13, outfile, show_NOKs)\r","    \r","    if actuation_order == 5  %5th order actuation\r","        bmmo_assert_equal(hkTest1, hkRef1, 5e-5, outfile, show_NOKs)\r","        bmmo_assert_equal(hkTest2, hkRef2, 5e-3, outfile, show_NOKs)\r","        bmmo_assert_equal(hkTest3, hkRef3, 5e-1, outfile, show_NOKs)\r","    end\r","    \r","end\r","\r","\r","function  [kTest1, kRef1, kTest2, kRef2, kTest3, kRef3] = sub_select_Kfac(kTest, kRef)\r","    \r","k7_k12 ={ 'k7_','k8_','k9_','k10_','k11_','k12_'};\r","k13_k20 ={ 'k13_','k14_','k15_','k16_','k17_','k18_','k19_','k20_'};\r","\r","k7_k51 = { 'k7_','k8_','k9_','k10_','k11_','k12_','k13_','k14_','k15_','k16_','k17_','k18_','k19_','k20_','k22_','k24_','k25_','k26_','k27_','k29_','k32_','k34_','k36_','k37_','k39_','k41_','k46_','k48_','k51_'};\r","\r","fd =fieldnames(kTest);\r","\r","a = contains(fd,  k7_k12);\r","b = contains(fd,  k13_k20);\r","c = contains(fd, 'ovl_k');\r","\r","if contains(fd, k7_k51)\r","else\r","    error('NOK: structure contains k-factor variables that are not accounted for')\r","end\r","\r","new_fd1 = fd(a);\r","new_fd2 = fd(b);\r","new_fd3 = fd(c);\r","\r","for i=1:length(new_fd1)\r","    kTest1.(new_fd1{i}) = kTest.(new_fd1{i});\r","    kRef1.(new_fd1{i}) = kRef.(new_fd1{i});\r","end\r","\r","for i=1:length(new_fd2)\r","    kTest2.(new_fd2{i}) = kTest.(new_fd2{i});\r","    kRef2.(new_fd2{i}) = kRef.(new_fd2{i});\r","end\r","\r","kTest3 =  rmfield(kTest,new_fd3);\r","kRef3  =  rmfield(kRef,new_fd3);\r","\r","            \r","function  [kTest1, kRef1, kTest2, kRef2, kTest3, kRef3] = sub_select_Kfac2(kTest, kRef)\r","    \r","k22_k29 ={ 'k22_','k24_','k25_','k26_','k27_','k29_'};\r","k32_k41 ={ 'k32_','k34_','k36_','k37_','k39_','k41_'};\r","k46_k51 ={ 'k46_','k48_','k51_'};\r","\r","k7_k51 = { 'k7_','k8_','k9_','k10_','k11_','k12_','k13_','k14_','k15_','k16_','k17_','k18_','k19_','k20_','k22_','k24_','k25_','k26_','k27_','k29_','k32_','k34_','k36_','k37_','k39_','k41_','k46_','k48_','k51_'};\r","\r","fd =fieldnames(kTest);\r","\r","a = contains(fd,  k22_k29);\r","b = contains(fd,  k32_k41);\r","c = contains(fd,  k46_k51);\r","\r","if contains(fd, k7_k51)\r","else\r","    error('Structure contains k-factor variables that are not accounted for')\r","end\r","\r","new_fd1 = fd(a);\r","new_fd2 = fd(b);\r","new_fd3 = fd(c);\r","\r","for i=1:length(new_fd1)\r","    kTest1.(new_fd1{i}) = kTest.(new_fd1{i});\r","    kRef1.(new_fd1{i}) = kRef.(new_fd1{i});\r","end\r","\r","for i=1:length(new_fd2)\r","    kTest2.(new_fd2{i}) = kTest.(new_fd2{i});\r","    kRef2.(new_fd2{i}) = kRef.(new_fd2{i});\r","end\r","\r","for i=1:length(new_fd3)\r","    kTest3.(new_fd3{i}) = kTest.(new_fd3{i});\r","    kRef3.(new_fd3{i}) = kRef.(new_fd3{i});\r","end"],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[17,18,22,23,25,27,28,29,30,31,33,34,35,36,40,41,42,44,45,46,47,55,56,58,60,62,63,64,66,67,68,71,72,73,75,76,77,80,81,82,85,86,91,92,93,95,97,99,100,101,103,104,105,108,109,110,112,113,114,117,118,119,122,123,124],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}