var sourceData549 = {"FileContents":["function bmmo_create_ADEL_SBCrep(infile, outfile, sbc, SDM_res, SDM_kpi)\r","% function bmmo_create_ADEL_SBCrep(infile, outfile, sbc, SDM_res, SDM_kpi)\r","%\r","% Build a new ADEL SBC2 report on the template of an existing one\r","% replacing the applied correction data with the data from\r","% a Matlab sbc2 correction. Optionally, the applied correction results can\r","% also be replaced with the KPIs and residuals from inline SDM model\r","%  [~, ~, ~, SDM_kpi, resid] = BMMO_model_inlineSDM(ovl_get_wafers(flds, 1), ovl_get_wafers(flds, 2), 'LFP', 0);\r","\r","\r","% Input\r","%   infile: full path of ADEL SBC2 report from Twinscan\r","%   outfile: path of output file.\r","%   sbc: Matlab sbc correction (output by bmmo_nxe_drift_control_model)\r","%   SDM_kpi :  KPIs of inline SDM (output by  BMMO_model_inlineSDM)\r","%   SDM_res:  Residuals of inline SDM (output by  BMMO_model_inlineSDM)\r","\r","%machine id and doc id cannot be updated and z2 and z3 not *1e9\r","\r","xml_data = xml_load(infile);\r","\r","tmp_data = xml_data;\r","\r","%Optional Update for KPIs and resid from SDM model\r","%If inlineSDM model outputs not provided then, the values in the output report becomes zero\r","if  ~exist('SDM_res','var')\r","    \r","    for jj = 1:length(sbc.ffp)\r","        SDM_res.TotalRes(jj).dx=sbc.ffp(jj).dx*0;\r","        SDM_res.TotalRes(jj).dy=sbc.ffp(jj).dy*0;\r","        \r","    end\r","end\r","if  ~exist('SDM_kpi','var')\r","    %     if  isempty(SDM_kpi)\r","    \r","    for jj = 1:length(sbc.ffp)\r","        SDM_kpi.maxTotalRes(jj).dx=0;\r","        SDM_kpi.maxTotalRes(jj).dy=0;\r","        SDM_kpi.maxTotalCorr(jj).dx=0;\r","        SDM_kpi.maxTotalCorr(jj).dy=0;\r","        SDM_kpi.FadingMSD(jj).x=0;\r","        SDM_kpi.FadingMSD(jj).y=0;\r","        SDM_kpi.maxHOCCorr(jj).dx=0;\r","        SDM_kpi.maxHOCCorr(jj).dy=0;\r","        SDM_kpi.maxHOCRes(jj).dx=0;\r","        SDM_kpi.maxHOCRes(jj).dy=0;\r","    end\r","    SDM_kpi.maxLensRes.dy=0;\r","    SDM_kpi.maxLensRes.dx=0;\r","    SDM_kpi.maxLensCorr.dx=0;\r","    SDM_kpi.maxLensCorr.dy=0;\r","    SDM_kpi.Z2_2=0;\r","    SDM_kpi.Z3_2=0;\r","    \r","    \r","end\r","\r","mld = ovl_average_fields(ovl_create_dummy('13X19', 'nlayer', 1, 'nwafer', 2));\r","corr_out = sbc;\r","flds = bmmo_ffp_to_ml(sbc.ffp, mld);\r","\r","I = knnsearch([mld.wd.xf mld.wd.yf], [corr_out.ffp(1).x corr_out.ffp(1).y]);\r","for jj = 1:2\r","    res(jj).dx = SDM_res.TotalRes(jj).dx(I);\r","    res(jj).dy = SDM_res.TotalRes(jj).dy(I);\r","    res(jj).x = corr_out.ffp(jj).x;\r","    res(jj).y = corr_out.ffp(jj).y;\r","end\r","\r","for ic = 1:2\r","    chuck_id = 0;\r","    for tc = 1:2\r","        cid = str2double(xml_data.AppliedCorrectionResults.SdmDistortionResiduals(tc).elt.Header.ChuckId(end));\r","        if cid == ic\r","            chuck_id = tc;\r","        end\r","    end\r","    tmp_data.AppliedCorrectionResults.SdmDistortionResiduals(chuck_id).elt = ...\r","        sub_update_sdm_res(tmp_data.AppliedCorrectionResults.SdmDistortionResiduals(chuck_id).elt, res(ic));\r","    \r","    \r","end\r","% SDM Kpi HOC update\r","for ic = 1:2\r","    chuck_id = 0;\r","    for tc = 1:2\r","        cid = str2double(xml_data.AppliedCorrectionResults.KpiHocList(tc).elt.ChuckId(end));\r","        if cid == ic\r","            chuck_id = tc;\r","        end\r","    end\r","    tmp_data.AppliedCorrectionResults.KpiHocList(chuck_id).elt.KpiMaxCorrHoc.X = ...\r","        sprintf('%.3f', (SDM_kpi.maxHOCCorr(ic).dx * 1e9));\r","    tmp_data.AppliedCorrectionResults.KpiHocList(chuck_id).elt.KpiMaxCorrHoc.Y = ...\r","        sprintf('%.3f', (SDM_kpi.maxHOCCorr(ic).dy * 1e9));\r","    \r","    tmp_data.AppliedCorrectionResults.KpiHocList(chuck_id).elt.KpiMaxResHoc.X = ...\r","        sprintf('%.3f', (SDM_kpi.maxHOCRes(ic).dx * 1e9));\r","    tmp_data.AppliedCorrectionResults.KpiHocList(chuck_id).elt.KpiMaxResHoc.Y = ...\r","        sprintf('%.3f', (SDM_kpi.maxHOCRes(ic).dy * 1e9));\r","    \r","    tmp_data.AppliedCorrectionResults.KpiHocList(chuck_id).elt.KpiMaxCorrTotal.X = ...\r","        sprintf('%.3f', (SDM_kpi.maxTotalCorr(ic).dx * 1e9));\r","    tmp_data.AppliedCorrectionResults.KpiHocList(chuck_id).elt.KpiMaxCorrTotal.Y = ...\r","        sprintf('%.3f', (SDM_kpi.maxTotalCorr(ic).dy * 1e9));\r","    \r","    tmp_data.AppliedCorrectionResults.KpiHocList(chuck_id).elt.KpiMaxResTotal.X = ...\r","        sprintf('%.3f', (SDM_kpi.maxTotalRes(ic).dx * 1e9));\r","    tmp_data.AppliedCorrectionResults.KpiHocList(chuck_id).elt.KpiMaxResTotal.Y = ...\r","        sprintf('%.3f', (SDM_kpi.maxTotalRes(ic).dy * 1e9));\r","    \r","    tmp_data.AppliedCorrectionResults.KpiHocList(chuck_id).elt.KpiFading.MsdX = ...\r","        sprintf('%.3f', (SDM_kpi.FadingMSD(ic).x * 1e9));\r","    tmp_data.AppliedCorrectionResults.KpiHocList(chuck_id).elt.KpiFading.MsdY = ...\r","        sprintf('%.3f', (SDM_kpi.FadingMSD(ic).y * 1e9));\r","    \r","    \r","end\r","\r","\r","%SDM KPI POB/Lens Update\r","tmp_data.AppliedCorrectionResults.KpiPob.KpiMaxCorrPob.X= sprintf('%.3f', (SDM_kpi.maxLensCorr.dx * 1e9));\r","tmp_data.AppliedCorrectionResults.KpiPob.KpiMaxCorrPob.Y= sprintf('%.3f', (SDM_kpi.maxLensCorr.dy * 1e9));\r","tmp_data.AppliedCorrectionResults.KpiPob.KpiMaxResPob.X=sprintf('%.3f', (SDM_kpi.maxLensRes.dx * 1e9));\r","tmp_data.AppliedCorrectionResults.KpiPob.KpiMaxResPob.Y=sprintf('%.3f', (SDM_kpi.maxLensRes.dy * 1e9));\r","tmp_data.AppliedCorrectionResults.KpiPob.KpiZ2_2 =sprintf('%.3f', (SDM_kpi.Z2_2));\r","tmp_data.AppliedCorrectionResults.KpiPob.KpiZ3_2= sprintf('%.3f', (SDM_kpi.Z3_2 ));\r","\r","\r","for ic = 1:2\r","    chuck_id = 0;\r","    for tc = 1:2\r","        cid = str2double(xml_data.AppliedCorrectionList(tc).elt.MatchedInfoList.elt.CorrSetList.elt.CorrSetName(end));\r","        if cid == ic\r","            chuck_id = tc;\r","        end\r","    end\r","    \r","    % Verify\r","    % data.CorrectionSets(c).elt.ApplicationRange.Exposure.Wafer.WaferStageChuckId\r","    % is the same as the chuck id\r","    % xml_rep.AppliedCorrectionList(2).elt.MatchedInfoList.elt.CorrSetList\r","    tmp_data.AppliedCorrectionList(chuck_id).elt.Corrections.MiMirrorOffsetMapExpose = ...\r","        sub_update_mi(tmp_data.AppliedCorrectionList(chuck_id).elt.Corrections.MiMirrorOffsetMapExpose, sbc.MI.wse(ic));\r","    \r","    tmp_data.AppliedCorrectionList(chuck_id).elt.Corrections.MiMirrorOffsetMapMeasure = ...\r","        sub_update_mi(tmp_data.AppliedCorrectionList(chuck_id).elt.Corrections.MiMirrorOffsetMapMeasure, sbc.MI.wsm(ic));\r","    \r","    tmp_data.AppliedCorrectionList(chuck_id).elt.Corrections.BlueAlignmentOffset = ...\r","        sub_update_bao(tmp_data.AppliedCorrectionList(chuck_id).elt.Corrections.BlueAlignmentOffset, sbc.BAO(ic));\r","    \r","    tmp_data.AppliedCorrectionList(chuck_id).elt.Corrections.KaOffsetMapExpose = ...\r","        sub_update_ka(tmp_data.AppliedCorrectionList(chuck_id).elt.Corrections.KaOffsetMapExpose, sbc.KA.grid_2de(ic));\r","    \r","    tmp_data.AppliedCorrectionList(chuck_id).elt.Corrections.KaOffsetMapMeasure = ...\r","        sub_update_ka(tmp_data.AppliedCorrectionList(chuck_id).elt.Corrections.KaOffsetMapMeasure, sbc.KA.grid_2dc(ic));\r","    \r","    tmp_data.AppliedCorrectionList(chuck_id).elt.Corrections.SdmDistortionMap = ...\r","        sub_update_intraf(tmp_data.AppliedCorrectionList(chuck_id).elt.Corrections.SdmDistortionMap, sbc.ffp(ic));\r","    \r","    tmp_data.AppliedCorrectionList(chuck_id).elt.Corrections.WaferHeatingOffset.Ir2EuvRatioOffset = sprintf('%.4f', sbc.IR2EUV);\r","    \r","end\r","\r","%sorting SUSD intrafield offsets for correction\r","\r","if length(xml_data.AppliedCorrectionList)>2\r","    IFO_corr_set_ind = arrayfun(@(x) ~(endsWith(x.elt.MatchedInfoList.elt.CorrSetList.elt.CorrSetName, num2str(1)) | endsWith(x.elt.MatchedInfoList.elt.CorrSetList.elt.CorrSetName, num2str(2))), xml_data.AppliedCorrectionList);\r","    IFO_corr_set = xml_data.AppliedCorrectionList(IFO_corr_set_ind);\r","    IFO_corr_set_names = arrayfun(@(x) x.elt.MatchedInfoList.elt.CorrSetList.elt.CorrSetName, IFO_corr_set, 'UniformOutput', false);\r","    [~, IFO_corr_set_ind_sorted] = sort(IFO_corr_set_names);\r","    \r","    \r","    for icorr_IFO = 1:length(IFO_corr_set_ind_sorted)\r","        IFO_corr_set(IFO_corr_set_ind_sorted(icorr_IFO)).elt.Corrections.IntraFieldOffset = ...\r","            sub_update_susd(IFO_corr_set(IFO_corr_set_ind_sorted(icorr_IFO)).elt.Corrections.IntraFieldOffset,...\r","            sbc.SUSD(icorr_IFO));\r","    end\r","    \r","    tmp_data.AppliedCorrectionList(IFO_corr_set_ind) = IFO_corr_set;\r","end\r","\r","\r","machine='0000';\r","tmp_data.Header = sub_update_header(tmp_data.Header, machine);\r","\r","recipe_version = xml_data.Header.DocumentTypeVersion;\r","\r","str1=string('xmlns:ADELsbcOverlayDriftControlNxerep=\"http://www.asml.com/XMLSchema/MT/Generic/ADELsbcOverlayDriftControlNxerep/vx.x\"');\r","str2=string('xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"');\r","str3=string('xsi:schemaLocation=\"http://www.asml.com/XMLSchema/MT/Generic/ADELsbcOverlayDriftControlNxerep/vx.x ADELsbcOverlayDriftControlNxerep.xsd\"');\r","schema_info = compose(str1 + '\\n' + str2 + '\\n' + str3);\r","schema_info = strrep(schema_info, 'vx.x', recipe_version);\r","bmmo_xml_save(outfile, tmp_data, 'ADELsbcOverlayDriftControlNxerep:Report', schema_info);\r","\r","\r","function header_out = sub_update_header(header_in, machine_id)\r","\r","header_out = header_in;\r","\r","dateformat = 'YYYY-mm-DDTHH:MM:SS';\r","doctime = now;\r","header_out.CreateTime = datestr(doctime, dateformat);\r","% header_out.LastModifiedTime = datestr(doctime, dateformat);\r","% header_out.MachineID = num2str(machine_id);\r","\r","\r","\r","\r","%Document ID left same as the orginal report\r","% docid_dateformat = 'YYYYmmDD_HHMM';\r","% doc_timestr = datestr(doctime, docid_dateformat);\r","% header_out.DocumentId = ['ADELsbc2-' num2str(machine_id) '-' doc_timestr];\r","\r","\r","\r","function mi_out = sub_update_mi(mi_in, sbc_mi)\r","\r","mi_out = mi_in;\r","\r","for ii = 1:length(mi_out.XTYMirrorMap.Offsets)\r","    dy_offset = sprintf('%.2f', (sbc_mi.y_mirr.dy(ii) * 1e9));\r","    mi_out.XTYMirrorMap.Offsets(ii).elt = dy_offset;\r","    dx_offset = sprintf('%.2f', (sbc_mi.x_mirr.dx(ii) * 1e9));\r","    mi_out.YTXMirrorMap.Offsets(ii).elt = dx_offset;\r","end\r","\r","function bao_out = sub_update_bao(bao_in, sbc_bao)\r","\r","bao_out = bao_in;\r","\r","bao_out.IntraField.Translation.X     =  sprintf('%.3f', (sbc_bao.TranslationX * 1e9));\r","bao_out.IntraField.Translation.Y     =  sprintf('%.3f', (sbc_bao.TranslationY * 1e9));\r","bao_out.IntraField.Magnification     =  sprintf('%.3f', (sbc_bao.Magnification * 1e6));\r","bao_out.IntraField.Rotation          =  sprintf('%.4f', (sbc_bao.Rotation * 1e6));\r","bao_out.IntraField.AsymRotation      =  sprintf('%.4f', (sbc_bao.AsymRotation * 1e6));\r","bao_out.IntraField.AsymMagnification =  sprintf('%.3f', (sbc_bao.AsymMagnification * 1e6));\r","bao_out.InterField.Translation.X     =  sprintf('%.3f', 0.0);\r","bao_out.InterField.Translation.Y     =  sprintf('%.3f', 0.0);\r","bao_out.InterField.Rotation          =  sprintf('%.4f', (sbc_bao.InterfieldRotation * 1e6));\r","bao_out.InterField.NonOrthogonality  =  sprintf('%.4f', (sbc_bao.NonOrtho * 1e6));\r","bao_out.InterField.Expansion.X       =  sprintf('%.4f', (sbc_bao.ExpansionX * 1e6));\r","bao_out.InterField.Expansion.Y       =  sprintf('%.4f', (sbc_bao.ExpansionY * 1e6));\r","\r","\r","function ka_out = sub_update_ka(ka_in, sbc_ka)\r","\r","ka_out = ka_in;\r","\r","for ii = 1:length(ka_out.Offsets)\r","    if isnan(sbc_ka.dy(ii)) || isnan(sbc_ka.dx(ii))\r","        dy_offset = sprintf('%.2f', (0 * 1e9));\r","        ka_out.Offsets(ii).elt.Y = dy_offset;\r","        dx_offset = sprintf('%.2f', (0 * 1e9));\r","        ka_out.Offsets(ii).elt.X = dx_offset;\r","        ka_out.Offsets(ii).elt.valid = 'false';\r","    else\r","        dy_offset = sprintf('%.2f', (sbc_ka.dy(ii) * 1e9));\r","        ka_out.Offsets(ii).elt.Y = dy_offset;\r","        dx_offset = sprintf('%.2f', (sbc_ka.dx(ii) * 1e9));\r","        ka_out.Offsets(ii).elt.X = dx_offset;\r","        ka_out.Offsets(ii).elt.valid = 'true';\r","    end\r","end\r","\r","function intraf_out = sub_update_intraf(intraf_in, sbc_intraf)\r","\r","xu = unique(sbc_intraf.x);\r","yu = unique(sbc_intraf.y);\r","\r","[xg, yg] = meshgrid(xu, yu);\r","xg = xg(:);\r","yg = yg(:);\r","\r","I = knnsearch([xg yg], [sbc_intraf.x sbc_intraf.y]);\r","\r","dxmap = sbc_intraf.dx(I);\r","dymap = sbc_intraf.dy(I);\r","\r","intraf_out = intraf_in;\r","\r","for ii = 1:length(intraf_out.Offsets)\r","    intraf_out.Offsets(ii).elt.X = sprintf('%.2f', (dxmap(ii) * 1e9));\r","    intraf_out.Offsets(ii).elt.Y = sprintf('%.2f', (dymap(ii) * 1e9));\r","end\r","\r","function sdm_res_out = sub_update_sdm_res(sdm_res_in, res)\r","\r","xu = unique(res.x);\r","yu = unique(res.y);\r","\r","[xg, yg] = meshgrid(xu, yu);\r","xg = xg(:);\r","yg = yg(:);\r","\r","I = knnsearch([xg yg], [res.x res.y]);\r","\r","dxmap = res.dx(I);\r","dymap = res.dy(I);\r","\r","sdm_res_out = sdm_res_in;\r","\r","for ii = 1:length(sdm_res_out.Offsets)\r","    sdm_res_out.Offsets(ii).elt.X = sprintf('%.2f', (dxmap(ii) * 1e9));\r","    sdm_res_out.Offsets(ii).elt.Y = sprintf('%.2f', (dymap(ii) * 1e9));\r","end\r","\r","\r","function susd_out = sub_update_susd(susd_in, sbc_susd)\r","\r","susd_out = susd_in;\r","\r","susd_out.Translation.X     =  sprintf('%.3f', (sbc_susd.TranslationX * 1e9));\r","susd_out.Translation.Y     =  sprintf('%.3f', (sbc_susd.TranslationY * 1e9));\r","susd_out.Magnification     =  sprintf('%.3f', (sbc_susd.Magnification * 1e6));\r","susd_out.Rotation          =  sprintf('%.4f', (sbc_susd.Rotation * 1e6));\r","susd_out.AsymRotation      =  sprintf('%.4f', (sbc_susd.AsymRotation * 1e6));\r","susd_out.AsymMagnification =  sprintf('%.3f', (sbc_susd.AsymMagnification * 1e6));"],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[20,22,26,28,29,30,34,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,59,60,61,63,64,65,66,67,68,71,72,73,74,75,76,79,80,85,86,87,88,89,90,93,94,95,96,98,99,100,101,103,104,105,106,108,109,110,111,113,114,115,116,123,124,125,126,127,128,131,132,133,134,135,136,144,145,147,148,150,151,153,154,156,157,159,160,162,168,169,170,171,172,175,176,177,178,181,185,186,188,190,191,192,193,194,195,200,202,203,204,220,222,223,224,225,226,231,233,234,235,236,237,238,239,240,241,242,243,244,249,251,252,253,254,255,256,257,258,259,260,261,262,263,269,270,272,273,274,276,278,279,281,283,284,285,290,291,293,294,295,297,299,300,302,304,305,306,312,314,315,316,317,318,319],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}