var sourceData275 = {"FileContents":["classdef testBmmoFitFingerprints <BMMO_XY.tools.testSuite\r","\r","    methods(Test)\r","        \r","        function test_bmmo_fit_fingerprints_oulier_removal(obj)             \r","            % Given\r","            load([bmmo_testdata_root filesep 'construct_FPS.mat']);\r","            load([bmmo_testdata_root filesep 'fit_fingerprints.mat']);\r","            wafer = 1;\r","            options2 = options;\r","            options2.chuck_usage.chuck_id = options2.chuck_usage.chuck_id(wafer);\r","            options2.chuck_usage.chuck_id_used = options2.chuck_usage.chuck_id;\r","            options2.chuck_usage.nr_chuck_used = 1;\r","            \r","            % When\r","            [test_coefficients_c1, test_fps_fit_c1, test_ml_res_c1] = bmmo_fit_fingerprints(mli_drift, FPS, options2, C);\r","            \r","            % Then\r","            obj.verifyWithinTol(test_coefficients_c1, coefficients_c1)\r","            obj.verifyWithinTol(test_ml_res_c1, ml_res_c1)\r","            obj.verifyWithinTol(test_fps_fit_c1, fps_fit_c1)\r","            \r","            %%\r","            % Given\r","            wafer = 2;\r","            options3 = options;\r","            options3.chuck_usage.chuck_id = options3.chuck_usage.chuck_id(wafer);\r","            options3.chuck_usage.chuck_id_used = options3.chuck_usage.chuck_id;\r","            options3.chuck_usage.nr_chuck_used = 1;\r","            \r","            % When\r","            [test_coefficients_c2, test_fps_fit_c2, test_ml_res_c2] = bmmo_fit_fingerprints(mli_drift, FPS, options3, C);\r","            \r","            % Then\r","            obj.verifyWithinTol(test_coefficients_c2, coefficients_c2)\r","            obj.verifyWithinTol(test_ml_res_c2, ml_res_c2)\r","            obj.verifyWithinTol(test_fps_fit_c2, fps_fit_c2)\r","        end\r","        \r","        function test_bmmo_fit_fingerprints_combined_model(obj)            \r","            % Given\r","            load([bmmo_testdata_root filesep 'construct_FPS.mat']);\r","            load([bmmo_testdata_root filesep 'fit_fingerprints.mat']);\r","            \r","            % When\r","            [test_coefficients, test_fps_fit, test_ml_res] = bmmo_combined_model(mli_drift, FPS, options, C);\r","            \r","            % Then\r","            obj.verifyWithinTol(test_coefficients, coefficients)\r","            obj.verifyWithinTol(test_ml_res, ml_res)\r","            obj.verifyWithinTol(test_fps_fit, fps_fit)            \r","        end\r","        \r","    end\r","    \r","end"],"CoverageData":{"CoveredLineNumbers":[7,8,9,10,11,12,13,16,19,20,21,25,26,27,28,29,32,35,36,37,42,43,46,49,50,51],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,0,0,0,1,1,1,1,1,0,0,1,0,0,1,1,1,0,0,0,0,1,1,0,0,1,0,0,1,1,1,0,0,0,0,0]}}