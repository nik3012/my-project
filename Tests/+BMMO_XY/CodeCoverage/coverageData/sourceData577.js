var sourceData577 = {"FileContents":["function [input_structs, sbcs,  dates, kpis, jobreps] = bmmo_read_all_zips(input_folder)\r","% function [input_structs, sbcs,  dates, kpis] = bmmo_read_all_zips(input_folder)\r","%\r","% Read all LCP/VCP .zip files in a given folder, generating a vector of model\r","% inputs, SBC corrections,  dates, and KPI data\r","%\r","% Input\r","%   input_folder: folder containing n LCP/VCP .zip files output from BMMO-NXE\r","%   jobs\r","%\r","% Output\r","%   input_structs: 1xn vector of valid BMMO-NXE input structures, as\r","%       extracted from the zip files\r","%   sbcs: 1xn vector of SBC corrections as output by each job\r","%   dates: 1xn vector of datetime structures\r","%   kpis: 1xn vector of KPI structures\r","%\r","% 20180418 SBPR Added documentation\r","% 20190222 SELR Added jobreps as output, fixed skipping of invalid zips\r","% 20200918 ANBZ Kept dates as created time for VCP, since no Jobstarted field present\r","%               in Job report\r","\r","zipfiles = dir([input_folder filesep '*.zip']);\r","\r","if ~isempty(zipfiles)\r","    zipfilenames = arrayfun(@(x) [x.folder filesep x.name], zipfiles, 'UniformOutput', false);\r","    \r","    numfiles = length(zipfilenames);\r","    \r","    for ii = 1:numfiles\r","        try     \r","            [input_structs(ii), ~, sbcs(ii), jobreps(ii)] = bmmo_read_lcp_zip(zipfilenames{ii});\r","            % case: VCP job_report\r","            if strcmp(jobreps(ii).Header.DocumentType, 'ADELbmmoOverlayJobReport')\r","                dates(ii) = bmmo_parse_adel_timestamp(jobreps(ii).Header.CreateTime);\r","                kpis(ii) = bmmo_parse_lcp_report(jobreps(ii));\r","            % case: LCP job_report\r","            else\r","                dates(ii) = bmmo_parse_adel_timestamp(jobreps(ii).Input.WaferMapping(1).elt.ExposureContext.LotStart);\r","                kpis(ii) = bmmo_parse_lcp_report(jobreps(ii));\r","            end\r","            \r","        catch\r","            warning(['Invalid BMMO-NXE zip file, skipping.... ' zipfilenames{ii}]);\r","        end\r","        \r","        \r","        \r","        \r","    end\r","else\r","    error('No .zip files found in folder');\r","end"],"CoverageData":{"CoveredLineNumbers":[23,25,26,28,30,31,32,34,35,36,38,39,40],"UnhitLineNumbers":[43,44,51,52],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,1,4,4,0,4,2,2,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0]}}