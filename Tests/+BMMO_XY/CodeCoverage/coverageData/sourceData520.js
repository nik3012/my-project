var sourceData520 = {"FileContents":["function [res, sbc, kpi] = bmmo_model(ml)\r","% function [res, sbc, kpi] = bmmo_model(ml)\r","%\r","% Perform BMMO-NXE modelling on arbitrary input, with the same output\r","% order as ovl_model\r","%\r","% Note: if ml is not a valid BMMO-NXE input, it will be converted assuming\r","% a default chuck order (alternating chucks beginning with 1) and zero WH\r","% fingerprint\r","%\r","% Input:\r","%   ml: arbitrary overlay structure\r","%\r","% Output:\r","%   res: residual after applying modelled SBC2 (self-correction)\r","%   sbc: modelled SBC2\r","%   kpi: KPI from modelling\r","%\r","% 20171130 SBPR Creation\r","\r","mlt = ml;\r","try\r","    [mlp, options] = bmmo_process_input(mlt);\r","    bmmo_input =1;\r","catch\r","    warning('Invalid BMMO-NXE model input: using default chuck order and zero WH fingerprint');\r","    mlt = bmmo_convert_generic_ml(ml);\r","    [mlp, options] = bmmo_process_input(mlt);\r","end\r","\r","model_results = bmmo_run_submodels(mlp, options);\r","output_struct = bmmo_process_output(mlt, model_results, options);\r","\r","sbc = output_struct.corr;\r","kpi = output_struct.report.KPI;\r","\r","if bmmo_input\r","    fps = bmmo_apply_SBC(mlt, sbc);\r","else\r","    fps = bmmo_apply_SBC_to_ml(mlt, sbc);\r","end\r","\r","res = ovl_add(mlp, fps.TotalSBCcorrection);\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[21,22,23,24,25,26,27,28,31,32,34,35,37,38,39,40,43],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}