var sourceData715 = {"FileContents":["function tests = test_bl3_convergence_input\r","tests = functiontests(localfunctions);\r","end\r","\r","function test_20x_sim_control_SMKBI_1L_MIKA_EDGE(test)\r","\r","input_struct = bmmo_input_to_bl3(bmmo_default_input);\r","input_struct = bmmo_turn_off_l2(input_struct);\r","input_struct.info.report_data.time_filtering_enabled = 1;\r","input_struct.info.configuration_data.susd_correction_enabled = 1;\r","input_struct.info.configuration_data.KA_correction_enabled = 1;\r","\r","% use random input with noise\r","mi_input = bmmo_simulate_random_input(input_struct, 'SMKBI', 1);\r","mi_input.info.report_data.cet_residual = [];\r","assert(sub_evaluate_full_convergence_run(mi_input, 0));\r","end\r","\r","function test_20x_sim_recover_MKBI_1L_MIKA_EDGE(test)\r","\r","input_struct = bmmo_input_to_bl3(bmmo_default_input);\r","input_struct = bmmo_turn_off_l2(input_struct);\r","input_struct.info.configuration_data.susd_correction_enabled = 0;\r","input_struct.info.configuration_data.KA_correction_enabled = 1;\r","\r","% use random input with noise\r","mi_input = bmmo_simulate_random_input(input_struct, 'MKBI', 1);\r","mi_input.info.report_data.cet_residual = [];\r","assert(sub_evaluate_full_convergence_run(mi_input, 0));\r","end\r","\r","function test_20x_sim_control_SMKBI_2L_MIKA_EDGE(test)\r","\r","input_struct = bmmo_input_to_bl3(bmmo_default_input);\r","input_struct = bmmo_add_default_whff(input_struct);\r","input_struct.info.report_data.time_filtering_enabled = 1;\r","input_struct.info.configuration_data.susd_correction_enabled = 1;\r","input_struct.info.configuration_data.KA_correction_enabled = 1;\r","\r","% use random input with noise\r","mi_input = bmmo_simulate_random_input(input_struct, 'WSMKBI', 1);\r","mi_input.info.report_data.cet_residual = [];\r","assert(sub_evaluate_full_convergence_run(mi_input, 0));\r","end\r","\r","function test_20x_sim_recover_MKBI_2L_MIKA_EDGE(test)\r","\r","input_struct = bmmo_input_to_bl3(bmmo_default_input);\r","input_struct = bmmo_add_default_whff(input_struct);\r","input_struct.info.configuration_data.susd_correction_enabled = 0;\r","input_struct.info.configuration_data.KA_correction_enabled = 1;\r","\r","% use random input with noise\r","mi_input = bmmo_simulate_random_input(input_struct, 'WMKBI', 1);\r","mi_input.info.report_data.cet_residual = [];\r","assert(sub_evaluate_full_convergence_run(mi_input, 0));\r","end\r","\r","function pass = sub_evaluate_full_convergence_run(mli, noise)\r","\r","runs_to_compare = [2 10 19 20];\r","fps = bmmo_convergence_run(mli, 20, noise, runs_to_compare);\r","\r","fn = fieldnames(fps);\r","\r","pass = true;\r","\r","% diff threshold is a function of noise\r","thresh = 5e-11 + (1e-9 * (noise / 3)); %TODO check value\r","\r","for ii = 1:length(fn)\r","    \r","    % only compare intermediate runs if recover to baseline filter is\r","    % active. Otherwise the models take longer to converge\r","    if ~mli.info.report_data.time_filtering_enabled\r","        % compare the ovl of run 2 and 20, all sub-models and total\r","        pass = pass && sub_compare_runs(fps, 4, 1, fn{ii}, thresh);\r","        \r","        % compare the ovl of run 10 and 20, all sub-models and total\r","        pass =  pass && sub_compare_runs(fps, 4, 2, fn{ii}, thresh);\r","    end\r","    \r","    % compare the ovl of run 19 and 20, all sub-models and total\r","    pass =  pass && sub_compare_runs(fps, 4, 3, fn{ii}, thresh);\r","end\r","end\r","\r","function pass = sub_compare_runs(fps, n1, n2, fname, thresh)\r","\r","diff = ovl_sub(fps(n1).(fname), fps(n2).(fname));\r","ov_diff = ovl_calc_overlay(diff);\r","pass = ((ov_diff.ox997 < thresh) & (ov_diff.oy997 < thresh));\r","end"],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[2,7,8,9,10,11,14,15,16,21,22,23,24,27,28,29,34,35,36,37,38,41,42,43,48,49,50,51,54,55,56,61,62,64,66,69,71,75,77,80,84,90,91,92],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}