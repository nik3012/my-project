var sourceData10 = {"FileContents":["function ml_bao = bmmo_BAO_SBC_fingerprint(mli, fingerprint, options)\r","% function ml_bao = bmmo_BAO_SBC_fingerprint(mli, fingerprint, options)\r","%\r","% This function returns an ml structure corresponding to the input SBC\r","% BAO correction\r","%\r","% Input:\r","% mli: input ml structure\r","% fingerprint: BAO correction (1x2 struct array)\r","% options: BMMO/BL3 option structure\r","%\r","% Output:\r","% ml_bao: output ml structure containing the BAO fingerprint in the same layout as mli\r","%\r","% For details of the model and definitions of in/out interfaces, refer to\r","% D000810611 EDS BMMO NXE drift control model\r","\r","ml_bao = mli;\r","\r","% Convert the BAO correction to 10 par\r","for ichuck = 1:2\r","    parlist(ichuck) = bmmo_BAO_to_10par(fingerprint(ichuck));\r","end\r","\r","for iwafer = 1:mli.nwafer\r","    for ilayer = 1:length(mli.layer)\r","        this_chuck_id = options.chuck_usage.chuck_id(iwafer);\r","        this_wafer = ovl_get_subset(mli, ilayer, iwafer);\r","        ml_par_this_wafer = ovl_model(ovl_combine_linear(this_wafer, 0),'apply',parlist(this_chuck_id));\r","        ml_bao.layer(ilayer).wr(iwafer).dx = ml_par_this_wafer.layer.wr.dx;\r","        ml_bao.layer(ilayer).wr(iwafer).dy = ml_par_this_wafer.layer.wr.dy;\r","    end\r","end"],"CoverageData":{"CoveredLineNumbers":[18,21,22,25,26,27,28,29,30,31],"UnhitLineNumbers":[],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,643,0,0,643,1286,0,0,643,3306,3306,3306,3306,3306,3306,0,0]}}