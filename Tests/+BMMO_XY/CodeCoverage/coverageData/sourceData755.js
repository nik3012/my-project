var sourceData755 = {"FileContents":["function ml_out = bmmo_map_smf_to_ml(mli)\r","\r","mld = bmmo_get_wafers(bmmo_default_input, 1:mli.nwafer);\r","mld.configurable_options.mark_type = 'xpa';\r","mlp = bmmo_process_input(mld);\r","mlp = bmmo_shift_fields(mlp, 0, 520e-6);\r","mlo = ovl_get_fields(mlp, [1:87]);\r","mlo2 = ovl_get_fields(mlp, [125 136]);\r","ml_temp = ovl_get_fields(mlp, [1:87 125 136]);\r","\r","K = 10;\r","% find possible l1 and l2 shifts\r","[xs1, ys1] = sub_get_shifts(mli, mlo, K);\r","[xs2, ys2] = sub_get_shifts(mli, mlo2, K);\r","    \r","for ix1 = 1:length(xs1)\r","    for iy1 = 1:length(ys1)\r","        for ix2 = 1:length(xs2)\r","            for iy2 = 1:length(ys2)\r","                \r","                x_s_l1 = xs1(ix1);\r","                y_s_l1 = ys1(iy1);\r","                x_s_l2 = xs2(ix2);\r","                y_s_l2 = ys2(iy2);\r","                \r","                disp(['trying [', num2str(x_s_l1), ' ', num2str(y_s_l1), ' ', num2str(x_s_l2), ' ', num2str(y_s_l2), ']']); \r","                \r","                mlo_t = bmmo_shift_fields(mlo, x_s_l1, y_s_l1);\r","                % mlo = bmmo_shift_fields(mlo, 0, 520e-6);\r","\r","                mlo2_t = bmmo_shift_fields(mlo2, x_s_l2, y_s_l2);\r","                % mlo2 = bmmo_shift_fields(mlo2, 0, 0.0018);\r","                mlo_t = ovl_combine_layout(mlo_t, mlo2_t);\r","\r","                % For each point in mli, find the index of the closest point in\r","                % mlp\r","                % figure, plot(mlo.wd.xw, mlo.wd.yw, 'bo');\r","                % hold, plot(mli.wd.xw, mli.wd.yw, 'rx');\r","                I = knnsearch([mlo_t.wd.xw, mlo_t.wd.yw], [mli.wd.xw, mli.wd.yw]);\r","\r","                % make sure there is a one-to-one mapping\r","                if(isequal(length(unique(I)), length(I)))\r","                    %, 'Failed to make one-to-one point mapping');\r","                    disp('Found one-to-one mapping!');\r","\r","                    ml_out = mlp;\r","                    \r","                    for il = 1:mli.nlayer\r","                        for iw = 1:mli.nwafer\r","                            ml_out.layer(il).wr(iw).dx = nan * ml_out.layer(il).wr(iw).dx;\r","                            ml_out.layer(il).wr(iw).dy = nan * ml_out.layer(il).wr(iw).dy;\r","                            ml_out.layer(il).wr(iw).dx(I) = mli.layer(il).wr(iw).dx;\r","                            ml_out.layer(il).wr(iw).dy(I) = mli.layer(il).wr(iw).dy;\r","                        end\r","                    end\r","                    return;\r","                end\r","            end\r","        end\r","    end\r","end\r","\r","assert(false, 'Failed to find one-to-one mapping');\r","\r","\r","function [xs, ys] = sub_get_shifts(mli, mlo, n)\r","\r","\r","\r","[I, D1] = knnsearch([mlo.wd.xw, mlo.wd.yw], [mli.wd.xw, mli.wd.yw], 'k', n);\r","\r","% get subscript indices of n closest values\r","[~, xsi] = min(abs(D1));\r","\r","% Get linear indixes from subscript indices\r","lsi = sub2ind(size(D1), xsi, 1:size(D1, 2));\r","\r","% Get the xw and yw deltas for each\r","\r","x_shifts = mlo.wd.xw(I(lsi)) - mli.wd.xw(xsi);\r","y_shifts = mlo.wd.yw(I(lsi)) - mli.wd.yw(xsi);\r","\r","xs = unique(x_shifts);\r","ys = unique(y_shifts);\r","\r",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[3,4,5,6,7,8,9,11,13,14,16,17,18,19,21,22,23,24,26,28,31,33,39,42,44,46,48,49,50,51,52,53,56,63,70,73,76,80,81,83,84],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}